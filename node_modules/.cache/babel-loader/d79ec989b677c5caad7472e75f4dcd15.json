{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/pivot_grid/sortable/item_render.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterWidth } from \"../../../core/utils/size\";\nimport { each } from \"../../../core/utils/iterator\";\nimport $ from \"../../../core/renderer\";\nimport { SortableConst } from \"./const\";\nfunction getTreeViewItem($sourceItem) {\n  return $sourceItem.clone().addClass(SortableConst.classes.areaBox).css(\"width\", parseInt(getOuterWidth($sourceItem)));\n}\nfunction getAreaBoxItem($sourceItem, target) {\n  var $item = $sourceItem.clone();\n  if (target === SortableConst.targets.drag) {\n    each($sourceItem, function (idx, sourceItem) {\n      var width = parseInt(getOuterWidth(sourceItem), 10);\n      $item.eq(idx).css(\"width\", width);\n    });\n  }\n  return $item;\n}\nfunction getDefaultItem($sourceItem) {\n  return $(\"<div>\").addClass(SortableConst.classes.areaField).addClass(SortableConst.classes.areaBox).text($sourceItem.text());\n}\nfunction getItem($sourceItem, target) {\n  var isAreaBox = $sourceItem.hasClass(SortableConst.classes.areaBox);\n  var isTreeList = $sourceItem.attr(SortableConst.attrs.treeViewItem);\n  if (isAreaBox) {\n    return getAreaBoxItem($sourceItem, target);\n  }\n  if (isTreeList) {\n    return getTreeViewItem($sourceItem);\n  }\n  return getDefaultItem($sourceItem);\n}\nfunction wrapInFieldsContainer($item) {\n  return $(\"<div>\").addClass(SortableConst.classes.fieldsContainer).addClass(SortableConst.classes.widget).append($item);\n}\nexport function sortableItemRender($sourceItem, target) {\n  var $item = getItem($sourceItem, target);\n  return target === SortableConst.targets.drag ? wrapInFieldsContainer($item) : $item;\n}","map":null,"metadata":{},"sourceType":"module"}