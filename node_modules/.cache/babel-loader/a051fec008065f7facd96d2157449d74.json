{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n/**\r\n * DevExtreme (esm/file_management/provider_base.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { compileGetter } from \"../core/utils/data\";\nimport { ensureDefined } from \"../core/utils/common\";\nimport dateSerialization from \"../core/utils/date_serialization\";\nimport { each } from \"../core/utils/iterator\";\nimport { isPromise } from \"../core/utils/type\";\nimport { Deferred, fromPromise } from \"../core/utils/deferred\";\nimport FileSystemItem from \"./file_system_item\";\nvar DEFAULT_FILE_UPLOAD_CHUNK_SIZE = 2e5;\nvar FileSystemProviderBase = /*#__PURE__*/function () {\n  function FileSystemProviderBase(options) {\n    _classCallCheck(this, FileSystemProviderBase);\n    options = ensureDefined(options, {});\n    this._keyGetter = compileGetter(this._getKeyExpr(options));\n    this._nameGetter = compileGetter(this._getNameExpr(options));\n    this._isDirGetter = compileGetter(this._getIsDirExpr(options));\n    this._sizeGetter = compileGetter(this._getSizeExpr(options));\n    this._dateModifiedGetter = compileGetter(this._getDateModifiedExpr(options));\n    this._thumbnailGetter = compileGetter(options.thumbnailExpr || \"thumbnail\");\n  }\n  _createClass(FileSystemProviderBase, [{\n    key: \"getItems\",\n    value: function getItems(parentDirectory) {\n      return [];\n    }\n  }, {\n    key: \"renameItem\",\n    value: function renameItem(item, name) {}\n  }, {\n    key: \"createDirectory\",\n    value: function createDirectory(parentDirectory, name) {}\n  }, {\n    key: \"deleteItems\",\n    value: function deleteItems(items) {}\n  }, {\n    key: \"moveItems\",\n    value: function moveItems(items, destinationDirectory) {}\n  }, {\n    key: \"copyItems\",\n    value: function copyItems(items, destinationDirectory) {}\n  }, {\n    key: \"uploadFileChunk\",\n    value: function uploadFileChunk(fileData, chunksInfo, destinationDirectory) {}\n  }, {\n    key: \"abortFileUpload\",\n    value: function abortFileUpload(fileData, chunksInfo, destinationDirectory) {}\n  }, {\n    key: \"downloadItems\",\n    value: function downloadItems(items) {}\n  }, {\n    key: \"getItemsContent\",\n    value: function getItemsContent(items) {}\n  }, {\n    key: \"getFileUploadChunkSize\",\n    value: function getFileUploadChunkSize() {\n      return DEFAULT_FILE_UPLOAD_CHUNK_SIZE;\n    }\n  }, {\n    key: \"_convertDataObjectsToFileItems\",\n    value: function _convertDataObjectsToFileItems(entries, pathInfo) {\n      var _this = this;\n      var result = [];\n      each(entries, function (_, entry) {\n        var fileItem = _this._createFileItem(entry, pathInfo);\n        result.push(fileItem);\n      });\n      return result;\n    }\n  }, {\n    key: \"_createFileItem\",\n    value: function _createFileItem(dataObj, pathInfo) {\n      var key = this._keyGetter(dataObj);\n      var fileItem = new FileSystemItem(pathInfo, this._nameGetter(dataObj), !!this._isDirGetter(dataObj), key);\n      fileItem.size = this._sizeGetter(dataObj);\n      if (void 0 === fileItem.size) {\n        fileItem.size = 0;\n      }\n      fileItem.dateModified = dateSerialization.deserializeDate(this._dateModifiedGetter(dataObj));\n      if (void 0 === fileItem.dateModified) {\n        fileItem.dateModified = new Date();\n      }\n      if (fileItem.isDirectory) {\n        fileItem.hasSubDirectories = this._hasSubDirs(dataObj);\n      }\n      if (!key) {\n        fileItem.key = fileItem.relativeName;\n      }\n      fileItem.thumbnail = this._thumbnailGetter(dataObj) || \"\";\n      fileItem.dataItem = dataObj;\n      return fileItem;\n    }\n  }, {\n    key: \"_hasSubDirs\",\n    value: function _hasSubDirs(dataObj) {\n      return true;\n    }\n  }, {\n    key: \"_getKeyExpr\",\n    value: function _getKeyExpr(options) {\n      return options.keyExpr || this._defaultKeyExpr;\n    }\n  }, {\n    key: \"_defaultKeyExpr\",\n    value: function _defaultKeyExpr(fileItem) {\n      if (2 === arguments.length) {\n        fileItem.__KEY__ = arguments[1];\n        return;\n      }\n      return Object.prototype.hasOwnProperty.call(fileItem, \"__KEY__\") ? fileItem.__KEY__ : null;\n    }\n  }, {\n    key: \"_getNameExpr\",\n    value: function _getNameExpr(options) {\n      return options.nameExpr || \"name\";\n    }\n  }, {\n    key: \"_getIsDirExpr\",\n    value: function _getIsDirExpr(options) {\n      return options.isDirectoryExpr || \"isDirectory\";\n    }\n  }, {\n    key: \"_getSizeExpr\",\n    value: function _getSizeExpr(options) {\n      return options.sizeExpr || \"size\";\n    }\n  }, {\n    key: \"_getDateModifiedExpr\",\n    value: function _getDateModifiedExpr(options) {\n      return options.dateModifiedExpr || \"dateModified\";\n    }\n  }, {\n    key: \"_executeActionAsDeferred\",\n    value: function _executeActionAsDeferred(action, keepResult) {\n      var deferred = new Deferred();\n      try {\n        var result = action();\n        if (isPromise(result)) {\n          fromPromise(result).done(function (userResult) {\n            return deferred.resolve(keepResult && userResult || void 0);\n          }).fail(function (error) {\n            return deferred.reject(error);\n          });\n        } else {\n          deferred.resolve(keepResult && result || void 0);\n        }\n      } catch (error) {\n        return deferred.reject(error);\n      }\n      return deferred.promise();\n    }\n  }]);\n  return FileSystemProviderBase;\n}();\nexport default FileSystemProviderBase;","map":null,"metadata":{},"sourceType":"module"}