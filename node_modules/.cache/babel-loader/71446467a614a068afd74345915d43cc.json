{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/selection.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport TreeMapBase from \"./tree_map.base\";\nimport Node from \"./node\";\nimport { expand } from \"../core/helpers\";\nimport { buildRectAppearance } from \"./common\";\nvar proto = TreeMapBase.prototype;\nvar nodeProto = Node.prototype;\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nvar MODE_NONE = 0;\nvar MODE_SINGLE = 1;\nvar MODE_MULTIPLE = 2;\nvar STATE_CODE = 2;\nimport \"./api\";\nimport \"./states\";\nproto._eventsMap.onSelectionChanged = {\n  name: \"selectionChanged\"\n};\nexpand(proto._handlers, \"calculateAdditionalStates\", function (states, options) {\n  states[2] = options.selectionStyle ? buildRectAppearance(options.selectionStyle) : {};\n});\nnodeProto.statesMap[2] = nodeProto.statesMap[3] = STATE_CODE;\nnodeProto.additionalStates.push(2);\nexpand(proto, \"_onNodesCreated\", function () {\n  this._selectionList.length = 0;\n});\nexpand(proto, \"_extendProxyType\", function (proto) {\n  var that = this;\n  proto.select = function (state) {\n    that._selectNode(this._id, !!state);\n  };\n  proto.isSelected = function () {\n    return that._selectionList.includes(this._id);\n  };\n  that._selectionList = [];\n});\nTreeMapBase.addChange({\n  code: \"SELECTION_MODE\",\n  handler: function handler() {\n    var option = _normalizeEnum(this._getOption(\"selectionMode\", true));\n    var selectionList = this._selectionList;\n    var tmp;\n    var mode = \"none\" === option ? MODE_NONE : \"multiple\" === option ? MODE_MULTIPLE : MODE_SINGLE;\n    if (mode === MODE_SINGLE && selectionList.length > 1) {\n      tmp = selectionList.pop();\n      this.clearSelection();\n      selectionList.push(tmp);\n    } else if (mode === MODE_NONE) {\n      this.clearSelection();\n    }\n    this._selectionMode = mode;\n  },\n  isThemeDependent: true,\n  isOptionChange: true,\n  option: \"selectionMode\"\n});\nexpand(proto, \"_applyTilesAppearance\", function () {\n  if (this._selectionList.length) {\n    bringSelectedTilesToForeground(this._nodes, this._selectionList);\n  }\n});\nvar tileToFront = [leafToFront, groupToFront];\nfunction bringSelectedTilesToForeground(nodes, selectionList) {\n  var i;\n  var ii = selectionList.length;\n  var node;\n  for (i = 0; i < ii; ++i) {\n    node = nodes[selectionList[i]];\n    tileToFront[Number(node.isNode())](node.tile);\n  }\n}\nfunction leafToFront(content) {\n  content.toForeground();\n}\nfunction groupToFront(content) {\n  content.outer.toForeground();\n  content.inner.toForeground();\n}\nproto._applySelectionState = function (index, state) {\n  var node = this._nodes[index];\n  node.setState(STATE_CODE, state);\n  this._eventTrigger(\"selectionChanged\", {\n    node: node.proxy\n  });\n};\nproto._selectNode = function (index, state) {\n  var selectionList;\n  var k;\n  var tmp;\n  if (this._selectionMode !== MODE_NONE) {\n    this._context.suspend();\n    selectionList = this._selectionList;\n    k = selectionList.indexOf(index);\n    if (state && -1 === k) {\n      if (this._selectionMode === MODE_SINGLE) {\n        if (selectionList.length) {\n          tmp = selectionList.pop();\n          this._applySelectionState(tmp, false);\n        }\n      }\n      selectionList.push(index);\n      this._applySelectionState(index, true);\n    } else if (!state && k >= 0) {\n      selectionList.splice(k, 1);\n      this._applySelectionState(index, false);\n    }\n    this._context.resume();\n  }\n};\nproto.clearSelection = function () {\n  var selectionList = this._selectionList;\n  var i;\n  var ii = selectionList.length;\n  if (this._selectionMode !== MODE_NONE) {\n    this._context.suspend();\n    for (i = 0; i < ii; ++i) {\n      this._applySelectionState(selectionList[i], false);\n    }\n    selectionList.length = 0;\n    this._context.resume();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}