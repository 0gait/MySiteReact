{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/virtual_cell.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"colSpan\", \"isHeaderCell\", \"width\"];\nimport { createComponentVNode } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { addWidthToStyle } from \"../utils\";\nimport { HeaderCell } from \"./header_cell\";\nimport { OrdinaryCell } from \"./ordinary_cell\";\nexport var viewFunction = function viewFunction(_ref) {\n  var _ref$props = _ref.props,\n    colSpan = _ref$props.colSpan,\n    isHeaderCell = _ref$props.isHeaderCell,\n    style = _ref.style;\n  var Cell = isHeaderCell ? HeaderCell : OrdinaryCell;\n  return createComponentVNode(2, Cell, {\n    className: \"dx-scheduler-virtual-cell\",\n    styles: style,\n    colSpan: colSpan\n  });\n};\nexport var VirtualCellProps = {\n  width: 0,\n  isHeaderCell: false\n};\nexport var VirtualCell = /*#__PURE__*/function (_BaseInfernoComponent) {\n  _inherits(VirtualCell, _BaseInfernoComponent);\n  function VirtualCell(props) {\n    var _this;\n    _classCallCheck(this, VirtualCell);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VirtualCell).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n  _createClass(VirtualCell, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        style: this.style,\n        restAttributes: this.restAttributes\n      });\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      var width = this.props.width;\n      var style = this.restAttributes.style;\n      return addWidthToStyle(width, style);\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n      return restProps;\n    }\n  }]);\n  return VirtualCell;\n}(BaseInfernoComponent);\nVirtualCell.defaultProps = VirtualCellProps;","map":null,"metadata":{},"sourceType":"module"}