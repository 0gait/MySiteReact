{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _toConsumableArray from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/large.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"pageIndexes\"],\n  _excluded2 = [\"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\"];\nimport { createVNode, createFragment, createComponentVNode } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { Page } from \"./page\";\nimport { InternalPagerProps } from \"../common/pager_props\";\nimport { ConfigContext } from \"../../../common/config_context\";\nvar PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\nexport var viewFunction = function viewFunction(_ref) {\n  var pages = _ref.pages;\n  var PagesMarkup = pages.map(function (_ref2) {\n    var key = _ref2.key,\n      pageProps = _ref2.pageProps;\n    return pageProps ? createComponentVNode(2, Page, {\n      index: pageProps.index,\n      selected: pageProps.selected,\n      onClick: pageProps.onClick\n    }, key) : createVNode(1, \"div\", PAGER_PAGE_SEPARATOR_CLASS, \". . .\", 16, null, key);\n  });\n  return createFragment(PagesMarkup, 0);\n};\nvar PAGES_LIMITER = 4;\nfunction getDelimiterType(startIndex, slidingWindowSize, pageCount) {\n  if (1 === startIndex) {\n    return \"high\";\n  }\n  if (startIndex + slidingWindowSize === pageCount - 1) {\n    return \"low\";\n  }\n  return \"both\";\n}\nfunction createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter) {\n  var pageIndexes = [];\n  var indexesForReuse = [];\n  switch (delimiter) {\n    case \"none\":\n      pageIndexes = _toConsumableArray(slidingWindowIndexes);\n      break;\n    case \"both\":\n      pageIndexes = [0, \"low\"].concat(_toConsumableArray(slidingWindowIndexes), [\"high\", pageCount - 1]);\n      indexesForReuse = slidingWindowIndexes.slice(1, -1);\n      break;\n    case \"high\":\n      pageIndexes = [0].concat(_toConsumableArray(slidingWindowIndexes), [\"high\", pageCount - 1]);\n      indexesForReuse = slidingWindowIndexes.slice(0, -1);\n      break;\n    case \"low\":\n      pageIndexes = [0, \"low\"].concat(_toConsumableArray(slidingWindowIndexes), [pageCount - 1]);\n      indexesForReuse = slidingWindowIndexes.slice(1);\n  }\n  return {\n    slidingWindowIndexes: slidingWindowIndexes,\n    indexesForReuse: indexesForReuse,\n    pageIndexes: pageIndexes\n  };\n}\nfunction createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter) {\n  var slidingWindowIndexes = [];\n  for (var i = 0; i < slidingWindowSize; i += 1) {\n    slidingWindowIndexes.push(i + startIndex);\n  }\n  return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter);\n}\nvar PagesLargePropsType = {\n  get pageIndex() {\n    return InternalPagerProps.pageIndex;\n  },\n  get maxPagesCount() {\n    return InternalPagerProps.maxPagesCount;\n  },\n  get pageCount() {\n    return InternalPagerProps.pageCount;\n  }\n};\nexport var PagesLarge = /*#__PURE__*/function (_BaseInfernoComponent) {\n  _inherits(PagesLarge, _BaseInfernoComponent);\n  function PagesLarge(props) {\n    var _this;\n    _classCallCheck(this, PagesLarge);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PagesLarge).call(this, props));\n    _this.state = {};\n    _this.canReuseSlidingWindow = _this.canReuseSlidingWindow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.generatePageIndexes = _this.generatePageIndexes.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isSlidingWindowMode = _this.isSlidingWindowMode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onPageClick = _this.onPageClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(PagesLarge, [{\n    key: \"canReuseSlidingWindow\",\n    value: function canReuseSlidingWindow(currentPageCount, pageIndex) {\n      var indexesForReuse = this.slidingWindowState.indexesForReuse;\n      var lastPageIsFartherThanWindow = indexesForReuse.slice(-1)[0] < currentPageCount - 1;\n      var pageIndexExistInIndexes = indexesForReuse.includes(pageIndex);\n      return lastPageIsFartherThanWindow && pageIndexExistInIndexes;\n    }\n  }, {\n    key: \"generatePageIndexes\",\n    value: function generatePageIndexes() {\n      var _this$props2 = this.props,\n        pageCount = _this$props2.pageCount,\n        pageIndex = _this$props2.pageIndex;\n      var startIndex = 0;\n      var slidingWindowIndexes = this.slidingWindowState.slidingWindowIndexes;\n      if (pageIndex === slidingWindowIndexes[0]) {\n        startIndex = pageIndex - 1;\n      } else if (pageIndex === slidingWindowIndexes[slidingWindowIndexes.length - 1]) {\n        startIndex = pageIndex + 2 - PAGES_LIMITER;\n      } else if (pageIndex < PAGES_LIMITER) {\n        startIndex = 1;\n      } else if (pageIndex >= pageCount - PAGES_LIMITER) {\n        startIndex = pageCount - PAGES_LIMITER - 1;\n      } else {\n        startIndex = pageIndex - 1;\n      }\n      var slidingWindowSize = PAGES_LIMITER;\n      var delimiter = getDelimiterType(startIndex, slidingWindowSize, pageCount);\n      var _createPageIndexes = createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter),\n        pageIndexes = _createPageIndexes.pageIndexes,\n        slidingWindowState = _objectWithoutPropertiesLoose(_createPageIndexes, _excluded);\n      this.slidingWindowStateHolder = slidingWindowState;\n      return pageIndexes;\n    }\n  }, {\n    key: \"isSlidingWindowMode\",\n    value: function isSlidingWindowMode() {\n      var _this$props3 = this.props,\n        maxPagesCount = _this$props3.maxPagesCount,\n        pageCount = _this$props3.pageCount;\n      return pageCount <= PAGES_LIMITER || pageCount <= maxPagesCount;\n    }\n  }, {\n    key: \"onPageClick\",\n    value: function onPageClick(pageIndex) {\n      this.props.pageIndexChange(pageIndex);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        config: this.config,\n        pageIndexes: this.pageIndexes,\n        pages: this.pages,\n        restAttributes: this.restAttributes\n      });\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      if (this.context[ConfigContext.id]) {\n        return this.context[ConfigContext.id];\n      }\n      return ConfigContext.defaultValue;\n    }\n  }, {\n    key: \"slidingWindowState\",\n    get: function get() {\n      var slidingWindowState = this.slidingWindowStateHolder;\n      if (!slidingWindowState) {\n        return {\n          indexesForReuse: [],\n          slidingWindowIndexes: []\n        };\n      }\n      return slidingWindowState;\n    }\n  }, {\n    key: \"pageIndexes\",\n    get: function get() {\n      var pageCount = this.props.pageCount;\n      if (this.isSlidingWindowMode()) {\n        return createPageIndexes(0, pageCount, pageCount, \"none\").pageIndexes;\n      }\n      if (this.canReuseSlidingWindow(pageCount, this.props.pageIndex)) {\n        var slidingWindowIndexes = this.slidingWindowState.slidingWindowIndexes;\n        var delimiter = getDelimiterType(slidingWindowIndexes[0], PAGES_LIMITER, pageCount);\n        return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter).pageIndexes;\n      }\n      return this.generatePageIndexes();\n    }\n  }, {\n    key: \"pages\",\n    get: function get() {\n      var _this2 = this;\n      var _this$config;\n      var pageIndex = this.props.pageIndex;\n      var createPage = function createPage(index) {\n        var pagerProps = \"low\" === index || \"high\" === index ? null : {\n          index: index,\n          onClick: function onClick() {\n            return _this2.onPageClick(index);\n          },\n          selected: pageIndex === index\n        };\n        return {\n          key: index.toString(),\n          pageProps: pagerProps\n        };\n      };\n      var rtlPageIndexes = null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled ? _toConsumableArray(this.pageIndexes).reverse() : this.pageIndexes;\n      return rtlPageIndexes.map(function (index) {\n        return createPage(index);\n      });\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded2);\n      return restProps;\n    }\n  }]);\n  return PagesLarge;\n}(BaseInfernoComponent);\nPagesLarge.defaultProps = PagesLargePropsType;","map":null,"metadata":{},"sourceType":"module"}