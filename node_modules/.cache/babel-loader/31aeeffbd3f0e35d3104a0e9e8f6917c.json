{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VectorMapTitleSubtitle = exports.VectorMapTitle = exports.TooltipBorder = exports.Tooltip = exports.Title = exports.Subtitle = exports.Source = exports.Size = exports.Shadow = exports.Projection = exports.Margin = exports.LoadingIndicator = exports.LegendTitleSubtitle = exports.LegendTitle = exports.Legend = exports.Layer = exports.Label = exports.Image = exports.Format = exports.Font = exports.Export = exports.ControlBar = exports.CommonAnnotationSettings = exports.Border = exports.Background = exports.AnnotationBorder = exports.Annotation = exports.VectorMap = void 0;\nvar vector_map_1 = require(\"devextreme/viz/vector_map\");\nvar PropTypes = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar VectorMap = /** @class */function (_super) {\n  __extends(VectorMap, _super);\n  function VectorMap() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._WidgetClass = vector_map_1.default;\n    _this.subscribableOptions = [\"loadingIndicator\", \"loadingIndicator.show\"];\n    _this.independentEvents = [\"onClick\", \"onDisposing\", \"onDrawn\", \"onExported\", \"onExporting\", \"onFileSaving\", \"onIncidentOccurred\", \"onInitialized\", \"onTooltipHidden\", \"onTooltipShown\"];\n    _this._defaults = {\n      defaultLoadingIndicator: \"loadingIndicator\"\n    };\n    _this._expectedChildren = {\n      annotation: {\n        optionName: \"annotations\",\n        isCollectionItem: true\n      },\n      background: {\n        optionName: \"background\",\n        isCollectionItem: false\n      },\n      commonAnnotationSettings: {\n        optionName: \"commonAnnotationSettings\",\n        isCollectionItem: false\n      },\n      controlBar: {\n        optionName: \"controlBar\",\n        isCollectionItem: false\n      },\n      export: {\n        optionName: \"export\",\n        isCollectionItem: false\n      },\n      layer: {\n        optionName: \"layers\",\n        isCollectionItem: true\n      },\n      legend: {\n        optionName: \"legends\",\n        isCollectionItem: true\n      },\n      loadingIndicator: {\n        optionName: \"loadingIndicator\",\n        isCollectionItem: false\n      },\n      projection: {\n        optionName: \"projection\",\n        isCollectionItem: false\n      },\n      size: {\n        optionName: \"size\",\n        isCollectionItem: false\n      },\n      title: {\n        optionName: \"title\",\n        isCollectionItem: false\n      },\n      tooltip: {\n        optionName: \"tooltip\",\n        isCollectionItem: false\n      },\n      vectorMapTitle: {\n        optionName: \"title\",\n        isCollectionItem: false\n      }\n    };\n    return _this;\n  }\n  Object.defineProperty(VectorMap.prototype, \"instance\", {\n    get: function get() {\n      return this._instance;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return VectorMap;\n}(component_1.Component);\nexports.VectorMap = VectorMap;\nVectorMap.propTypes = {\n  annotations: PropTypes.array,\n  background: PropTypes.object,\n  bounds: PropTypes.array,\n  center: PropTypes.array,\n  commonAnnotationSettings: PropTypes.object,\n  controlBar: PropTypes.object,\n  customizeAnnotation: PropTypes.func,\n  disabled: PropTypes.bool,\n  elementAttr: PropTypes.object,\n  export: PropTypes.object,\n  layers: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  legends: PropTypes.array,\n  loadingIndicator: PropTypes.object,\n  maxZoomFactor: PropTypes.number,\n  onCenterChanged: PropTypes.func,\n  onClick: PropTypes.func,\n  onDisposing: PropTypes.func,\n  onDrawn: PropTypes.func,\n  onExported: PropTypes.func,\n  onExporting: PropTypes.func,\n  onFileSaving: PropTypes.func,\n  onIncidentOccurred: PropTypes.func,\n  onInitialized: PropTypes.func,\n  onOptionChanged: PropTypes.func,\n  onSelectionChanged: PropTypes.func,\n  onTooltipHidden: PropTypes.func,\n  onTooltipShown: PropTypes.func,\n  onZoomFactorChanged: PropTypes.func,\n  panningEnabled: PropTypes.bool,\n  pathModified: PropTypes.bool,\n  projection: PropTypes.oneOfType([PropTypes.object, PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"equirectangular\", \"lambert\", \"mercator\", \"miller\"])])]),\n  redrawOnResize: PropTypes.bool,\n  rtlEnabled: PropTypes.bool,\n  size: PropTypes.object,\n  theme: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"generic.dark\", \"generic.light\", \"generic.contrast\", \"generic.carmine\", \"generic.darkmoon\", \"generic.darkviolet\", \"generic.greenmist\", \"generic.softblue\", \"material.blue.light\", \"material.lime.light\", \"material.orange.light\", \"material.purple.light\", \"material.teal.light\"])]),\n  title: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  tooltip: PropTypes.object,\n  touchEnabled: PropTypes.bool,\n  wheelEnabled: PropTypes.bool,\n  zoomFactor: PropTypes.number,\n  zoomingEnabled: PropTypes.bool\n};\nvar Annotation = /** @class */function (_super) {\n  __extends(Annotation, _super);\n  function Annotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Annotation.OptionName = \"annotations\";\n  Annotation.IsCollectionItem = true;\n  Annotation.ExpectedChildren = {\n    annotationBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    image: {\n      optionName: \"image\",\n      isCollectionItem: false\n    },\n    shadow: {\n      optionName: \"shadow\",\n      isCollectionItem: false\n    }\n  };\n  Annotation.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }, {\n    tmplOption: \"tooltipTemplate\",\n    render: \"tooltipRender\",\n    component: \"tooltipComponent\",\n    keyFn: \"tooltipKeyFn\"\n  }];\n  return Annotation;\n}(nested_option_1.default);\nexports.Annotation = Annotation;\nvar AnnotationBorder = /** @class */function (_super) {\n  __extends(AnnotationBorder, _super);\n  function AnnotationBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AnnotationBorder.OptionName = \"border\";\n  return AnnotationBorder;\n}(nested_option_1.default);\nexports.AnnotationBorder = AnnotationBorder;\nvar Background = /** @class */function (_super) {\n  __extends(Background, _super);\n  function Background() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Background.OptionName = \"background\";\n  return Background;\n}(nested_option_1.default);\nexports.Background = Background;\nvar Border = /** @class */function (_super) {\n  __extends(Border, _super);\n  function Border() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Border.OptionName = \"border\";\n  return Border;\n}(nested_option_1.default);\nexports.Border = Border;\nvar CommonAnnotationSettings = /** @class */function (_super) {\n  __extends(CommonAnnotationSettings, _super);\n  function CommonAnnotationSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonAnnotationSettings.OptionName = \"commonAnnotationSettings\";\n  CommonAnnotationSettings.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }, {\n    tmplOption: \"tooltipTemplate\",\n    render: \"tooltipRender\",\n    component: \"tooltipComponent\",\n    keyFn: \"tooltipKeyFn\"\n  }];\n  return CommonAnnotationSettings;\n}(nested_option_1.default);\nexports.CommonAnnotationSettings = CommonAnnotationSettings;\nvar ControlBar = /** @class */function (_super) {\n  __extends(ControlBar, _super);\n  function ControlBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ControlBar.OptionName = \"controlBar\";\n  return ControlBar;\n}(nested_option_1.default);\nexports.ControlBar = ControlBar;\nvar Export = /** @class */function (_super) {\n  __extends(Export, _super);\n  function Export() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Export.OptionName = \"export\";\n  return Export;\n}(nested_option_1.default);\nexports.Export = Export;\nvar Font = /** @class */function (_super) {\n  __extends(Font, _super);\n  function Font() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Font.OptionName = \"font\";\n  return Font;\n}(nested_option_1.default);\nexports.Font = Font;\nvar Format = /** @class */function (_super) {\n  __extends(Format, _super);\n  function Format() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Format.OptionName = \"format\";\n  return Format;\n}(nested_option_1.default);\nexports.Format = Format;\nvar Image = /** @class */function (_super) {\n  __extends(Image, _super);\n  function Image() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Image.OptionName = \"image\";\n  return Image;\n}(nested_option_1.default);\nexports.Image = Image;\nvar Label = /** @class */function (_super) {\n  __extends(Label, _super);\n  function Label() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Label.OptionName = \"label\";\n  Label.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return Label;\n}(nested_option_1.default);\nexports.Label = Label;\nvar Layer = /** @class */function (_super) {\n  __extends(Layer, _super);\n  function Layer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Layer.OptionName = \"layers\";\n  Layer.IsCollectionItem = true;\n  Layer.ExpectedChildren = {\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    }\n  };\n  return Layer;\n}(nested_option_1.default);\nexports.Layer = Layer;\nvar Legend = /** @class */function (_super) {\n  __extends(Legend, _super);\n  function Legend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Legend.OptionName = \"legends\";\n  Legend.IsCollectionItem = true;\n  Legend.ExpectedChildren = {\n    annotationBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    legendTitle: {\n      optionName: \"title\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    source: {\n      optionName: \"source\",\n      isCollectionItem: false\n    },\n    title: {\n      optionName: \"title\",\n      isCollectionItem: false\n    }\n  };\n  Legend.TemplateProps = [{\n    tmplOption: \"markerTemplate\",\n    render: \"markerRender\",\n    component: \"markerComponent\",\n    keyFn: \"markerKeyFn\"\n  }];\n  return Legend;\n}(nested_option_1.default);\nexports.Legend = Legend;\nvar LegendTitle = /** @class */function (_super) {\n  __extends(LegendTitle, _super);\n  function LegendTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LegendTitle.OptionName = \"title\";\n  LegendTitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    legendTitleSubtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    subtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    }\n  };\n  return LegendTitle;\n}(nested_option_1.default);\nexports.LegendTitle = LegendTitle;\nvar LegendTitleSubtitle = /** @class */function (_super) {\n  __extends(LegendTitleSubtitle, _super);\n  function LegendTitleSubtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LegendTitleSubtitle.OptionName = \"subtitle\";\n  LegendTitleSubtitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return LegendTitleSubtitle;\n}(nested_option_1.default);\nexports.LegendTitleSubtitle = LegendTitleSubtitle;\nvar LoadingIndicator = /** @class */function (_super) {\n  __extends(LoadingIndicator, _super);\n  function LoadingIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LoadingIndicator.OptionName = \"loadingIndicator\";\n  LoadingIndicator.DefaultsProps = {\n    defaultShow: \"show\"\n  };\n  LoadingIndicator.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return LoadingIndicator;\n}(nested_option_1.default);\nexports.LoadingIndicator = LoadingIndicator;\nvar Margin = /** @class */function (_super) {\n  __extends(Margin, _super);\n  function Margin() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Margin.OptionName = \"margin\";\n  return Margin;\n}(nested_option_1.default);\nexports.Margin = Margin;\nvar Projection = /** @class */function (_super) {\n  __extends(Projection, _super);\n  function Projection() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Projection.OptionName = \"projection\";\n  return Projection;\n}(nested_option_1.default);\nexports.Projection = Projection;\nvar Shadow = /** @class */function (_super) {\n  __extends(Shadow, _super);\n  function Shadow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Shadow.OptionName = \"shadow\";\n  return Shadow;\n}(nested_option_1.default);\nexports.Shadow = Shadow;\nvar Size = /** @class */function (_super) {\n  __extends(Size, _super);\n  function Size() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Size.OptionName = \"size\";\n  return Size;\n}(nested_option_1.default);\nexports.Size = Size;\nvar Source = /** @class */function (_super) {\n  __extends(Source, _super);\n  function Source() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Source.OptionName = \"source\";\n  return Source;\n}(nested_option_1.default);\nexports.Source = Source;\nvar Subtitle = /** @class */function (_super) {\n  __extends(Subtitle, _super);\n  function Subtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Subtitle.OptionName = \"subtitle\";\n  return Subtitle;\n}(nested_option_1.default);\nexports.Subtitle = Subtitle;\nvar Title = /** @class */function (_super) {\n  __extends(Title, _super);\n  function Title() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Title.OptionName = \"title\";\n  return Title;\n}(nested_option_1.default);\nexports.Title = Title;\nvar Tooltip = /** @class */function (_super) {\n  __extends(Tooltip, _super);\n  function Tooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Tooltip.OptionName = \"tooltip\";\n  Tooltip.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    format: {\n      optionName: \"format\",\n      isCollectionItem: false\n    },\n    shadow: {\n      optionName: \"shadow\",\n      isCollectionItem: false\n    },\n    tooltipBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  Tooltip.TemplateProps = [{\n    tmplOption: \"contentTemplate\",\n    render: \"contentRender\",\n    component: \"contentComponent\",\n    keyFn: \"contentKeyFn\"\n  }];\n  return Tooltip;\n}(nested_option_1.default);\nexports.Tooltip = Tooltip;\nvar TooltipBorder = /** @class */function (_super) {\n  __extends(TooltipBorder, _super);\n  function TooltipBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TooltipBorder.OptionName = \"border\";\n  return TooltipBorder;\n}(nested_option_1.default);\nexports.TooltipBorder = TooltipBorder;\nvar VectorMapTitle = /** @class */function (_super) {\n  __extends(VectorMapTitle, _super);\n  function VectorMapTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  VectorMapTitle.OptionName = \"title\";\n  VectorMapTitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    subtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    },\n    vectorMapTitleSubtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    }\n  };\n  return VectorMapTitle;\n}(nested_option_1.default);\nexports.VectorMapTitle = VectorMapTitle;\nvar VectorMapTitleSubtitle = /** @class */function (_super) {\n  __extends(VectorMapTitleSubtitle, _super);\n  function VectorMapTitleSubtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  VectorMapTitleSubtitle.OptionName = \"subtitle\";\n  VectorMapTitleSubtitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return VectorMapTitleSubtitle;\n}(nested_option_1.default);\nexports.VectorMapTitleSubtitle = VectorMapTitleSubtitle;\nexports.default = VectorMap;","map":null,"metadata":{},"sourceType":"script"}