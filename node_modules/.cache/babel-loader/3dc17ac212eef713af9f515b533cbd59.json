{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\n/**\r\n * DevExtreme (esm/renovation/component_wrapper/common/template_wrapper.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { InfernoComponent, InfernoEffect } from \"@devextreme/runtime/inferno\";\nimport { findDOMfromVNode } from \"inferno\";\nimport { shallowEquals } from \"../../utils/shallow_equals\";\nimport { replaceWith } from \"../../../core/utils/dom\";\nimport $ from \"../../../core/renderer\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport { getPublicElement } from \"../../../core/element\";\nimport { removeDifferentElements } from \"../utils/utils\";\nimport { isDefined } from \"../../../core/utils/type\";\nexport var TemplateWrapper = /*#__PURE__*/function (_InfernoComponent) {\n  _inherits(TemplateWrapper, _InfernoComponent);\n  function TemplateWrapper(props) {\n    var _this;\n    _classCallCheck(this, TemplateWrapper);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TemplateWrapper).call(this, props));\n    _this.renderTemplate = _this.renderTemplate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(TemplateWrapper, [{\n    key: \"renderTemplate\",\n    value: function renderTemplate() {\n      var _this$props$model;\n      var node = findDOMfromVNode(this.$LI, true);\n      var parentNode = node.parentNode;\n      var $parent = $(parentNode);\n      var $children = $parent.contents();\n      var _ref = null !== (_this$props$model = this.props.model) && void 0 !== _this$props$model ? _this$props$model : {\n          data: {}\n        },\n        data = _ref.data,\n        index = _ref.index;\n      if (data) {\n        Object.keys(data).forEach(function (name) {\n          if (data[name] && domAdapter.isNode(data[name])) {\n            data[name] = getPublicElement($(data[name]));\n          }\n        });\n      }\n      var $result = $(this.props.template.render(_extends({\n        container: getPublicElement($parent),\n        transclude: this.props.transclude\n      }, {\n        renovated: this.props.renovated\n      }, !this.props.transclude ? {\n        model: data\n      } : {}, !this.props.transclude && Number.isFinite(index) ? {\n        index: index\n      } : {})));\n      replaceWith($(node), $result);\n      return function () {\n        removeDifferentElements($children, $parent.contents());\n        parentNode.appendChild(node);\n      };\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props = this.props,\n        model = _this$props.model,\n        template = _this$props.template;\n      var nextModel = nextProps.model,\n        nextTemplate = nextProps.template;\n      var sameTemplate = template === nextTemplate;\n      if (!sameTemplate) {\n        return true;\n      }\n      if (isDefined(model) && isDefined(nextModel)) {\n        var data = model.data,\n          index = model.index;\n        var nextData = nextModel.data,\n          nextIndex = nextModel.index;\n        return index !== nextIndex || !shallowEquals(data, nextData);\n      }\n      var sameModel = model === nextModel;\n      return !sameModel;\n    }\n  }, {\n    key: \"createEffects\",\n    value: function createEffects() {\n      return [new InfernoEffect(this.renderTemplate, [this.props.template, this.props.model])];\n    }\n  }, {\n    key: \"updateEffects\",\n    value: function updateEffects() {\n      this._effects[0].update([this.props.template, this.props.model]);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n  return TemplateWrapper;\n}(InfernoComponent);","map":null,"metadata":{},"sourceType":"module"}