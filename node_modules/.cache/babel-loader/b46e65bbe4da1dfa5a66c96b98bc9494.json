{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.View = exports.Scrolling = exports.Resource = exports.Editing = exports.AppointmentDragging = exports.Scheduler = void 0;\nvar scheduler_1 = require(\"devextreme/ui/scheduler\");\nvar PropTypes = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar Scheduler = /** @class */function (_super) {\n  __extends(Scheduler, _super);\n  function Scheduler() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._WidgetClass = scheduler_1.default;\n    _this.subscribableOptions = [\"currentDate\", \"currentView\"];\n    _this.independentEvents = [\"onAppointmentAdded\", \"onAppointmentAdding\", \"onAppointmentClick\", \"onAppointmentContextMenu\", \"onAppointmentDblClick\", \"onAppointmentDeleted\", \"onAppointmentDeleting\", \"onAppointmentFormOpening\", \"onAppointmentRendered\", \"onAppointmentTooltipShowing\", \"onAppointmentUpdated\", \"onAppointmentUpdating\", \"onCellClick\", \"onCellContextMenu\", \"onContentReady\", \"onDisposing\", \"onInitialized\"];\n    _this._defaults = {\n      defaultCurrentDate: \"currentDate\",\n      defaultCurrentView: \"currentView\"\n    };\n    _this._expectedChildren = {\n      appointmentDragging: {\n        optionName: \"appointmentDragging\",\n        isCollectionItem: false\n      },\n      editing: {\n        optionName: \"editing\",\n        isCollectionItem: false\n      },\n      resource: {\n        optionName: \"resources\",\n        isCollectionItem: true\n      },\n      scrolling: {\n        optionName: \"scrolling\",\n        isCollectionItem: false\n      },\n      view: {\n        optionName: \"views\",\n        isCollectionItem: true\n      }\n    };\n    _this._templateProps = [{\n      tmplOption: \"appointmentCollectorTemplate\",\n      render: \"appointmentCollectorRender\",\n      component: \"appointmentCollectorComponent\",\n      keyFn: \"appointmentCollectorKeyFn\"\n    }, {\n      tmplOption: \"appointmentTemplate\",\n      render: \"appointmentRender\",\n      component: \"appointmentComponent\",\n      keyFn: \"appointmentKeyFn\"\n    }, {\n      tmplOption: \"appointmentTooltipTemplate\",\n      render: \"appointmentTooltipRender\",\n      component: \"appointmentTooltipComponent\",\n      keyFn: \"appointmentTooltipKeyFn\"\n    }, {\n      tmplOption: \"dataCellTemplate\",\n      render: \"dataCellRender\",\n      component: \"dataCellComponent\",\n      keyFn: \"dataCellKeyFn\"\n    }, {\n      tmplOption: \"dateCellTemplate\",\n      render: \"dateCellRender\",\n      component: \"dateCellComponent\",\n      keyFn: \"dateCellKeyFn\"\n    }, {\n      tmplOption: \"dropDownAppointmentTemplate\",\n      render: \"dropDownAppointmentRender\",\n      component: \"dropDownAppointmentComponent\",\n      keyFn: \"dropDownAppointmentKeyFn\"\n    }, {\n      tmplOption: \"resourceCellTemplate\",\n      render: \"resourceCellRender\",\n      component: \"resourceCellComponent\",\n      keyFn: \"resourceCellKeyFn\"\n    }, {\n      tmplOption: \"timeCellTemplate\",\n      render: \"timeCellRender\",\n      component: \"timeCellComponent\",\n      keyFn: \"timeCellKeyFn\"\n    }];\n    return _this;\n  }\n  Object.defineProperty(Scheduler.prototype, \"instance\", {\n    get: function get() {\n      return this._instance;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Scheduler;\n}(component_1.Component);\nexports.Scheduler = Scheduler;\nScheduler.propTypes = {\n  accessKey: PropTypes.string,\n  adaptivityEnabled: PropTypes.bool,\n  allDayExpr: PropTypes.string,\n  allDayPanelMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"all\", \"allDay\", \"hidden\"])]),\n  appointmentDragging: PropTypes.object,\n  cellDuration: PropTypes.number,\n  crossScrollingEnabled: PropTypes.bool,\n  currentView: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"agenda\", \"day\", \"month\", \"timelineDay\", \"timelineMonth\", \"timelineWeek\", \"timelineWorkWeek\", \"week\", \"workWeek\"])]),\n  customizeDateNavigatorText: PropTypes.func,\n  dateSerializationFormat: PropTypes.string,\n  descriptionExpr: PropTypes.string,\n  disabled: PropTypes.bool,\n  editing: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  elementAttr: PropTypes.object,\n  endDateExpr: PropTypes.string,\n  endDateTimeZoneExpr: PropTypes.string,\n  endDayHour: PropTypes.number,\n  firstDayOfWeek: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6])]),\n  focusStateEnabled: PropTypes.bool,\n  groupByDate: PropTypes.bool,\n  groups: PropTypes.array,\n  height: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  hint: PropTypes.string,\n  indicatorUpdateInterval: PropTypes.number,\n  maxAppointmentsPerCell: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"auto\", \"unlimited\"])])]),\n  noDataText: PropTypes.string,\n  onAppointmentAdded: PropTypes.func,\n  onAppointmentAdding: PropTypes.func,\n  onAppointmentClick: PropTypes.func,\n  onAppointmentContextMenu: PropTypes.func,\n  onAppointmentDblClick: PropTypes.func,\n  onAppointmentDeleted: PropTypes.func,\n  onAppointmentDeleting: PropTypes.func,\n  onAppointmentFormOpening: PropTypes.func,\n  onAppointmentRendered: PropTypes.func,\n  onAppointmentTooltipShowing: PropTypes.func,\n  onAppointmentUpdated: PropTypes.func,\n  onAppointmentUpdating: PropTypes.func,\n  onCellClick: PropTypes.func,\n  onCellContextMenu: PropTypes.func,\n  onContentReady: PropTypes.func,\n  onDisposing: PropTypes.func,\n  onInitialized: PropTypes.func,\n  onOptionChanged: PropTypes.func,\n  recurrenceEditMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"dialog\", \"occurrence\", \"series\"])]),\n  recurrenceExceptionExpr: PropTypes.string,\n  recurrenceRuleExpr: PropTypes.string,\n  remoteFiltering: PropTypes.bool,\n  resources: PropTypes.array,\n  rtlEnabled: PropTypes.bool,\n  scrolling: PropTypes.object,\n  selectedCellData: PropTypes.array,\n  shadeUntilCurrentTime: PropTypes.bool,\n  showAllDayPanel: PropTypes.bool,\n  showCurrentTimeIndicator: PropTypes.bool,\n  startDateExpr: PropTypes.string,\n  startDateTimeZoneExpr: PropTypes.string,\n  startDayHour: PropTypes.number,\n  tabIndex: PropTypes.number,\n  textExpr: PropTypes.string,\n  timeZone: PropTypes.string,\n  useDropDownViewSwitcher: PropTypes.bool,\n  views: PropTypes.array,\n  visible: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string])\n};\nvar AppointmentDragging = /** @class */function (_super) {\n  __extends(AppointmentDragging, _super);\n  function AppointmentDragging() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AppointmentDragging.OptionName = \"appointmentDragging\";\n  return AppointmentDragging;\n}(nested_option_1.default);\nexports.AppointmentDragging = AppointmentDragging;\nvar Editing = /** @class */function (_super) {\n  __extends(Editing, _super);\n  function Editing() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Editing.OptionName = \"editing\";\n  return Editing;\n}(nested_option_1.default);\nexports.Editing = Editing;\nvar Resource = /** @class */function (_super) {\n  __extends(Resource, _super);\n  function Resource() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Resource.OptionName = \"resources\";\n  Resource.IsCollectionItem = true;\n  return Resource;\n}(nested_option_1.default);\nexports.Resource = Resource;\nvar Scrolling = /** @class */function (_super) {\n  __extends(Scrolling, _super);\n  function Scrolling() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Scrolling.OptionName = \"scrolling\";\n  return Scrolling;\n}(nested_option_1.default);\nexports.Scrolling = Scrolling;\nvar View = /** @class */function (_super) {\n  __extends(View, _super);\n  function View() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  View.OptionName = \"views\";\n  View.IsCollectionItem = true;\n  View.ExpectedChildren = {\n    scrolling: {\n      optionName: \"scrolling\",\n      isCollectionItem: false\n    }\n  };\n  View.TemplateProps = [{\n    tmplOption: \"appointmentCollectorTemplate\",\n    render: \"appointmentCollectorRender\",\n    component: \"appointmentCollectorComponent\",\n    keyFn: \"appointmentCollectorKeyFn\"\n  }, {\n    tmplOption: \"appointmentTemplate\",\n    render: \"appointmentRender\",\n    component: \"appointmentComponent\",\n    keyFn: \"appointmentKeyFn\"\n  }, {\n    tmplOption: \"appointmentTooltipTemplate\",\n    render: \"appointmentTooltipRender\",\n    component: \"appointmentTooltipComponent\",\n    keyFn: \"appointmentTooltipKeyFn\"\n  }, {\n    tmplOption: \"dataCellTemplate\",\n    render: \"dataCellRender\",\n    component: \"dataCellComponent\",\n    keyFn: \"dataCellKeyFn\"\n  }, {\n    tmplOption: \"dateCellTemplate\",\n    render: \"dateCellRender\",\n    component: \"dateCellComponent\",\n    keyFn: \"dateCellKeyFn\"\n  }, {\n    tmplOption: \"dropDownAppointmentTemplate\",\n    render: \"dropDownAppointmentRender\",\n    component: \"dropDownAppointmentComponent\",\n    keyFn: \"dropDownAppointmentKeyFn\"\n  }, {\n    tmplOption: \"resourceCellTemplate\",\n    render: \"resourceCellRender\",\n    component: \"resourceCellComponent\",\n    keyFn: \"resourceCellKeyFn\"\n  }, {\n    tmplOption: \"timeCellTemplate\",\n    render: \"timeCellRender\",\n    component: \"timeCellComponent\",\n    keyFn: \"timeCellKeyFn\"\n  }];\n  return View;\n}(nested_option_1.default);\nexports.View = View;\nexports.default = Scheduler;","map":null,"metadata":{},"sourceType":"script"}