{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TooltipBorder = exports.Tooltip = exports.Title = exports.Subtitle = exports.Size = exports.Shadow = exports.Margin = exports.LoadingIndicator = exports.LegendTitleSubtitle = exports.LegendTitle = exports.LegendBorder = exports.Legend = exports.Label = exports.ItemTextFormat = exports.Geometry = exports.Format = exports.Font = exports.Export = exports.Border = exports.BarGaugeTitleSubtitle = exports.BarGaugeTitle = exports.Animation = exports.BarGauge = void 0;\nvar bar_gauge_1 = require(\"devextreme/viz/bar_gauge\");\nvar PropTypes = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar BarGauge = /** @class */function (_super) {\n  __extends(BarGauge, _super);\n  function BarGauge() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._WidgetClass = bar_gauge_1.default;\n    _this.subscribableOptions = [\"loadingIndicator\", \"loadingIndicator.show\", \"values\"];\n    _this.independentEvents = [\"onDisposing\", \"onDrawn\", \"onExported\", \"onExporting\", \"onFileSaving\", \"onIncidentOccurred\", \"onInitialized\", \"onTooltipHidden\", \"onTooltipShown\"];\n    _this._defaults = {\n      defaultLoadingIndicator: \"loadingIndicator\",\n      defaultValues: \"values\"\n    };\n    _this._expectedChildren = {\n      animation: {\n        optionName: \"animation\",\n        isCollectionItem: false\n      },\n      barGaugeTitle: {\n        optionName: \"title\",\n        isCollectionItem: false\n      },\n      export: {\n        optionName: \"export\",\n        isCollectionItem: false\n      },\n      geometry: {\n        optionName: \"geometry\",\n        isCollectionItem: false\n      },\n      label: {\n        optionName: \"label\",\n        isCollectionItem: false\n      },\n      legend: {\n        optionName: \"legend\",\n        isCollectionItem: false\n      },\n      loadingIndicator: {\n        optionName: \"loadingIndicator\",\n        isCollectionItem: false\n      },\n      margin: {\n        optionName: \"margin\",\n        isCollectionItem: false\n      },\n      size: {\n        optionName: \"size\",\n        isCollectionItem: false\n      },\n      title: {\n        optionName: \"title\",\n        isCollectionItem: false\n      },\n      tooltip: {\n        optionName: \"tooltip\",\n        isCollectionItem: false\n      }\n    };\n    return _this;\n  }\n  Object.defineProperty(BarGauge.prototype, \"instance\", {\n    get: function get() {\n      return this._instance;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return BarGauge;\n}(component_1.Component);\nexports.BarGauge = BarGauge;\nBarGauge.propTypes = {\n  backgroundColor: PropTypes.string,\n  barSpacing: PropTypes.number,\n  baseValue: PropTypes.number,\n  disabled: PropTypes.bool,\n  elementAttr: PropTypes.object,\n  endValue: PropTypes.number,\n  export: PropTypes.object,\n  geometry: PropTypes.object,\n  label: PropTypes.object,\n  legend: PropTypes.object,\n  loadingIndicator: PropTypes.object,\n  margin: PropTypes.object,\n  onDisposing: PropTypes.func,\n  onDrawn: PropTypes.func,\n  onExported: PropTypes.func,\n  onExporting: PropTypes.func,\n  onFileSaving: PropTypes.func,\n  onIncidentOccurred: PropTypes.func,\n  onInitialized: PropTypes.func,\n  onOptionChanged: PropTypes.func,\n  onTooltipHidden: PropTypes.func,\n  onTooltipShown: PropTypes.func,\n  palette: PropTypes.oneOfType([PropTypes.array, PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"Bright\", \"Harmony Light\", \"Ocean\", \"Pastel\", \"Soft\", \"Soft Pastel\", \"Vintage\", \"Violet\", \"Carmine\", \"Dark Moon\", \"Dark Violet\", \"Green Mist\", \"Soft Blue\", \"Material\", \"Office\"])])]),\n  paletteExtensionMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"alternate\", \"blend\", \"extrapolate\"])]),\n  pathModified: PropTypes.bool,\n  redrawOnResize: PropTypes.bool,\n  relativeInnerRadius: PropTypes.number,\n  resolveLabelOverlapping: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"hide\", \"none\"])]),\n  rtlEnabled: PropTypes.bool,\n  size: PropTypes.object,\n  startValue: PropTypes.number,\n  theme: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"generic.dark\", \"generic.light\", \"generic.contrast\", \"generic.carmine\", \"generic.darkmoon\", \"generic.darkviolet\", \"generic.greenmist\", \"generic.softblue\", \"material.blue.light\", \"material.lime.light\", \"material.orange.light\", \"material.purple.light\", \"material.teal.light\"])]),\n  title: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  tooltip: PropTypes.object,\n  values: PropTypes.array\n};\nvar Animation = /** @class */function (_super) {\n  __extends(Animation, _super);\n  function Animation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Animation.OptionName = \"animation\";\n  return Animation;\n}(nested_option_1.default);\nexports.Animation = Animation;\nvar BarGaugeTitle = /** @class */function (_super) {\n  __extends(BarGaugeTitle, _super);\n  function BarGaugeTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  BarGaugeTitle.OptionName = \"title\";\n  BarGaugeTitle.ExpectedChildren = {\n    barGaugeTitleSubtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    subtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    }\n  };\n  return BarGaugeTitle;\n}(nested_option_1.default);\nexports.BarGaugeTitle = BarGaugeTitle;\nvar BarGaugeTitleSubtitle = /** @class */function (_super) {\n  __extends(BarGaugeTitleSubtitle, _super);\n  function BarGaugeTitleSubtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  BarGaugeTitleSubtitle.OptionName = \"subtitle\";\n  BarGaugeTitleSubtitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return BarGaugeTitleSubtitle;\n}(nested_option_1.default);\nexports.BarGaugeTitleSubtitle = BarGaugeTitleSubtitle;\nvar Border = /** @class */function (_super) {\n  __extends(Border, _super);\n  function Border() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Border.OptionName = \"border\";\n  return Border;\n}(nested_option_1.default);\nexports.Border = Border;\nvar Export = /** @class */function (_super) {\n  __extends(Export, _super);\n  function Export() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Export.OptionName = \"export\";\n  return Export;\n}(nested_option_1.default);\nexports.Export = Export;\nvar Font = /** @class */function (_super) {\n  __extends(Font, _super);\n  function Font() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Font.OptionName = \"font\";\n  return Font;\n}(nested_option_1.default);\nexports.Font = Font;\nvar Format = /** @class */function (_super) {\n  __extends(Format, _super);\n  function Format() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Format.OptionName = \"format\";\n  return Format;\n}(nested_option_1.default);\nexports.Format = Format;\nvar Geometry = /** @class */function (_super) {\n  __extends(Geometry, _super);\n  function Geometry() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Geometry.OptionName = \"geometry\";\n  return Geometry;\n}(nested_option_1.default);\nexports.Geometry = Geometry;\nvar ItemTextFormat = /** @class */function (_super) {\n  __extends(ItemTextFormat, _super);\n  function ItemTextFormat() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ItemTextFormat.OptionName = \"itemTextFormat\";\n  return ItemTextFormat;\n}(nested_option_1.default);\nexports.ItemTextFormat = ItemTextFormat;\nvar Label = /** @class */function (_super) {\n  __extends(Label, _super);\n  function Label() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Label.OptionName = \"label\";\n  Label.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    format: {\n      optionName: \"format\",\n      isCollectionItem: false\n    }\n  };\n  return Label;\n}(nested_option_1.default);\nexports.Label = Label;\nvar Legend = /** @class */function (_super) {\n  __extends(Legend, _super);\n  function Legend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Legend.OptionName = \"legend\";\n  Legend.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    itemTextFormat: {\n      optionName: \"itemTextFormat\",\n      isCollectionItem: false\n    },\n    legendBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    legendTitle: {\n      optionName: \"title\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    title: {\n      optionName: \"title\",\n      isCollectionItem: false\n    }\n  };\n  Legend.TemplateProps = [{\n    tmplOption: \"markerTemplate\",\n    render: \"markerRender\",\n    component: \"markerComponent\",\n    keyFn: \"markerKeyFn\"\n  }];\n  return Legend;\n}(nested_option_1.default);\nexports.Legend = Legend;\nvar LegendBorder = /** @class */function (_super) {\n  __extends(LegendBorder, _super);\n  function LegendBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LegendBorder.OptionName = \"border\";\n  return LegendBorder;\n}(nested_option_1.default);\nexports.LegendBorder = LegendBorder;\nvar LegendTitle = /** @class */function (_super) {\n  __extends(LegendTitle, _super);\n  function LegendTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LegendTitle.OptionName = \"title\";\n  LegendTitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    legendTitleSubtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    subtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    }\n  };\n  return LegendTitle;\n}(nested_option_1.default);\nexports.LegendTitle = LegendTitle;\nvar LegendTitleSubtitle = /** @class */function (_super) {\n  __extends(LegendTitleSubtitle, _super);\n  function LegendTitleSubtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LegendTitleSubtitle.OptionName = \"subtitle\";\n  LegendTitleSubtitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return LegendTitleSubtitle;\n}(nested_option_1.default);\nexports.LegendTitleSubtitle = LegendTitleSubtitle;\nvar LoadingIndicator = /** @class */function (_super) {\n  __extends(LoadingIndicator, _super);\n  function LoadingIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LoadingIndicator.OptionName = \"loadingIndicator\";\n  LoadingIndicator.DefaultsProps = {\n    defaultShow: \"show\"\n  };\n  LoadingIndicator.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return LoadingIndicator;\n}(nested_option_1.default);\nexports.LoadingIndicator = LoadingIndicator;\nvar Margin = /** @class */function (_super) {\n  __extends(Margin, _super);\n  function Margin() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Margin.OptionName = \"margin\";\n  return Margin;\n}(nested_option_1.default);\nexports.Margin = Margin;\nvar Shadow = /** @class */function (_super) {\n  __extends(Shadow, _super);\n  function Shadow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Shadow.OptionName = \"shadow\";\n  return Shadow;\n}(nested_option_1.default);\nexports.Shadow = Shadow;\nvar Size = /** @class */function (_super) {\n  __extends(Size, _super);\n  function Size() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Size.OptionName = \"size\";\n  return Size;\n}(nested_option_1.default);\nexports.Size = Size;\nvar Subtitle = /** @class */function (_super) {\n  __extends(Subtitle, _super);\n  function Subtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Subtitle.OptionName = \"subtitle\";\n  return Subtitle;\n}(nested_option_1.default);\nexports.Subtitle = Subtitle;\nvar Title = /** @class */function (_super) {\n  __extends(Title, _super);\n  function Title() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Title.OptionName = \"title\";\n  return Title;\n}(nested_option_1.default);\nexports.Title = Title;\nvar Tooltip = /** @class */function (_super) {\n  __extends(Tooltip, _super);\n  function Tooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Tooltip.OptionName = \"tooltip\";\n  Tooltip.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    format: {\n      optionName: \"format\",\n      isCollectionItem: false\n    },\n    shadow: {\n      optionName: \"shadow\",\n      isCollectionItem: false\n    },\n    tooltipBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  Tooltip.TemplateProps = [{\n    tmplOption: \"contentTemplate\",\n    render: \"contentRender\",\n    component: \"contentComponent\",\n    keyFn: \"contentKeyFn\"\n  }];\n  return Tooltip;\n}(nested_option_1.default);\nexports.Tooltip = Tooltip;\nvar TooltipBorder = /** @class */function (_super) {\n  __extends(TooltipBorder, _super);\n  function TooltipBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TooltipBorder.OptionName = \"border\";\n  return TooltipBorder;\n}(nested_option_1.default);\nexports.TooltipBorder = TooltipBorder;\nexports.default = BarGauge;","map":null,"metadata":{},"sourceType":"script"}