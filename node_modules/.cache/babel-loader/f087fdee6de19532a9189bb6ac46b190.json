{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CursorOffset = exports.Draggable = void 0;\nvar draggable_1 = require(\"devextreme/ui/draggable\");\nvar PropTypes = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar Draggable = /** @class */function (_super) {\n  __extends(Draggable, _super);\n  function Draggable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._WidgetClass = draggable_1.default;\n    _this.independentEvents = [\"onDisposing\", \"onDragEnd\", \"onDragMove\", \"onDragStart\", \"onInitialized\"];\n    _this._expectedChildren = {\n      cursorOffset: {\n        optionName: \"cursorOffset\",\n        isCollectionItem: false\n      }\n    };\n    _this._templateProps = [{\n      tmplOption: \"dragTemplate\",\n      render: \"dragRender\",\n      component: \"dragComponent\",\n      keyFn: \"dragKeyFn\"\n    }];\n    return _this;\n  }\n  Object.defineProperty(Draggable.prototype, \"instance\", {\n    get: function get() {\n      return this._instance;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Draggable;\n}(component_1.Component);\nexports.Draggable = Draggable;\nDraggable.propTypes = {\n  autoScroll: PropTypes.bool,\n  clone: PropTypes.bool,\n  cursorOffset: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  dragDirection: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"both\", \"horizontal\", \"vertical\"])]),\n  elementAttr: PropTypes.object,\n  group: PropTypes.string,\n  handle: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  onDisposing: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDragMove: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onInitialized: PropTypes.func,\n  onOptionChanged: PropTypes.func,\n  rtlEnabled: PropTypes.bool,\n  scrollSensitivity: PropTypes.number,\n  scrollSpeed: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string])\n};\nvar CursorOffset = /** @class */function (_super) {\n  __extends(CursorOffset, _super);\n  function CursorOffset() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CursorOffset.OptionName = \"cursorOffset\";\n  return CursorOffset;\n}(nested_option_1.default);\nexports.CursorOffset = CursorOffset;\nexports.default = Draggable;","map":null,"metadata":{},"sourceType":"script"}