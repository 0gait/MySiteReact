{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/cell.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"allDay\", \"ariaLabel\", \"children\", \"className\", \"contentTemplateProps\", \"endDate\", \"groupIndex\", \"groups\", \"index\", \"isFirstGroupCell\", \"isLastGroupCell\", \"startDate\", \"text\", \"timeCellTemplate\"];\nimport { createVNode, createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { CellBase as Cell, CellBaseProps } from \"../cell\";\nexport var viewFunction = function viewFunction(_ref) {\n  var _ref$props = _ref.props,\n    className = _ref$props.className,\n    isFirstGroupCell = _ref$props.isFirstGroupCell,\n    isLastGroupCell = _ref$props.isLastGroupCell,\n    text = _ref$props.text,\n    TimeCellTemplate = _ref$props.timeCellTemplate,\n    timeCellTemplateProps = _ref.timeCellTemplateProps;\n  return createComponentVNode(2, Cell, {\n    isFirstGroupCell: isFirstGroupCell,\n    isLastGroupCell: isLastGroupCell,\n    className: \"dx-scheduler-time-panel-cell dx-scheduler-cell-sizes-vertical \".concat(className),\n    children: [!TimeCellTemplate && createVNode(1, \"div\", null, text, 0), !!TimeCellTemplate && TimeCellTemplate({\n      index: timeCellTemplateProps.index,\n      data: timeCellTemplateProps.data\n    })]\n  });\n};\nexport var TimePanelCellProps = CellBaseProps;\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\nexport var TimePanelCell = /*#__PURE__*/function (_BaseInfernoComponent) {\n  _inherits(TimePanelCell, _BaseInfernoComponent);\n  function TimePanelCell(props) {\n    var _this;\n    _classCallCheck(this, TimePanelCell);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimePanelCell).call(this, props));\n    _this.state = {};\n    _this.__getterCache = {};\n    return _this;\n  }\n  _createClass(TimePanelCell, [{\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState, context) {\n      if (this.props.groupIndex !== nextProps.groupIndex || this.props.groups !== nextProps.groups || this.props.index !== nextProps.index || this.props.startDate !== nextProps.startDate || this.props.text !== nextProps.text) {\n        this.__getterCache.timeCellTemplateProps = void 0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          timeCellTemplate: getTemplate(props.timeCellTemplate)\n        }),\n        timeCellTemplateProps: this.timeCellTemplateProps,\n        restAttributes: this.restAttributes\n      });\n    }\n  }, {\n    key: \"timeCellTemplateProps\",\n    get: function get() {\n      var _this2 = this;\n      if (void 0 !== this.__getterCache.timeCellTemplateProps) {\n        return this.__getterCache.timeCellTemplateProps;\n      }\n      return this.__getterCache.timeCellTemplateProps = function () {\n        var _this2$props = _this2.props,\n          groupIndex = _this2$props.groupIndex,\n          groups = _this2$props.groups,\n          index = _this2$props.index,\n          startDate = _this2$props.startDate,\n          text = _this2$props.text;\n        return {\n          data: {\n            date: startDate,\n            groups: groups,\n            groupIndex: groupIndex,\n            text: text\n          },\n          index: index\n        };\n      }();\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n      return restProps;\n    }\n  }]);\n  return TimePanelCell;\n}(BaseInfernoComponent);\nTimePanelCell.defaultProps = TimePanelCellProps;","map":null,"metadata":{},"sourceType":"module"}