{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findProps = exports.Template = void 0;\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar Template = /** @class */function (_super) {\n  __extends(Template, _super);\n  function Template() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Template.prototype.render = function () {\n    return null;\n  };\n  return Template;\n}(React.PureComponent);\nexports.Template = Template;\nvar requiredPropsCheck = function requiredPropsCheck(props) {\n  if (!props.component && !props.render && !props.children) {\n    return new Error(\"The Template component requires 'component' or 'render' property\");\n  }\n  return null;\n};\nTemplate.propTypes = {\n  name: PropTypes.string.isRequired,\n  component: requiredPropsCheck,\n  render: requiredPropsCheck,\n  children: requiredPropsCheck\n};\nfunction findProps(child) {\n  if (child.type !== Template) {\n    return undefined;\n  }\n  return {\n    name: child.props.name,\n    render: child.props.render,\n    component: child.props.component,\n    children: child.props.children,\n    keyFn: child.props.keyFn\n  };\n}\nexports.findProps = findProps;","map":null,"metadata":{},"sourceType":"script"}