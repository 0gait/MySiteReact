{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n/**\r\n * DevExtreme (esm/ui/popup/popup_position_controller.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"fullScreen\", \"forceApplyBindings\", \"dragOutsideBoundary\", \"dragAndResizeArea\", \"outsideDragFactor\"];\nimport $ from \"../../core/renderer\";\nimport { move } from \"../../animation/translator\";\nimport { getWindow } from \"../../core/utils/window\";\nimport { originalViewPort } from \"../../core/utils/view_port\";\nimport { OverlayPositionController } from \"../overlay/overlay_position_controller\";\nvar window = getWindow();\nvar PopupPositionController = /*#__PURE__*/function (_OverlayPositionContr) {\n  _inherits(PopupPositionController, _OverlayPositionContr);\n  function PopupPositionController(_ref) {\n    var _this;\n    _classCallCheck(this, PopupPositionController);\n    var fullScreen = _ref.fullScreen,\n      forceApplyBindings = _ref.forceApplyBindings,\n      dragOutsideBoundary = _ref.dragOutsideBoundary,\n      dragAndResizeArea = _ref.dragAndResizeArea,\n      outsideDragFactor = _ref.outsideDragFactor,\n      args = _objectWithoutPropertiesLoose(_ref, _excluded);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PopupPositionController).call(this, args));\n    _this._props = _extends({}, _this._props, {\n      fullScreen: fullScreen,\n      forceApplyBindings: forceApplyBindings,\n      dragOutsideBoundary: dragOutsideBoundary,\n      dragAndResizeArea: dragAndResizeArea,\n      outsideDragFactor: outsideDragFactor\n    });\n    _this._$dragResizeContainer = void 0;\n    _this._outsideDragFactor = void 0;\n    _this._lastPositionBeforeFullScreen = void 0;\n    _this._updateDragResizeContainer();\n    _this._updateOutsideDragFactor();\n    return _this;\n  }\n  _createClass(PopupPositionController, [{\n    key: \"updateContainer\",\n    value: function updateContainer(containerProp) {\n      _get(_getPrototypeOf(PopupPositionController.prototype), \"updateContainer\", this).call(this, containerProp);\n      this._updateDragResizeContainer();\n    }\n  }, {\n    key: \"dragHandled\",\n    value: function dragHandled() {\n      this.restorePositionOnNextRender(false);\n    }\n  }, {\n    key: \"resizeHandled\",\n    value: function resizeHandled() {\n      this.restorePositionOnNextRender(false);\n    }\n  }, {\n    key: \"positionContent\",\n    value: function positionContent() {\n      if (this._props.fullScreen) {\n        move(this._$content, {\n          top: 0,\n          left: 0\n        });\n        this.detectVisualPositionChange();\n      } else {\n        var _this$_props$forceApp, _this$_props;\n        null === (_this$_props$forceApp = (_this$_props = this._props).forceApplyBindings) || void 0 === _this$_props$forceApp ? void 0 : _this$_props$forceApp.call(_this$_props);\n        if (!this._shouldRenderContentInitialPosition && this._lastPositionBeforeFullScreen) {\n          move(this._$content, this._lastPositionBeforeFullScreen);\n          this._lastPositionBeforeFullScreen = void 0;\n          this.detectVisualPositionChange();\n        } else {\n          _get(_getPrototypeOf(PopupPositionController.prototype), \"positionContent\", this).call(this);\n        }\n      }\n    }\n  }, {\n    key: \"_updateOutsideDragFactor\",\n    value: function _updateOutsideDragFactor() {\n      this._outsideDragFactor = this._getOutsideDragFactor();\n    }\n  }, {\n    key: \"_getOutsideDragFactor\",\n    value: function _getOutsideDragFactor() {\n      if (this._props.dragOutsideBoundary) {\n        return 1;\n      }\n      return this._props.outsideDragFactor;\n    }\n  }, {\n    key: \"_updateDragResizeContainer\",\n    value: function _updateDragResizeContainer() {\n      this._$dragResizeContainer = this._getDragResizeContainer();\n    }\n  }, {\n    key: \"_getDragResizeContainer\",\n    value: function _getDragResizeContainer() {\n      if (this._props.dragOutsideBoundary) {\n        return $(window);\n      }\n      if (this._props.dragAndResizeArea) {\n        return $(this._props.dragAndResizeArea);\n      }\n      var isContainerDefined = originalViewPort().get(0) || this._props.container;\n      return isContainerDefined ? this._$markupContainer : $(window);\n    }\n  }, {\n    key: \"_getVisualContainer\",\n    value: function _getVisualContainer() {\n      if (this._props.fullScreen) {\n        return $(window);\n      }\n      return _get(_getPrototypeOf(PopupPositionController.prototype), \"_getVisualContainer\", this).call(this);\n    }\n  }, {\n    key: \"_fullScreenEnabled\",\n    value: function _fullScreenEnabled() {\n      this.restorePositionOnNextRender(false);\n      this._lastPositionBeforeFullScreen = this._visualPosition;\n    }\n  }, {\n    key: \"_fullScreenDisabled\",\n    value: function _fullScreenDisabled() {\n      this.restorePositionOnNextRender(false);\n    }\n  }, {\n    key: \"fullScreen\",\n    set: function set(fullScreen) {\n      this._props.fullScreen = fullScreen;\n      if (fullScreen) {\n        this._fullScreenEnabled();\n      } else {\n        this._fullScreenDisabled();\n      }\n    }\n  }, {\n    key: \"$dragResizeContainer\",\n    get: function get() {\n      return this._$dragResizeContainer;\n    }\n  }, {\n    key: \"outsideDragFactor\",\n    get: function get() {\n      return this._outsideDragFactor;\n    },\n    set: function set(outsideDragFactor) {\n      this._props.outsideDragFactor = outsideDragFactor;\n      this._updateOutsideDragFactor();\n    }\n  }, {\n    key: \"dragAndResizeArea\",\n    set: function set(dragAndResizeArea) {\n      this._props.dragAndResizeArea = dragAndResizeArea;\n      this._updateDragResizeContainer();\n    }\n  }, {\n    key: \"dragOutsideBoundary\",\n    set: function set(dragOutsideBoundary) {\n      this._props.dragOutsideBoundary = dragOutsideBoundary;\n      this._updateDragResizeContainer();\n      this._updateOutsideDragFactor();\n    }\n  }]);\n  return PopupPositionController;\n}(OverlayPositionController);\nexport { PopupPositionController };","map":null,"metadata":{},"sourceType":"module"}