{"ast":null,"code":"import _get from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n/**\r\n * DevExtreme (esm/ui/html_editor/utils/image_uploader_helper.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"imageSrc\", \"src\"];\nimport $ from \"../../../core/renderer\";\nimport localizationMessage from \"../../../localization/message\";\nimport { map } from \"../../../core/utils/iterator\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { getHeight, getWidth } from \"../../../core/utils/size\";\nimport devices from \"../../../core/devices\";\nimport { isDefined } from \"../../../core/utils/type\";\nvar isMobile = \"phone\" === devices.current().deviceType;\nvar DIALOG_IMAGE_CAPTION = \"dxHtmlEditor-dialogImageCaption\";\nvar DIALOG_UPDATE_IMAGE_CAPTION = \"dxHtmlEditor-dialogUpdateImageCaption\";\nvar DIALOG_IMAGE_FIELD_URL = \"dxHtmlEditor-dialogImageUrlField\";\nvar DIALOG_IMAGE_FIELD_ALT = \"dxHtmlEditor-dialogImageAltField\";\nvar DIALOG_IMAGE_FIELD_WIDTH = \"dxHtmlEditor-dialogImageWidthField\";\nvar DIALOG_IMAGE_FIELD_HEIGHT = \"dxHtmlEditor-dialogImageHeightField\";\nvar DIALOG_IMAGE_ADD_BUTTON = \"dxHtmlEditor-dialogImageAddButton\";\nvar DIALOG_IMAGE_UPDATE_BUTTON = \"dxHtmlEditor-dialogImageUpdateButton\";\nvar DIALOG_IMAGE_SPECIFY_URL = \"dxHtmlEditor-dialogImageSpecifyUrl\";\nvar DIALOG_IMAGE_SELECT_FILE = \"dxHtmlEditor-dialogImageSelectFile\";\nvar DIALOG_IMAGE_KEEP_ASPECT_RATIO = \"dxHtmlEditor-dialogImageKeepAspectRatio\";\nvar DIALOG_IMAGE_ENCODE_TO_BASE64 = \"dxHtmlEditor-dialogImageEncodeToBase64\";\nvar DIALOG_IMAGE_POPUP_CLASS = \"dx-htmleditor-add-image-popup\";\nvar DIALOG_IMAGE_POPUP_WITH_TABS_CLASS = \"dx-htmleditor-add-image-popup-with-tabs\";\nvar DIALOG_IMAGE_FIX_RATIO_CONTAINER = \"dx-fix-ratio-container\";\nvar FORM_DIALOG_CLASS = \"dx-formdialog\";\nvar USER_ACTION = \"user\";\nvar SILENT_ACTION = \"silent\";\nvar FILE_UPLOADER_NAME = \"dx-htmleditor-image\";\nimport ButtonGroup from \"../../button_group\";\nimport FileUploader from \"../../file_uploader\";\nimport TextBox from \"../../text_box\";\nexport var ImageUploader = /*#__PURE__*/function () {\n  function ImageUploader(module, config) {\n    _classCallCheck(this, ImageUploader);\n    this.module = module;\n    this.config = null !== config && void 0 !== config ? config : {};\n    this.quill = this.module.quill;\n    this.editorInstance = this.module.editorInstance;\n  }\n  _createClass(ImageUploader, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      if (this.editorInstance._formDialog) {\n        this.editorInstance._formDialog.beforeAddButtonAction = function () {\n          return _this.getCurrentTab().upload();\n        };\n      }\n      this.tabPanelIndex = 0;\n      this.formData = this.getFormData();\n      this.isUpdating = this.isImageUpdating();\n      this.tabsModel = this.createTabsModel(this.config.tabs);\n      this.tabs = this.createTabs(this.formData);\n      var formConfig = this.getFormConfig();\n      this.updatePopupConfig();\n      this.updateAddButtonState();\n      this.editorInstance.showFormDialog(formConfig).done(function (formData, event) {\n        _this.tabs[_this.getActiveTabIndex()].strategy.pasteImage(formData, event);\n      }).always(function () {\n        _this.resetDialogPopupOptions();\n        _this.quill.focus();\n      });\n    }\n  }, {\n    key: \"getCurrentTab\",\n    value: function getCurrentTab() {\n      return this.tabs[this.tabPanelIndex];\n    }\n  }, {\n    key: \"updateAddButtonState\",\n    value: function updateAddButtonState() {\n      var isDisabled = this.getCurrentTab().isDisableButton();\n      this.setAddButtonDisabled(isDisabled);\n    }\n  }, {\n    key: \"setAddButtonDisabled\",\n    value: function setAddButtonDisabled(value) {\n      this.editorInstance.formDialogOption({\n        \"toolbarItems[0].options.disabled\": value\n      });\n    }\n  }, {\n    key: \"getActiveTabIndex\",\n    value: function getActiveTabIndex() {\n      return this.isUpdating ? 0 : this.tabPanelIndex;\n    }\n  }, {\n    key: \"getFormData\",\n    value: function getFormData() {\n      return this.getUpdateDialogFormData(this.quill.getFormat());\n    }\n  }, {\n    key: \"getUpdateDialogFormData\",\n    value: function getUpdateDialogFormData(formData) {\n      var imageSrc = formData.imageSrc,\n        src = formData.src,\n        props = _objectWithoutPropertiesLoose(formData, _excluded);\n      return _extends({\n        src: null !== imageSrc && void 0 !== imageSrc ? imageSrc : src\n      }, props);\n    }\n  }, {\n    key: \"createUrlTab\",\n    value: function createUrlTab(formData) {\n      var _this2 = this;\n      return new UrlTab(this.module, {\n        config: this.config,\n        formData: formData,\n        isUpdating: this.isUpdating\n      }, function () {\n        return _this2.updateAddButtonState();\n      });\n    }\n  }, {\n    key: \"createFileTab\",\n    value: function createFileTab() {\n      var _this3 = this;\n      return new FileTab(this.module, {\n        config: this.config\n      }, function () {\n        return _this3.updateAddButtonState();\n      });\n    }\n  }, {\n    key: \"createTabsModel\",\n    value: function createTabsModel() {\n      var model = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n      if (0 === model.length || this.isUpdating) {\n        return [\"url\"];\n      }\n      return model.map(function (tab) {\n        return \"object\" === typeof tab ? tab.name : tab;\n      });\n    }\n  }, {\n    key: \"createTabs\",\n    value: function createTabs(formData) {\n      var _this4 = this;\n      return this.tabsModel.map(function (tabName) {\n        var isUrlTab = \"url\" === tabName;\n        return isUrlTab ? _this4.createUrlTab(formData) : _this4.createFileTab();\n      });\n    }\n  }, {\n    key: \"isImageUpdating\",\n    value: function isImageUpdating() {\n      var _this$module$quill$ge;\n      return Object.prototype.hasOwnProperty.call(null !== (_this$module$quill$ge = this.module.quill.getFormat()) && void 0 !== _this$module$quill$ge ? _this$module$quill$ge : {}, \"imageSrc\");\n    }\n  }, {\n    key: \"updatePopupConfig\",\n    value: function updatePopupConfig() {\n      var wrapperClasses = \"\".concat(DIALOG_IMAGE_POPUP_CLASS, \" \").concat(FORM_DIALOG_CLASS);\n      if (this.useTabbedItems()) {\n        wrapperClasses += \" \".concat(DIALOG_IMAGE_POPUP_WITH_TABS_CLASS);\n      }\n      var titleKey = this.isUpdating ? DIALOG_UPDATE_IMAGE_CAPTION : DIALOG_IMAGE_CAPTION;\n      var addButtonTextKey = this.isUpdating ? DIALOG_IMAGE_UPDATE_BUTTON : DIALOG_IMAGE_ADD_BUTTON;\n      this.editorInstance.formDialogOption({\n        title: localizationMessage.format(titleKey),\n        \"toolbarItems[0].options.text\": localizationMessage.format(addButtonTextKey),\n        wrapperAttr: {\n          class: wrapperClasses\n        }\n      });\n    }\n  }, {\n    key: \"resetDialogPopupOptions\",\n    value: function resetDialogPopupOptions() {\n      this.editorInstance.formDialogOption({\n        \"toolbarItems[0].options.text\": localizationMessage.format(\"OK\"),\n        \"toolbarItems[0].options.visible\": true,\n        \"toolbarItems[0].options.disabled\": false,\n        wrapperAttr: {\n          class: FORM_DIALOG_CLASS\n        }\n      });\n    }\n  }, {\n    key: \"useTabbedItems\",\n    value: function useTabbedItems() {\n      return this.tabsModel.length > 1;\n    }\n  }, {\n    key: \"getFormWidth\",\n    value: function getFormWidth() {\n      return isMobile ? \"100%\" : 493;\n    }\n  }, {\n    key: \"getFormConfig\",\n    value: function getFormConfig() {\n      return {\n        formData: this.formData,\n        width: this.getFormWidth(),\n        labelLocation: \"top\",\n        colCount: this.useTabbedItems() ? 1 : 11,\n        items: this.getItemsConfig()\n      };\n    }\n  }, {\n    key: \"getItemsConfig\",\n    value: function getItemsConfig() {\n      var _this5 = this;\n      if (this.useTabbedItems()) {\n        var tabsConfig = map(this.tabs, function (tabController) {\n          return {\n            title: tabController.getTabName(),\n            colCount: 11,\n            items: tabController.getItemsConfig()\n          };\n        });\n        return [{\n          itemType: \"tabbed\",\n          tabPanelOptions: {\n            onSelectionChanged: function onSelectionChanged(e) {\n              _this5.tabPanelIndex = e.component.option(\"selectedIndex\");\n              _this5.updateAddButtonState();\n            }\n          },\n          tabs: tabsConfig\n        }];\n      }\n      return this.tabs[0].getItemsConfig();\n    }\n  }]);\n  return ImageUploader;\n}();\nvar BaseTab = /*#__PURE__*/function () {\n  function BaseTab(module, _ref, onFileSelected) {\n    _classCallCheck(this, BaseTab);\n    var config = _ref.config,\n      formData = _ref.formData,\n      isUpdating = _ref.isUpdating;\n    this.module = module;\n    this.config = config;\n    this.formData = formData;\n    this.isUpdating = isUpdating;\n    this.onFileSelected = onFileSelected;\n    this.strategy = this.createStrategy();\n  }\n  _createClass(BaseTab, [{\n    key: \"getItemsConfig\",\n    value: function getItemsConfig() {\n      return this.strategy.getItemsConfig();\n    }\n  }, {\n    key: \"createStrategy\",\n    value: function createStrategy() {\n      return this.isUpdating ? new UpdateUrlStrategy(this.module, this.config, this.formData) : new AddUrlStrategy(this.module, this.config, this.onFileSelected);\n    }\n  }, {\n    key: \"isDisableButton\",\n    value: function isDisableButton() {\n      return false;\n    }\n  }, {\n    key: \"upload\",\n    value: function upload() {\n      return this.strategy.upload();\n    }\n  }]);\n  return BaseTab;\n}();\nvar UrlTab = /*#__PURE__*/function (_BaseTab) {\n  _inherits(UrlTab, _BaseTab);\n  function UrlTab() {\n    _classCallCheck(this, UrlTab);\n    return _possibleConstructorReturn(this, _getPrototypeOf(UrlTab).apply(this, arguments));\n  }\n  _createClass(UrlTab, [{\n    key: \"getTabName\",\n    value: function getTabName() {\n      return localizationMessage.format(DIALOG_IMAGE_SPECIFY_URL);\n    }\n  }]);\n  return UrlTab;\n}(BaseTab);\nvar FileTab = /*#__PURE__*/function (_BaseTab2) {\n  _inherits(FileTab, _BaseTab2);\n  function FileTab() {\n    _classCallCheck(this, FileTab);\n    return _possibleConstructorReturn(this, _getPrototypeOf(FileTab).apply(this, arguments));\n  }\n  _createClass(FileTab, [{\n    key: \"getTabName\",\n    value: function getTabName() {\n      return localizationMessage.format(DIALOG_IMAGE_SELECT_FILE);\n    }\n  }, {\n    key: \"createStrategy\",\n    value: function createStrategy() {\n      return new FileStrategy(this.module, this.config, this.onFileSelected);\n    }\n  }, {\n    key: \"isDisableButton\",\n    value: function isDisableButton() {\n      return !this.strategy.isValid();\n    }\n  }]);\n  return FileTab;\n}(BaseTab);\nvar BaseStrategy = /*#__PURE__*/function () {\n  function BaseStrategy(module, config) {\n    _classCallCheck(this, BaseStrategy);\n    this.module = module;\n    this.config = config;\n    this.editorInstance = module.editorInstance;\n    this.quill = module.quill;\n    this.selection = this.getQuillSelection();\n  }\n  _createClass(BaseStrategy, [{\n    key: \"getQuillSelection\",\n    value: function getQuillSelection() {\n      var selection = this.quill.getSelection();\n      return null !== selection && void 0 !== selection ? selection : {\n        index: this.quill.getLength(),\n        length: 0\n      };\n    }\n  }, {\n    key: \"pasteImage\",\n    value: function pasteImage() {}\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return true;\n    }\n  }, {\n    key: \"upload\",\n    value: function upload() {}\n  }]);\n  return BaseStrategy;\n}();\nvar AddUrlStrategy = /*#__PURE__*/function (_BaseStrategy) {\n  _inherits(AddUrlStrategy, _BaseStrategy);\n  function AddUrlStrategy(module, config, onFileSelected) {\n    var _this6;\n    _classCallCheck(this, AddUrlStrategy);\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(AddUrlStrategy).call(this, module, config, onFileSelected));\n    _this6.shouldKeepAspectRatio = true;\n    return _this6;\n  }\n  _createClass(AddUrlStrategy, [{\n    key: \"pasteImage\",\n    value: function pasteImage(formData, event) {\n      this.module.saveValueChangeEvent(event);\n      urlUpload(this.quill, this.selection.index, formData);\n    }\n  }, {\n    key: \"keepAspectRatio\",\n    value: function keepAspectRatio(data, _ref2) {\n      var dependentEditor = _ref2.dependentEditor,\n        e = _ref2.e;\n      var newValue = parseInt(e.value);\n      var previousValue = parseInt(e.previousValue);\n      var previousDependentEditorValue = parseInt(dependentEditor.option(\"value\"));\n      data.component.updateData(data.dataField, newValue);\n      if (this.shouldKeepAspectRatio && previousDependentEditorValue && previousValue && !this.preventRecalculating) {\n        this.preventRecalculating = true;\n        dependentEditor.option(\"value\", Math.round(newValue * previousDependentEditorValue / parseInt(previousValue)).toString());\n      }\n      this.preventRecalculating = false;\n    }\n  }, {\n    key: \"createKeepAspectRatioEditor\",\n    value: function createKeepAspectRatioEditor($container, data, dependentEditorDataField) {\n      var _this7 = this;\n      return this.editorInstance._createComponent($container, TextBox, extend(true, data.editorOptions, {\n        value: data.component.option(\"formData\")[data.dataField],\n        onEnterKey: data.component.option(\"onEditorEnterKey\").bind(this.editorInstance._formDialog, data),\n        onValueChanged: function onValueChanged(e) {\n          _this7.keepAspectRatio(data, {\n            dependentEditor: _this7[dependentEditorDataField + \"Editor\"],\n            e: e\n          });\n        }\n      }));\n    }\n  }, {\n    key: \"upload\",\n    value: function upload() {\n      var result = this.editorInstance._formDialog._form.validate();\n      return result.isValid;\n    }\n  }, {\n    key: \"getItemsConfig\",\n    value: function getItemsConfig() {\n      var _this8 = this;\n      return [{\n        dataField: \"src\",\n        colSpan: 11,\n        label: {\n          text: localizationMessage.format(DIALOG_IMAGE_FIELD_URL)\n        },\n        validationRules: [{\n          type: \"required\"\n        }, {\n          type: \"stringLength\",\n          min: 1\n        }]\n      }, {\n        dataField: \"width\",\n        colSpan: 6,\n        label: {\n          text: localizationMessage.format(DIALOG_IMAGE_FIELD_WIDTH)\n        },\n        template: function template(data) {\n          var $content = $(\"<div>\").addClass(DIALOG_IMAGE_FIX_RATIO_CONTAINER);\n          var $widthEditor = $(\"<div>\").appendTo($content);\n          _this8.widthEditor = _this8.createKeepAspectRatioEditor($widthEditor, data, \"height\");\n          var $ratioEditor = $(\"<div>\").appendTo($content);\n          _this8.editorInstance._createComponent($ratioEditor, ButtonGroup, {\n            items: [{\n              icon: \"imgarlock\",\n              value: \"keepRatio\"\n            }],\n            hint: localizationMessage.format(DIALOG_IMAGE_KEEP_ASPECT_RATIO),\n            focusStateEnabled: false,\n            keyExpr: \"value\",\n            stylingMode: \"outlined\",\n            selectionMode: \"multiple\",\n            selectedItemKeys: [\"keepRatio\"],\n            onSelectionChanged: function onSelectionChanged(e) {\n              _this8.shouldKeepAspectRatio = !!e.component.option(\"selectedItems\").length;\n            }\n          });\n          return $content;\n        }\n      }, {\n        dataField: \"height\",\n        colSpan: 5,\n        label: {\n          text: localizationMessage.format(DIALOG_IMAGE_FIELD_HEIGHT)\n        },\n        template: function template(data) {\n          var $content = $(\"<div>\");\n          _this8.heightEditor = _this8.createKeepAspectRatioEditor($content, data, \"width\");\n          return $content;\n        }\n      }, {\n        dataField: \"alt\",\n        colSpan: 11,\n        label: {\n          text: localizationMessage.format(DIALOG_IMAGE_FIELD_ALT)\n        }\n      }];\n    }\n  }]);\n  return AddUrlStrategy;\n}(BaseStrategy);\nvar UpdateUrlStrategy = /*#__PURE__*/function (_AddUrlStrategy) {\n  _inherits(UpdateUrlStrategy, _AddUrlStrategy);\n  function UpdateUrlStrategy(module, config, formData, onFileSelected) {\n    var _this9;\n    _classCallCheck(this, UpdateUrlStrategy);\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(UpdateUrlStrategy).call(this, module, config, onFileSelected));\n    _this9.formData = formData;\n    _this9.modifyFormData();\n    return _this9;\n  }\n  _createClass(UpdateUrlStrategy, [{\n    key: \"modifyFormData\",\n    value: function modifyFormData() {\n      var _this$quill$getFormat = this.quill.getFormat(this.selection.index - 1, 1),\n        imageSrc = _this$quill$getFormat.imageSrc;\n      if (!imageSrc || 0 === this.selection.index) {\n        this.selection = {\n          index: this.selection.index + 1,\n          length: 0\n        };\n        this.quill.setSelection(this.selection.index, this.selection.length, SILENT_ACTION);\n      }\n      var imgElement = this.quill.getLeaf(this.selection.index)[0].domNode;\n      if (imgElement) {\n        var _this$formData$width, _this$formData$height;\n        this.formData.width = null !== (_this$formData$width = this.formData.width) && void 0 !== _this$formData$width ? _this$formData$width : getWidth($(imgElement));\n        this.formData.height = null !== (_this$formData$height = this.formData.height) && void 0 !== _this$formData$height ? _this$formData$height : getHeight($(imgElement));\n      }\n    }\n  }, {\n    key: \"pasteImage\",\n    value: function pasteImage(formData, event) {\n      this.quill.deleteText(this.embedFormatIndex(), 1, SILENT_ACTION);\n      this.selection.index -= 1;\n      _get(_getPrototypeOf(UpdateUrlStrategy.prototype), \"pasteImage\", this).call(this, formData, event);\n    }\n  }, {\n    key: \"embedFormatIndex\",\n    value: function embedFormatIndex() {\n      var _this$selection;\n      var selection = null !== (_this$selection = this.selection) && void 0 !== _this$selection ? _this$selection : this.quill.getSelection();\n      if (selection) {\n        if (selection.length) {\n          return selection.index;\n        } else {\n          return selection.index - 1;\n        }\n      } else {\n        return this.quill.getLength();\n      }\n    }\n  }]);\n  return UpdateUrlStrategy;\n}(AddUrlStrategy);\nvar FileStrategy = /*#__PURE__*/function (_BaseStrategy2) {\n  _inherits(FileStrategy, _BaseStrategy2);\n  function FileStrategy(module, config, onFileSelected) {\n    var _this10;\n    _classCallCheck(this, FileStrategy);\n    _this10 = _possibleConstructorReturn(this, _getPrototypeOf(FileStrategy).call(this, module, config, onFileSelected));\n    _this10.useBase64 = !isDefined(_this10.config.fileUploadMode) || \"base64\" === _this10.config.fileUploadMode;\n    _this10.isValidInternal = false;\n    _this10.onFileSelected = onFileSelected;\n    _this10.data = null;\n    return _this10;\n  }\n  _createClass(FileStrategy, [{\n    key: \"upload\",\n    value: function upload() {\n      if (this.useBase64) {\n        this.base64Upload(this.data);\n      } else if (this.data.value.length) {\n        this.data.component.upload();\n      }\n      return true;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return this.isValidInternal;\n    }\n  }, {\n    key: \"closeDialogPopup\",\n    value: function closeDialogPopup(data) {\n      this.editorInstance._formDialog.hide({\n        file: data.value ? data.value[0] : data.file\n      }, data.event);\n    }\n  }, {\n    key: \"serverUpload\",\n    value: function serverUpload(data) {\n      if (!this.useBase64) {\n        var imageUrl = correctSlashesInUrl(this.config.uploadDirectory) + data.file.name;\n        urlUpload(this.quill, this.selection.index, {\n          src: imageUrl\n        });\n        this.closeDialogPopup(data);\n      }\n    }\n  }, {\n    key: \"base64Upload\",\n    value: function base64Upload(data) {\n      this.quill.getModule(\"uploader\").upload(this.selection, data.value, true);\n      this.closeDialogPopup(data);\n    }\n  }, {\n    key: \"pasteImage\",\n    value: function pasteImage(formData, event) {\n      if (this.useBase64) {\n        _get(_getPrototypeOf(FileStrategy.prototype), \"pasteImage\", this).call(this, formData, event);\n      }\n    }\n  }, {\n    key: \"isBase64Editable\",\n    value: function isBase64Editable() {\n      return \"both\" === this.config.fileUploadMode;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(e) {\n      var fileUploader = e.component;\n      this.isValidInternal = !fileUploader._files.some(function (file) {\n        return !file.isValid();\n      });\n      if (0 === fileUploader._files.length) {\n        this.isValidInternal = false;\n      }\n    }\n  }, {\n    key: \"getFileUploaderOptions\",\n    value: function getFileUploaderOptions() {\n      var _this11 = this;\n      var fileUploaderOptions = {\n        uploadUrl: this.config.uploadUrl,\n        onValueChanged: function onValueChanged(data) {\n          _this11.validate(data);\n          _this11.data = data;\n          _this11.onFileSelected();\n        },\n        onUploaded: function onUploaded(e) {\n          return _this11.serverUpload(e);\n        }\n      };\n      return extend({}, getFileUploaderBaseOptions(), fileUploaderOptions, this.config.fileUploaderOptions);\n    }\n  }, {\n    key: \"getItemsConfig\",\n    value: function getItemsConfig() {\n      var _this12 = this;\n      return [{\n        itemType: \"simple\",\n        dataField: \"files\",\n        colSpan: 11,\n        label: {\n          visible: false\n        },\n        template: function template() {\n          var $content = $(\"<div>\");\n          _this12.module.editorInstance._createComponent($content, FileUploader, _this12.getFileUploaderOptions());\n          return $content;\n        }\n      }, {\n        itemType: \"simple\",\n        colSpan: 11,\n        label: {\n          visible: false\n        },\n        editorType: \"dxCheckBox\",\n        editorOptions: {\n          value: this.useBase64,\n          visible: this.isBase64Editable(),\n          text: localizationMessage.format(DIALOG_IMAGE_ENCODE_TO_BASE64),\n          onValueChanged: function onValueChanged(e) {\n            if (_this12.isBase64Editable()) {\n              _this12.useBase64 = e.value;\n            }\n          }\n        }\n      }];\n    }\n  }]);\n  return FileStrategy;\n}(BaseStrategy);\nexport function correctSlashesInUrl(url) {\n  return \"/\" !== url[url.length - 1] ? url + \"/\" : url;\n}\nexport function getFileUploaderBaseOptions() {\n  return {\n    value: [],\n    name: FILE_UPLOADER_NAME,\n    accept: \"image/*\",\n    uploadMode: \"useButtons\"\n  };\n}\nexport function urlUpload(quill, index, attributes) {\n  quill.insertEmbed(index, \"extendedImage\", attributes, USER_ACTION);\n  quill.setSelection(index + 1, 0, USER_ACTION);\n}","map":null,"metadata":{},"sourceType":"module"}