{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n/**\r\n * DevExtreme (esm/ui/toolbar/strategy/toolbar.multiline.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth, getOuterWidth } from \"../../../core/utils/size\";\nvar TOOLBAR_LABEL_CLASS = \"dx-toolbar-label\";\nexport var MultiLineStrategy = /*#__PURE__*/function () {\n  function MultiLineStrategy(toolbar) {\n    _classCallCheck(this, MultiLineStrategy);\n    this._toolbar = toolbar;\n  }\n  _createClass(MultiLineStrategy, [{\n    key: \"_initMarkup\",\n    value: function _initMarkup() {}\n  }, {\n    key: \"_updateMenuVisibility\",\n    value: function _updateMenuVisibility() {}\n  }, {\n    key: \"_renderMenuItems\",\n    value: function _renderMenuItems() {}\n  }, {\n    key: \"_renderItem\",\n    value: function _renderItem() {}\n  }, {\n    key: \"_getMenuItems\",\n    value: function _getMenuItems() {}\n  }, {\n    key: \"_getToolbarItems\",\n    value: function _getToolbarItems() {\n      var _this$_toolbar$option;\n      return null !== (_this$_toolbar$option = this._toolbar.option(\"items\")) && void 0 !== _this$_toolbar$option ? _this$_toolbar$option : [];\n    }\n  }, {\n    key: \"_getItemsWidth\",\n    value: function _getItemsWidth() {\n      return this._toolbar._getSummaryItemsWidth(this._toolbar.itemElements(), true);\n    }\n  }, {\n    key: \"_arrangeItems\",\n    value: function _arrangeItems() {\n      var $label = this._toolbar._$toolbarItemsContainer.find(\".\".concat(TOOLBAR_LABEL_CLASS)).eq(0);\n      if (!$label.length) {\n        return;\n      }\n      var elementWidth = getWidth(this._toolbar.$element());\n      var labelPaddings = getOuterWidth($label) - getWidth($label);\n      $label.css(\"maxWidth\", elementWidth - labelPaddings);\n    }\n  }, {\n    key: \"_hideOverflowItems\",\n    value: function _hideOverflowItems() {}\n  }, {\n    key: \"_dimensionChanged\",\n    value: function _dimensionChanged() {}\n  }, {\n    key: \"_itemOptionChanged\",\n    value: function _itemOptionChanged() {}\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged() {}\n  }]);\n  return MultiLineStrategy;\n}();","map":null,"metadata":{},"sourceType":"module"}