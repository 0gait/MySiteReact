{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.utils.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nvar BUTTON_GROUP_CLASS = \"dx-buttongroup\";\nvar TOOLBAR_ITEMS = [\"dxAutocomplete\", \"dxButton\", \"dxCheckBox\", \"dxDateBox\", \"dxMenu\", \"dxSelectBox\", \"dxTabs\", \"dxTextBox\", \"dxButtonGroup\", \"dxDropDownButton\"];\nvar getItemInstance = function getItemInstance($element) {\n  var itemData = $element.data && $element.data();\n  var dxComponents = itemData && itemData.dxComponents;\n  var widgetName = dxComponents && dxComponents[0];\n  return widgetName && itemData[widgetName];\n};\nexport function toggleItemFocusableElementTabIndex(context, item) {\n  var _itemData$options;\n  if (!context) {\n    return;\n  }\n  var $item = context._findItemElementByItem(item);\n  if (!$item.length) {\n    return;\n  }\n  var itemData = context._getItemData($item);\n  var isItemNotFocusable = !!(null !== (_itemData$options = itemData.options) && void 0 !== _itemData$options && _itemData$options.disabled || itemData.disabled || context.option(\"disabled\"));\n  var widget = itemData.widget;\n  if (widget && -1 !== TOOLBAR_ITEMS.indexOf(widget)) {\n    var $widget = $item.find(widget.toLowerCase().replace(\"dx\", \".dx-\"));\n    if ($widget.length) {\n      var _itemInstance$_focusT, _itemData$options2;\n      var itemInstance = getItemInstance($widget);\n      if (!itemInstance) {\n        return;\n      }\n      var $focusTarget = null === (_itemInstance$_focusT = itemInstance._focusTarget) || void 0 === _itemInstance$_focusT ? void 0 : _itemInstance$_focusT.call(itemInstance);\n      if (\"dxDropDownButton\" === widget) {\n        $focusTarget = $focusTarget && $focusTarget.find(\".\".concat(BUTTON_GROUP_CLASS));\n      } else {\n        var _$focusTarget;\n        $focusTarget = null !== (_$focusTarget = $focusTarget) && void 0 !== _$focusTarget ? _$focusTarget : $(itemInstance.element());\n      }\n      var tabIndex = null === (_itemData$options2 = itemData.options) || void 0 === _itemData$options2 ? void 0 : _itemData$options2.tabIndex;\n      if (isItemNotFocusable) {\n        $focusTarget.attr(\"tabIndex\", -1);\n      } else {\n        $focusTarget.attr(\"tabIndex\", null !== tabIndex && void 0 !== tabIndex ? tabIndex : 0);\n      }\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}