{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/form/components/label.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { getPublicElement } from \"../../../core/element\";\nimport { getLabelMarkText } from \"../ui.form.layout_manager.utils\";\nimport { FIELD_ITEM_LABEL_CONTENT_CLASS, FIELD_ITEM_LABEL_CLASS } from \"../constants\";\nexport var GET_LABEL_WIDTH_BY_TEXT_CLASS = \"dx-layout-manager-hidden-label\";\nexport var FIELD_ITEM_REQUIRED_MARK_CLASS = \"dx-field-item-required-mark\";\nexport var FIELD_ITEM_LABEL_LOCATION_CLASS = \"dx-field-item-label-location-\";\nexport var FIELD_ITEM_OPTIONAL_MARK_CLASS = \"dx-field-item-optional-mark\";\nexport var FIELD_ITEM_LABEL_TEXT_CLASS = \"dx-field-item-label-text\";\nexport function renderLabel(_ref) {\n  var text = _ref.text,\n    id = _ref.id,\n    location = _ref.location,\n    alignment = _ref.alignment,\n    _ref$labelID = _ref.labelID,\n    labelID = _ref$labelID === void 0 ? null : _ref$labelID,\n    _ref$markOptions = _ref.markOptions,\n    markOptions = _ref$markOptions === void 0 ? {} : _ref$markOptions,\n    labelTemplate = _ref.labelTemplate,\n    labelTemplateData = _ref.labelTemplateData,\n    onLabelTemplateRendered = _ref.onLabelTemplateRendered;\n  if ((!isDefined(text) || text.length <= 0) && !isDefined(labelTemplate)) {\n    return null;\n  }\n  var $label = $(\"<label>\").addClass(FIELD_ITEM_LABEL_CLASS + \" \" + FIELD_ITEM_LABEL_LOCATION_CLASS + location).attr(\"for\", id).attr(\"id\", labelID).css(\"textAlign\", alignment);\n  var $labelContainer = $(\"<span>\").addClass(FIELD_ITEM_LABEL_CONTENT_CLASS);\n  var $labelContent = $(\"<span>\").addClass(FIELD_ITEM_LABEL_TEXT_CLASS).text(text);\n  if (labelTemplate) {\n    $labelContent = $(\"<div>\").addClass(\"dx-field-item-custom-label-content\");\n    labelTemplateData.text = text;\n    labelTemplate.render({\n      container: getPublicElement($labelContent),\n      model: labelTemplateData,\n      onRendered: function onRendered() {\n        null === onLabelTemplateRendered || void 0 === onLabelTemplateRendered ? void 0 : onLabelTemplateRendered();\n      }\n    });\n  }\n  return $label.append($labelContainer.append($labelContent, _renderLabelMark(markOptions)));\n}\nfunction _renderLabelMark(markOptions) {\n  var markText = getLabelMarkText(markOptions);\n  if (\"\" === markText) {\n    return null;\n  }\n  return $(\"<span>\").addClass(markOptions.showRequiredMark ? FIELD_ITEM_REQUIRED_MARK_CLASS : FIELD_ITEM_OPTIONAL_MARK_CLASS).text(markText);\n}\nexport function setLabelWidthByMaxLabelWidth($targetContainer, labelsSelector, labelMarkOptions) {\n  var FIELD_ITEM_LABEL_CONTENT_CLASS_Selector = \"\".concat(labelsSelector, \" > .\").concat(FIELD_ITEM_LABEL_CLASS, \":not(.\").concat(FIELD_ITEM_LABEL_LOCATION_CLASS, \"top) > .\").concat(FIELD_ITEM_LABEL_CONTENT_CLASS);\n  var $FIELD_ITEM_LABEL_CONTENT_CLASS_Items = $targetContainer.find(FIELD_ITEM_LABEL_CONTENT_CLASS_Selector);\n  var FIELD_ITEM_LABEL_CONTENT_CLASS_Length = $FIELD_ITEM_LABEL_CONTENT_CLASS_Items.length;\n  var labelWidth;\n  var i;\n  var maxWidth = 0;\n  for (i = 0; i < FIELD_ITEM_LABEL_CONTENT_CLASS_Length; i++) {\n    labelWidth = getLabelWidthByHTML($FIELD_ITEM_LABEL_CONTENT_CLASS_Items[i]);\n    if (labelWidth > maxWidth) {\n      maxWidth = labelWidth;\n    }\n  }\n  for (i = 0; i < FIELD_ITEM_LABEL_CONTENT_CLASS_Length; i++) {\n    $FIELD_ITEM_LABEL_CONTENT_CLASS_Items[i].style.width = maxWidth + \"px\";\n  }\n}\nfunction getLabelWidthByHTML(labelContent) {\n  var result = 0;\n  var itemsCount = labelContent.children.length;\n  for (var i = 0; i < itemsCount; i++) {\n    var child = labelContent.children[i];\n    result += child.offsetWidth;\n  }\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}