{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Item = exports.ButtonGroup = void 0;\nvar button_group_1 = require(\"devextreme/ui/button_group\");\nvar PropTypes = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar ButtonGroup = /** @class */function (_super) {\n  __extends(ButtonGroup, _super);\n  function ButtonGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._WidgetClass = button_group_1.default;\n    _this.subscribableOptions = [\"selectedItemKeys\", \"selectedItems\"];\n    _this.independentEvents = [\"onContentReady\", \"onDisposing\", \"onInitialized\", \"onItemClick\"];\n    _this._defaults = {\n      defaultSelectedItemKeys: \"selectedItemKeys\",\n      defaultSelectedItems: \"selectedItems\"\n    };\n    _this._expectedChildren = {\n      item: {\n        optionName: \"items\",\n        isCollectionItem: true\n      }\n    };\n    _this._templateProps = [{\n      tmplOption: \"buttonTemplate\",\n      render: \"buttonRender\",\n      component: \"buttonComponent\",\n      keyFn: \"buttonKeyFn\"\n    }];\n    return _this;\n  }\n  Object.defineProperty(ButtonGroup.prototype, \"instance\", {\n    get: function get() {\n      return this._instance;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ButtonGroup;\n}(component_1.Component);\nexports.ButtonGroup = ButtonGroup;\nButtonGroup.propTypes = {\n  accessKey: PropTypes.string,\n  activeStateEnabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  elementAttr: PropTypes.object,\n  focusStateEnabled: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  hint: PropTypes.string,\n  hoverStateEnabled: PropTypes.bool,\n  items: PropTypes.array,\n  keyExpr: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  onContentReady: PropTypes.func,\n  onDisposing: PropTypes.func,\n  onInitialized: PropTypes.func,\n  onItemClick: PropTypes.func,\n  onOptionChanged: PropTypes.func,\n  onSelectionChanged: PropTypes.func,\n  rtlEnabled: PropTypes.bool,\n  selectedItemKeys: PropTypes.array,\n  selectedItems: PropTypes.array,\n  selectionMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"single\", \"multiple\", \"none\"])]),\n  stylingMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"text\", \"outlined\", \"contained\"])]),\n  tabIndex: PropTypes.number,\n  visible: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string])\n};\nvar Item = /** @class */function (_super) {\n  __extends(Item, _super);\n  function Item() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Item.OptionName = \"items\";\n  Item.IsCollectionItem = true;\n  Item.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }];\n  return Item;\n}(nested_option_1.default);\nexports.Item = Item;\nexports.default = ButtonGroup;","map":null,"metadata":{},"sourceType":"script"}