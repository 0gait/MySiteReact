{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Options = exports.Format = exports.Button = exports.NumberBox = void 0;\nvar number_box_1 = require(\"devextreme/ui/number_box\");\nvar PropTypes = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar NumberBox = /** @class */function (_super) {\n  __extends(NumberBox, _super);\n  function NumberBox() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._WidgetClass = number_box_1.default;\n    _this.subscribableOptions = [\"value\"];\n    _this.independentEvents = [\"onChange\", \"onContentReady\", \"onCopy\", \"onCut\", \"onDisposing\", \"onEnterKey\", \"onFocusIn\", \"onFocusOut\", \"onInitialized\", \"onInput\", \"onKeyDown\", \"onKeyUp\", \"onPaste\", \"onValueChanged\"];\n    _this._defaults = {\n      defaultValue: \"value\"\n    };\n    _this._expectedChildren = {\n      button: {\n        optionName: \"buttons\",\n        isCollectionItem: true\n      },\n      format: {\n        optionName: \"format\",\n        isCollectionItem: false\n      }\n    };\n    return _this;\n  }\n  Object.defineProperty(NumberBox.prototype, \"instance\", {\n    get: function get() {\n      return this._instance;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return NumberBox;\n}(component_1.Component);\nexports.NumberBox = NumberBox;\nNumberBox.propTypes = {\n  accessKey: PropTypes.string,\n  activeStateEnabled: PropTypes.bool,\n  buttons: PropTypes.array,\n  disabled: PropTypes.bool,\n  elementAttr: PropTypes.object,\n  focusStateEnabled: PropTypes.bool,\n  format: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  hint: PropTypes.string,\n  hoverStateEnabled: PropTypes.bool,\n  invalidValueMessage: PropTypes.string,\n  isValid: PropTypes.bool,\n  label: PropTypes.string,\n  labelMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"static\", \"floating\", \"hidden\"])]),\n  max: PropTypes.number,\n  min: PropTypes.number,\n  mode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"number\", \"text\", \"tel\"])]),\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onContentReady: PropTypes.func,\n  onCopy: PropTypes.func,\n  onCut: PropTypes.func,\n  onDisposing: PropTypes.func,\n  onEnterKey: PropTypes.func,\n  onFocusIn: PropTypes.func,\n  onFocusOut: PropTypes.func,\n  onInitialized: PropTypes.func,\n  onInput: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onOptionChanged: PropTypes.func,\n  onPaste: PropTypes.func,\n  onValueChanged: PropTypes.func,\n  placeholder: PropTypes.string,\n  readOnly: PropTypes.bool,\n  rtlEnabled: PropTypes.bool,\n  showClearButton: PropTypes.bool,\n  showSpinButtons: PropTypes.bool,\n  step: PropTypes.number,\n  stylingMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"outlined\", \"underlined\", \"filled\"])]),\n  tabIndex: PropTypes.number,\n  text: PropTypes.string,\n  useLargeSpinButtons: PropTypes.bool,\n  validationErrors: PropTypes.array,\n  validationMessageMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"always\", \"auto\"])]),\n  validationMessagePosition: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"bottom\", \"left\", \"right\", \"top\"])]),\n  validationStatus: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"valid\", \"invalid\", \"pending\"])]),\n  value: PropTypes.number,\n  valueChangeEvent: PropTypes.string,\n  visible: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string])\n};\nvar Button = /** @class */function (_super) {\n  __extends(Button, _super);\n  function Button() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Button.OptionName = \"buttons\";\n  Button.IsCollectionItem = true;\n  Button.ExpectedChildren = {\n    options: {\n      optionName: \"options\",\n      isCollectionItem: false\n    }\n  };\n  return Button;\n}(nested_option_1.default);\nexports.Button = Button;\nvar Format = /** @class */function (_super) {\n  __extends(Format, _super);\n  function Format() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Format.OptionName = \"format\";\n  return Format;\n}(nested_option_1.default);\nexports.Format = Format;\nvar Options = /** @class */function (_super) {\n  __extends(Options, _super);\n  function Options() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Options.OptionName = \"options\";\n  Options.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }];\n  return Options;\n}(nested_option_1.default);\nexports.Options = Options;\nexports.default = NumberBox;","map":null,"metadata":{},"sourceType":"script"}