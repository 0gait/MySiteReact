{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Texts = exports.StateStoring = exports.Scrolling = exports.PivotGridTexts = exports.LoadPanel = exports.HeaderFilterTexts = exports.HeaderFilter = exports.FieldPanelTexts = exports.FieldPanel = exports.FieldChooserTexts = exports.FieldChooser = exports.Export = exports.PivotGrid = void 0;\nvar pivot_grid_1 = require(\"devextreme/ui/pivot_grid\");\nvar PropTypes = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar PivotGrid = /** @class */function (_super) {\n  __extends(PivotGrid, _super);\n  function PivotGrid() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._WidgetClass = pivot_grid_1.default;\n    _this.independentEvents = [\"onCellClick\", \"onCellPrepared\", \"onContentReady\", \"onContextMenuPreparing\", \"onDisposing\", \"onExporting\", \"onInitialized\"];\n    _this._expectedChildren = {\n      export: {\n        optionName: \"export\",\n        isCollectionItem: false\n      },\n      fieldChooser: {\n        optionName: \"fieldChooser\",\n        isCollectionItem: false\n      },\n      fieldPanel: {\n        optionName: \"fieldPanel\",\n        isCollectionItem: false\n      },\n      headerFilter: {\n        optionName: \"headerFilter\",\n        isCollectionItem: false\n      },\n      loadPanel: {\n        optionName: \"loadPanel\",\n        isCollectionItem: false\n      },\n      pivotGridTexts: {\n        optionName: \"texts\",\n        isCollectionItem: false\n      },\n      scrolling: {\n        optionName: \"scrolling\",\n        isCollectionItem: false\n      },\n      stateStoring: {\n        optionName: \"stateStoring\",\n        isCollectionItem: false\n      },\n      texts: {\n        optionName: \"texts\",\n        isCollectionItem: false\n      }\n    };\n    return _this;\n  }\n  Object.defineProperty(PivotGrid.prototype, \"instance\", {\n    get: function get() {\n      return this._instance;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return PivotGrid;\n}(component_1.Component);\nexports.PivotGrid = PivotGrid;\nPivotGrid.propTypes = {\n  allowExpandAll: PropTypes.bool,\n  allowFiltering: PropTypes.bool,\n  allowSorting: PropTypes.bool,\n  allowSortingBySummary: PropTypes.bool,\n  dataFieldArea: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"column\", \"row\"])]),\n  disabled: PropTypes.bool,\n  elementAttr: PropTypes.object,\n  encodeHtml: PropTypes.bool,\n  export: PropTypes.object,\n  fieldChooser: PropTypes.object,\n  fieldPanel: PropTypes.object,\n  headerFilter: PropTypes.object,\n  height: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  hideEmptySummaryCells: PropTypes.bool,\n  hint: PropTypes.string,\n  loadPanel: PropTypes.object,\n  onCellClick: PropTypes.func,\n  onCellPrepared: PropTypes.func,\n  onContentReady: PropTypes.func,\n  onContextMenuPreparing: PropTypes.func,\n  onDisposing: PropTypes.func,\n  onExporting: PropTypes.func,\n  onInitialized: PropTypes.func,\n  onOptionChanged: PropTypes.func,\n  rowHeaderLayout: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"standard\", \"tree\"])]),\n  rtlEnabled: PropTypes.bool,\n  scrolling: PropTypes.object,\n  showBorders: PropTypes.bool,\n  showColumnGrandTotals: PropTypes.bool,\n  showColumnTotals: PropTypes.bool,\n  showRowGrandTotals: PropTypes.bool,\n  showRowTotals: PropTypes.bool,\n  showTotalsPrior: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"both\", \"columns\", \"none\", \"rows\"])]),\n  stateStoring: PropTypes.object,\n  tabIndex: PropTypes.number,\n  texts: PropTypes.object,\n  visible: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  wordWrapEnabled: PropTypes.bool\n};\nvar Export = /** @class */function (_super) {\n  __extends(Export, _super);\n  function Export() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Export.OptionName = \"export\";\n  return Export;\n}(nested_option_1.default);\nexports.Export = Export;\nvar FieldChooser = /** @class */function (_super) {\n  __extends(FieldChooser, _super);\n  function FieldChooser() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  FieldChooser.OptionName = \"fieldChooser\";\n  FieldChooser.ExpectedChildren = {\n    fieldChooserTexts: {\n      optionName: \"texts\",\n      isCollectionItem: false\n    },\n    texts: {\n      optionName: \"texts\",\n      isCollectionItem: false\n    }\n  };\n  return FieldChooser;\n}(nested_option_1.default);\nexports.FieldChooser = FieldChooser;\nvar FieldChooserTexts = /** @class */function (_super) {\n  __extends(FieldChooserTexts, _super);\n  function FieldChooserTexts() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  FieldChooserTexts.OptionName = \"texts\";\n  return FieldChooserTexts;\n}(nested_option_1.default);\nexports.FieldChooserTexts = FieldChooserTexts;\nvar FieldPanel = /** @class */function (_super) {\n  __extends(FieldPanel, _super);\n  function FieldPanel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  FieldPanel.OptionName = \"fieldPanel\";\n  FieldPanel.ExpectedChildren = {\n    fieldPanelTexts: {\n      optionName: \"texts\",\n      isCollectionItem: false\n    },\n    texts: {\n      optionName: \"texts\",\n      isCollectionItem: false\n    }\n  };\n  return FieldPanel;\n}(nested_option_1.default);\nexports.FieldPanel = FieldPanel;\nvar FieldPanelTexts = /** @class */function (_super) {\n  __extends(FieldPanelTexts, _super);\n  function FieldPanelTexts() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  FieldPanelTexts.OptionName = \"texts\";\n  return FieldPanelTexts;\n}(nested_option_1.default);\nexports.FieldPanelTexts = FieldPanelTexts;\nvar HeaderFilter = /** @class */function (_super) {\n  __extends(HeaderFilter, _super);\n  function HeaderFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HeaderFilter.OptionName = \"headerFilter\";\n  HeaderFilter.ExpectedChildren = {\n    headerFilterTexts: {\n      optionName: \"texts\",\n      isCollectionItem: false\n    },\n    texts: {\n      optionName: \"texts\",\n      isCollectionItem: false\n    }\n  };\n  return HeaderFilter;\n}(nested_option_1.default);\nexports.HeaderFilter = HeaderFilter;\nvar HeaderFilterTexts = /** @class */function (_super) {\n  __extends(HeaderFilterTexts, _super);\n  function HeaderFilterTexts() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HeaderFilterTexts.OptionName = \"texts\";\n  return HeaderFilterTexts;\n}(nested_option_1.default);\nexports.HeaderFilterTexts = HeaderFilterTexts;\nvar LoadPanel = /** @class */function (_super) {\n  __extends(LoadPanel, _super);\n  function LoadPanel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LoadPanel.OptionName = \"loadPanel\";\n  return LoadPanel;\n}(nested_option_1.default);\nexports.LoadPanel = LoadPanel;\nvar PivotGridTexts = /** @class */function (_super) {\n  __extends(PivotGridTexts, _super);\n  function PivotGridTexts() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PivotGridTexts.OptionName = \"texts\";\n  return PivotGridTexts;\n}(nested_option_1.default);\nexports.PivotGridTexts = PivotGridTexts;\nvar Scrolling = /** @class */function (_super) {\n  __extends(Scrolling, _super);\n  function Scrolling() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Scrolling.OptionName = \"scrolling\";\n  return Scrolling;\n}(nested_option_1.default);\nexports.Scrolling = Scrolling;\nvar StateStoring = /** @class */function (_super) {\n  __extends(StateStoring, _super);\n  function StateStoring() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  StateStoring.OptionName = \"stateStoring\";\n  return StateStoring;\n}(nested_option_1.default);\nexports.StateStoring = StateStoring;\nvar Texts = /** @class */function (_super) {\n  __extends(Texts, _super);\n  function Texts() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Texts.OptionName = \"texts\";\n  return Texts;\n}(nested_option_1.default);\nexports.Texts = Texts;\nexports.default = PivotGrid;","map":null,"metadata":{},"sourceType":"script"}