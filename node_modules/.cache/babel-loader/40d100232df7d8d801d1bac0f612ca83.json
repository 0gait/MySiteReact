{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.actions.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getPublicElement } from \"../../core/element\";\nvar Actions = {\n  onContextMenuPreparing: \"onContextMenuPreparing\",\n  onCustomCommand: \"onCustomCommand\",\n  onDependencyDeleted: \"onDependencyDeleted\",\n  onDependencyDeleting: \"onDependencyDeleting\",\n  onDependencyInserted: \"onDependencyInserted\",\n  onDependencyInserting: \"onDependencyInserting\",\n  onResourceAssigned: \"onResourceAssigned\",\n  onResourceAssigning: \"onResourceAssigning\",\n  onResourceDeleted: \"onResourceDeleted\",\n  onResourceDeleting: \"onResourceDeleting\",\n  onResourceInserted: \"onResourceInserted\",\n  onResourceInserting: \"onResourceInserting\",\n  onResourceManagerDialogShowing: \"onResourceManagerDialogShowing\",\n  onResourceUnassigned: \"onResourceUnassigned\",\n  onResourceUnassigning: \"onResourceUnassigning\",\n  onSelectionChanged: \"onSelectionChanged\",\n  onTaskClick: \"onTaskClick\",\n  onTaskDblClick: \"onTaskDblClick\",\n  onTaskDeleted: \"onTaskDeleted\",\n  onTaskDeleting: \"onTaskDeleting\",\n  onTaskEditDialogShowing: \"onTaskEditDialogShowing\",\n  onTaskInserted: \"onTaskInserted\",\n  onTaskInserting: \"onTaskInserting\",\n  onTaskMoving: \"onTaskMoving\",\n  onTaskUpdated: \"onTaskUpdated\",\n  onTaskUpdating: \"onTaskUpdating\",\n  onScaleCellPrepared: \"onScaleCellPrepared\"\n};\nvar GANTT_TASKS = \"tasks\";\nvar GANTT_DEPENDENCIES = \"dependencies\";\nvar GANTT_RESOURCES = \"resources\";\nvar GANTT_RESOURCE_ASSIGNMENTS = \"resourceAssignments\";\nvar GANTT_NEW_TASK_CACHE_KEY = \"gantt_new_task_key\";\nexport var GanttActionsManager = /*#__PURE__*/function () {\n  function GanttActionsManager(gantt) {\n    _classCallCheck(this, GanttActionsManager);\n    this._gantt = gantt;\n    this._mappingHelper = gantt._mappingHelper;\n    this._customFieldsManager = gantt._customFieldsManager;\n  }\n  _createClass(GanttActionsManager, [{\n    key: \"_createActionByOption\",\n    value: function _createActionByOption(optionName) {\n      return this._gantt._createActionByOption(optionName);\n    }\n  }, {\n    key: \"_getTaskData\",\n    value: function _getTaskData(key) {\n      return this._gantt.getTaskData(key);\n    }\n  }, {\n    key: \"_convertCoreToMappedData\",\n    value: function _convertCoreToMappedData(optionName, coreData) {\n      return this._mappingHelper.convertCoreToMappedData(optionName, coreData);\n    }\n  }, {\n    key: \"_convertMappedToCoreData\",\n    value: function _convertMappedToCoreData(optionName, mappedData) {\n      return this._mappingHelper.convertMappedToCoreData(optionName, mappedData);\n    }\n  }, {\n    key: \"_convertMappedToCoreFields\",\n    value: function _convertMappedToCoreFields(optionName, fields) {\n      return this._mappingHelper.convertMappedToCoreFields(optionName, fields);\n    }\n  }, {\n    key: \"_convertCoreToMappedFields\",\n    value: function _convertCoreToMappedFields(optionName, fields) {\n      return this._mappingHelper.convertCoreToMappedFields(optionName, fields);\n    }\n  }, {\n    key: \"_saveCustomFieldsDataToCache\",\n    value: function _saveCustomFieldsDataToCache(key, data) {\n      var forceUpdateOnKeyExpire = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : false;\n      var isCustomFieldsUpdateOnly = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\n      this._customFieldsManager.saveCustomFieldsDataToCache(key, data, forceUpdateOnKeyExpire, isCustomFieldsUpdateOnly);\n    }\n  }, {\n    key: \"createTaskDblClickAction\",\n    value: function createTaskDblClickAction() {\n      this._taskDblClickAction = this._createActionByOption(Actions.onTaskDblClick);\n    }\n  }, {\n    key: \"taskDblClickAction\",\n    value: function taskDblClickAction(args) {\n      if (!this._taskDblClickAction) {\n        this.createTaskDblClickAction();\n      }\n      this._taskDblClickAction(args);\n    }\n  }, {\n    key: \"raiseTaskDblClickAction\",\n    value: function raiseTaskDblClickAction(key, event) {\n      var args = {\n        cancel: false,\n        data: this._getTaskData(key),\n        event: event,\n        key: key\n      };\n      this.taskDblClickAction(args);\n      return !args.cancel;\n    }\n  }, {\n    key: \"createTaskClickAction\",\n    value: function createTaskClickAction() {\n      this._taskClickAction = this._createActionByOption(Actions.onTaskClick);\n    }\n  }, {\n    key: \"taskClickAction\",\n    value: function taskClickAction(args) {\n      if (!this._taskClickAction) {\n        this.createTaskClickAction();\n      }\n      this._taskClickAction(args);\n    }\n  }, {\n    key: \"raiseTaskClickAction\",\n    value: function raiseTaskClickAction(key, event) {\n      var args = {\n        key: key,\n        event: event,\n        data: this._getTaskData(key)\n      };\n      this.taskClickAction(args);\n    }\n  }, {\n    key: \"createSelectionChangedAction\",\n    value: function createSelectionChangedAction() {\n      this._selectionChangedAction = this._createActionByOption(Actions.onSelectionChanged);\n    }\n  }, {\n    key: \"selectionChangedAction\",\n    value: function selectionChangedAction(args) {\n      if (!this._selectionChangedAction) {\n        this.createSelectionChangedAction();\n      }\n      this._selectionChangedAction(args);\n    }\n  }, {\n    key: \"raiseSelectionChangedAction\",\n    value: function raiseSelectionChangedAction(selectedRowKey) {\n      this.selectionChangedAction({\n        selectedRowKey: selectedRowKey\n      });\n    }\n  }, {\n    key: \"createCustomCommandAction\",\n    value: function createCustomCommandAction() {\n      this._customCommandAction = this._createActionByOption(Actions.onCustomCommand);\n    }\n  }, {\n    key: \"customCommandAction\",\n    value: function customCommandAction(args) {\n      if (!this._customCommandAction) {\n        this.createCustomCommandAction();\n      }\n      this._customCommandAction(args);\n    }\n  }, {\n    key: \"raiseCustomCommand\",\n    value: function raiseCustomCommand(commandName) {\n      this.customCommandAction({\n        name: commandName\n      });\n    }\n  }, {\n    key: \"createContextMenuPreparingAction\",\n    value: function createContextMenuPreparingAction() {\n      this._contextMenuPreparingAction = this._createActionByOption(Actions.onContextMenuPreparing);\n    }\n  }, {\n    key: \"contextMenuPreparingAction\",\n    value: function contextMenuPreparingAction(args) {\n      if (!this._contextMenuPreparingAction) {\n        this.createContextMenuPreparingAction();\n      }\n      this._contextMenuPreparingAction(args);\n    }\n  }, {\n    key: \"raiseContextMenuPreparing\",\n    value: function raiseContextMenuPreparing(options) {\n      this.contextMenuPreparingAction(options);\n    }\n  }, {\n    key: \"_getInsertingAction\",\n    value: function _getInsertingAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskInsertingAction();\n        case GANTT_DEPENDENCIES:\n          return this._getDependencyInsertingAction();\n        case GANTT_RESOURCES:\n          return this._getResourceInsertingAction();\n        case GANTT_RESOURCE_ASSIGNMENTS:\n          return this._getResourceAssigningAction();\n      }\n      return function () {};\n    }\n  }, {\n    key: \"raiseInsertingAction\",\n    value: function raiseInsertingAction(optionName, coreArgs) {\n      var action = this._getInsertingAction(optionName);\n      if (action) {\n        var args = {\n          cancel: false,\n          values: this._convertCoreToMappedData(optionName, coreArgs.values)\n        };\n        action(args);\n        coreArgs.cancel = args.cancel;\n        coreArgs.values = this._convertMappedToCoreData(optionName, args.values);\n        if (optionName === GANTT_TASKS) {\n          this._saveCustomFieldsDataToCache(GANTT_NEW_TASK_CACHE_KEY, args.values);\n        }\n      }\n    }\n  }, {\n    key: \"createTaskInsertingAction\",\n    value: function createTaskInsertingAction() {\n      this._taskInsertingAction = this._createActionByOption(Actions.onTaskInserting);\n    }\n  }, {\n    key: \"taskInsertingAction\",\n    value: function taskInsertingAction(args) {\n      var action = this._getTaskInsertingAction();\n      action(args);\n    }\n  }, {\n    key: \"_getTaskInsertingAction\",\n    value: function _getTaskInsertingAction() {\n      if (!this._taskInsertingAction) {\n        this.createTaskInsertingAction();\n      }\n      return this._taskInsertingAction;\n    }\n  }, {\n    key: \"createDependencyInsertingAction\",\n    value: function createDependencyInsertingAction() {\n      this._dependencyInsertingAction = this._createActionByOption(Actions.onDependencyInserting);\n    }\n  }, {\n    key: \"dependencyInsertingAction\",\n    value: function dependencyInsertingAction(args) {\n      var action = this._getDependencyInsertingAction();\n      action(args);\n    }\n  }, {\n    key: \"_getDependencyInsertingAction\",\n    value: function _getDependencyInsertingAction() {\n      if (!this._dependencyInsertingAction) {\n        this.createDependencyInsertingAction();\n      }\n      return this._dependencyInsertingAction;\n    }\n  }, {\n    key: \"createResourceInsertingAction\",\n    value: function createResourceInsertingAction() {\n      this._resourceInsertingAction = this._createActionByOption(Actions.onResourceInserting);\n    }\n  }, {\n    key: \"resourceInsertingAction\",\n    value: function resourceInsertingAction(args) {\n      var action = this._getResourceInsertingAction();\n      action(args);\n    }\n  }, {\n    key: \"_getResourceInsertingAction\",\n    value: function _getResourceInsertingAction() {\n      if (!this._resourceInsertingAction) {\n        this.createResourceInsertingAction();\n      }\n      return this._resourceInsertingAction;\n    }\n  }, {\n    key: \"createResourceAssigningAction\",\n    value: function createResourceAssigningAction() {\n      this._resourceAssigningAction = this._createActionByOption(Actions.onResourceAssigning);\n    }\n  }, {\n    key: \"resourceAssigningAction\",\n    value: function resourceAssigningAction(args) {\n      var action = this._getResourceAssigningAction();\n      action(args);\n    }\n  }, {\n    key: \"_getResourceAssigningAction\",\n    value: function _getResourceAssigningAction() {\n      if (!this._resourceAssigningAction) {\n        this.createResourceAssigningAction();\n      }\n      return this._resourceAssigningAction;\n    }\n  }, {\n    key: \"_getInsertedAction\",\n    value: function _getInsertedAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskInsertedAction();\n        case GANTT_DEPENDENCIES:\n          return this._getDependencyInsertedAction();\n        case GANTT_RESOURCES:\n          return this._getResourceInsertedAction();\n        case GANTT_RESOURCE_ASSIGNMENTS:\n          return this._getResourceAssignedAction();\n      }\n      return function () {};\n    }\n  }, {\n    key: \"raiseInsertedAction\",\n    value: function raiseInsertedAction(optionName, data, key) {\n      var action = this._getInsertedAction(optionName);\n      if (action) {\n        var args = {\n          values: data,\n          key: key\n        };\n        action(args);\n      }\n    }\n  }, {\n    key: \"createTaskInsertedAction\",\n    value: function createTaskInsertedAction() {\n      this._taskInsertedAction = this._createActionByOption(Actions.onTaskInserted);\n    }\n  }, {\n    key: \"taskInsertedAction\",\n    value: function taskInsertedAction(args) {\n      var action = this._getTaskInsertedAction();\n      action(args);\n    }\n  }, {\n    key: \"_getTaskInsertedAction\",\n    value: function _getTaskInsertedAction() {\n      if (!this._taskInsertedAction) {\n        this.createTaskInsertedAction();\n      }\n      return this._taskInsertedAction;\n    }\n  }, {\n    key: \"createDependencyInsertedAction\",\n    value: function createDependencyInsertedAction() {\n      this._dependencyInsertedAction = this._createActionByOption(Actions.onDependencyInserted);\n    }\n  }, {\n    key: \"dependencyInsertedAction\",\n    value: function dependencyInsertedAction(args) {\n      var action = this._getDependencyInsertedAction();\n      action(args);\n    }\n  }, {\n    key: \"_getDependencyInsertedAction\",\n    value: function _getDependencyInsertedAction() {\n      if (!this._dependencyInsertedAction) {\n        this.createDependencyInsertedAction();\n      }\n      return this._dependencyInsertedAction;\n    }\n  }, {\n    key: \"createResourceInsertedAction\",\n    value: function createResourceInsertedAction() {\n      this._resourceInsertedAction = this._createActionByOption(Actions.onResourceInserted);\n    }\n  }, {\n    key: \"resourceInsertedAction\",\n    value: function resourceInsertedAction(args) {\n      var action = this._getResourceInsertedAction();\n      action(args);\n    }\n  }, {\n    key: \"_getResourceInsertedAction\",\n    value: function _getResourceInsertedAction() {\n      if (!this._resourceInsertedAction) {\n        this.createResourceInsertedAction();\n      }\n      return this._resourceInsertedAction;\n    }\n  }, {\n    key: \"createResourceAssignedAction\",\n    value: function createResourceAssignedAction() {\n      this._resourceAssignedAction = this._createActionByOption(Actions.onResourceAssigned);\n    }\n  }, {\n    key: \"resourceAssignedAction\",\n    value: function resourceAssignedAction(args) {\n      var action = this._getResourceAssignedAction();\n      action(args);\n    }\n  }, {\n    key: \"_getResourceAssignedAction\",\n    value: function _getResourceAssignedAction() {\n      if (!this._resourceAssignedAction) {\n        this.createResourceAssignedAction();\n      }\n      return this._resourceAssignedAction;\n    }\n  }, {\n    key: \"_getDeletingAction\",\n    value: function _getDeletingAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskDeletingAction();\n        case GANTT_DEPENDENCIES:\n          return this._getDependencyDeletingAction();\n        case GANTT_RESOURCES:\n          return this._getResourceDeletingAction();\n        case GANTT_RESOURCE_ASSIGNMENTS:\n          return this._getResourceUnassigningAction();\n      }\n      return function () {};\n    }\n  }, {\n    key: \"raiseDeletingAction\",\n    value: function raiseDeletingAction(optionName, coreArgs) {\n      var action = this._getDeletingAction(optionName);\n      if (action) {\n        var args = {\n          cancel: false,\n          key: coreArgs.key,\n          values: this._convertCoreToMappedData(optionName, coreArgs.values)\n        };\n        action(args);\n        coreArgs.cancel = args.cancel;\n      }\n    }\n  }, {\n    key: \"createTaskDeletingAction\",\n    value: function createTaskDeletingAction() {\n      this._taskDeletingAction = this._createActionByOption(Actions.onTaskDeleting);\n    }\n  }, {\n    key: \"taskDeletingAction\",\n    value: function taskDeletingAction(args) {\n      var action = this._getTaskDeletingAction();\n      action(args);\n    }\n  }, {\n    key: \"_getTaskDeletingAction\",\n    value: function _getTaskDeletingAction() {\n      if (!this._taskDeletingAction) {\n        this.createTaskDeletingAction();\n      }\n      return this._taskDeletingAction;\n    }\n  }, {\n    key: \"createDependencyDeletingAction\",\n    value: function createDependencyDeletingAction() {\n      this._dependencyDeletingAction = this._createActionByOption(Actions.onDependencyDeleting);\n    }\n  }, {\n    key: \"dependencyDeletingAction\",\n    value: function dependencyDeletingAction(args) {\n      var action = this._getDependencyDeletingAction();\n      action(args);\n    }\n  }, {\n    key: \"_getDependencyDeletingAction\",\n    value: function _getDependencyDeletingAction() {\n      if (!this._dependencyDeletingAction) {\n        this.createDependencyDeletingAction();\n      }\n      return this._dependencyDeletingAction;\n    }\n  }, {\n    key: \"createResourceDeletingAction\",\n    value: function createResourceDeletingAction() {\n      this._resourceDeletingAction = this._createActionByOption(Actions.onResourceDeleting);\n    }\n  }, {\n    key: \"resourceDeletingAction\",\n    value: function resourceDeletingAction(args) {\n      var action = this._getResourceDeletingAction();\n      action(args);\n    }\n  }, {\n    key: \"_getResourceDeletingAction\",\n    value: function _getResourceDeletingAction() {\n      if (!this._resourceDeletingAction) {\n        this.createResourceDeletingAction();\n      }\n      return this._resourceDeletingAction;\n    }\n  }, {\n    key: \"createResourceUnassigningAction\",\n    value: function createResourceUnassigningAction() {\n      this._resourceUnassigningAction = this._createActionByOption(Actions.onResourceUnassigning);\n    }\n  }, {\n    key: \"resourceUnassigningAction\",\n    value: function resourceUnassigningAction(args) {\n      var action = this._getResourceUnassigningAction();\n      action(args);\n    }\n  }, {\n    key: \"_getResourceUnassigningAction\",\n    value: function _getResourceUnassigningAction() {\n      if (!this._resourceUnassigningAction) {\n        this.createResourceUnassigningAction();\n      }\n      return this._resourceUnassigningAction;\n    }\n  }, {\n    key: \"_getDeletedAction\",\n    value: function _getDeletedAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskDeletedAction();\n        case GANTT_DEPENDENCIES:\n          return this._getDependencyDeletedAction();\n        case GANTT_RESOURCES:\n          return this._getResourceDeletedAction();\n        case GANTT_RESOURCE_ASSIGNMENTS:\n          return this._getResourceUnassignedAction();\n      }\n      return function () {};\n    }\n  }, {\n    key: \"raiseDeletedAction\",\n    value: function raiseDeletedAction(optionName, key, data) {\n      var action = this._getDeletedAction(optionName);\n      if (action) {\n        var args = {\n          key: key,\n          values: data\n        };\n        action(args);\n      }\n    }\n  }, {\n    key: \"createTaskDeletedAction\",\n    value: function createTaskDeletedAction() {\n      this._taskDeletedAction = this._createActionByOption(Actions.onTaskDeleted);\n    }\n  }, {\n    key: \"taskDeletedAction\",\n    value: function taskDeletedAction(args) {\n      var action = this._getTaskDeletedAction();\n      action(args);\n    }\n  }, {\n    key: \"_getTaskDeletedAction\",\n    value: function _getTaskDeletedAction() {\n      if (!this._taskDeletedAction) {\n        this.createTaskDeletedAction();\n      }\n      return this._taskDeletedAction;\n    }\n  }, {\n    key: \"createDependencyDeletedAction\",\n    value: function createDependencyDeletedAction() {\n      this._dependencyDeletedAction = this._createActionByOption(Actions.onDependencyDeleted);\n    }\n  }, {\n    key: \"dependencyDeletedAction\",\n    value: function dependencyDeletedAction(args) {\n      var action = this._getDependencyDeletedAction();\n      action(args);\n    }\n  }, {\n    key: \"_getDependencyDeletedAction\",\n    value: function _getDependencyDeletedAction() {\n      if (!this._dependencyDeletedAction) {\n        this.createDependencyDeletedAction();\n      }\n      return this._dependencyDeletedAction;\n    }\n  }, {\n    key: \"createResourceDeletedAction\",\n    value: function createResourceDeletedAction() {\n      this._resourceDeletedAction = this._createActionByOption(Actions.onResourceDeleted);\n    }\n  }, {\n    key: \"resourceDeletedAction\",\n    value: function resourceDeletedAction(args) {\n      var action = this._getResourceDeletedAction();\n      action(args);\n    }\n  }, {\n    key: \"_getResourceDeletedAction\",\n    value: function _getResourceDeletedAction() {\n      if (!this._resourceDeletedAction) {\n        this.createResourceDeletedAction();\n      }\n      return this._resourceDeletedAction;\n    }\n  }, {\n    key: \"createResourceUnassignedAction\",\n    value: function createResourceUnassignedAction() {\n      this._resourceUnassignedAction = this._createActionByOption(Actions.onResourceUnassigned);\n    }\n  }, {\n    key: \"resourceUnassignedAction\",\n    value: function resourceUnassignedAction(args) {\n      var action = this._getResourceUnassignedAction();\n      action(args);\n    }\n  }, {\n    key: \"_getResourceUnassignedAction\",\n    value: function _getResourceUnassignedAction() {\n      if (!this._resourceUnassignedAction) {\n        this.createResourceUnassignedAction();\n      }\n      return this._resourceUnassignedAction;\n    }\n  }, {\n    key: \"_getUpdatingAction\",\n    value: function _getUpdatingAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskUpdatingAction();\n      }\n      return function () {};\n    }\n  }, {\n    key: \"raiseUpdatingAction\",\n    value: function raiseUpdatingAction(optionName, coreArgs, action) {\n      action = action || this._getUpdatingAction(optionName);\n      if (action) {\n        var isTaskUpdating = optionName === GANTT_TASKS;\n        var args = {\n          cancel: false,\n          key: coreArgs.key,\n          newValues: this._convertCoreToMappedData(optionName, coreArgs.newValues),\n          values: isTaskUpdating ? this._getTaskData(coreArgs.key) : this._convertCoreToMappedData(optionName, coreArgs.values)\n        };\n        if (isTaskUpdating && this._customFieldsManager.cache.hasData(args.key)) {\n          this._customFieldsManager.addCustomFieldsDataFromCache(args.key, args.newValues);\n        }\n        action(args);\n        coreArgs.cancel = args.cancel;\n        coreArgs.newValues = this._convertMappedToCoreData(optionName, args.newValues);\n        if (isTaskUpdating) {\n          if (args.cancel) {\n            this._customFieldsManager.resetCustomFieldsDataCache(args.key);\n          } else {\n            var forceUpdateOnKeyExpire = !Object.keys(coreArgs.newValues).length;\n            this._saveCustomFieldsDataToCache(args.key, args.newValues, forceUpdateOnKeyExpire);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"createTaskUpdatingAction\",\n    value: function createTaskUpdatingAction() {\n      this._taskUpdatingAction = this._createActionByOption(Actions.onTaskUpdating);\n    }\n  }, {\n    key: \"taskUpdatingAction\",\n    value: function taskUpdatingAction(args) {\n      var action = this._getTaskUpdatingAction();\n      action(args);\n    }\n  }, {\n    key: \"_getTaskUpdatingAction\",\n    value: function _getTaskUpdatingAction() {\n      if (!this._taskUpdatingAction) {\n        this.createTaskUpdatingAction();\n      }\n      return this._taskUpdatingAction;\n    }\n  }, {\n    key: \"_getUpdatedAction\",\n    value: function _getUpdatedAction(optionName) {\n      switch (optionName) {\n        case GANTT_TASKS:\n          return this._getTaskUpdatedAction();\n      }\n      return function () {};\n    }\n  }, {\n    key: \"raiseUpdatedAction\",\n    value: function raiseUpdatedAction(optionName, data, key) {\n      var action = this._getUpdatedAction(optionName);\n      if (action) {\n        var args = {\n          values: data,\n          key: key\n        };\n        action(args);\n      }\n    }\n  }, {\n    key: \"createTaskUpdatedAction\",\n    value: function createTaskUpdatedAction() {\n      this._taskUpdatedAction = this._createActionByOption(Actions.onTaskUpdated);\n    }\n  }, {\n    key: \"taskUpdatedAction\",\n    value: function taskUpdatedAction(args) {\n      var action = this._getTaskUpdatedAction();\n      action(args);\n    }\n  }, {\n    key: \"_getTaskUpdatedAction\",\n    value: function _getTaskUpdatedAction() {\n      if (!this._taskUpdatedAction) {\n        this.createTaskUpdatedAction();\n      }\n      return this._taskUpdatedAction;\n    }\n  }, {\n    key: \"createTaskEditDialogShowingAction\",\n    value: function createTaskEditDialogShowingAction() {\n      this._taskEditDialogShowingAction = this._createActionByOption(Actions.onTaskEditDialogShowing);\n    }\n  }, {\n    key: \"taskEditDialogShowingAction\",\n    value: function taskEditDialogShowingAction(args) {\n      var action = this._getTaskEditDialogShowingAction();\n      action(args);\n    }\n  }, {\n    key: \"_getTaskEditDialogShowingAction\",\n    value: function _getTaskEditDialogShowingAction() {\n      if (!this._taskEditDialogShowingAction) {\n        this.createTaskEditDialogShowingAction();\n      }\n      return this._taskEditDialogShowingAction;\n    }\n  }, {\n    key: \"raiseTaskEditDialogShowingAction\",\n    value: function raiseTaskEditDialogShowingAction(coreArgs) {\n      var action = this._getTaskEditDialogShowingAction();\n      if (action) {\n        var args = {\n          cancel: false,\n          key: coreArgs.key,\n          values: this._convertCoreToMappedData(GANTT_TASKS, coreArgs.values),\n          readOnlyFields: this._convertCoreToMappedFields(GANTT_TASKS, coreArgs.readOnlyFields),\n          hiddenFields: this._convertCoreToMappedFields(GANTT_TASKS, coreArgs.hiddenFields)\n        };\n        action(args);\n        coreArgs.cancel = args.cancel;\n        coreArgs.values = this._convertMappedToCoreData(GANTT_TASKS, args.values);\n        coreArgs.readOnlyFields = this._convertMappedToCoreFields(GANTT_TASKS, args.readOnlyFields);\n        coreArgs.hiddenFields = this._convertMappedToCoreFields(GANTT_TASKS, args.hiddenFields);\n      }\n    }\n  }, {\n    key: \"createResourceManagerDialogShowingAction\",\n    value: function createResourceManagerDialogShowingAction() {\n      this._resourceManagerDialogShowingAction = this._createActionByOption(Actions.onResourceManagerDialogShowing);\n    }\n  }, {\n    key: \"resourceManagerDialogShowingAction\",\n    value: function resourceManagerDialogShowingAction(args) {\n      var action = this._getResourceManagerDialogShowingAction();\n      action(args);\n    }\n  }, {\n    key: \"_getResourceManagerDialogShowingAction\",\n    value: function _getResourceManagerDialogShowingAction() {\n      if (!this._resourceManagerDialogShowingAction) {\n        this.createResourceManagerDialogShowingAction();\n      }\n      return this._resourceManagerDialogShowingAction;\n    }\n  }, {\n    key: \"raiseResourceManagerDialogShowingAction\",\n    value: function raiseResourceManagerDialogShowingAction(coreArgs) {\n      var _this = this;\n      var action = this._getResourceManagerDialogShowingAction();\n      if (action) {\n        var mappedResources = coreArgs.values.resources.items.map(function (r) {\n          return _this._convertMappedToCoreData(GANTT_RESOURCES, r);\n        });\n        var args = {\n          cancel: false,\n          values: mappedResources\n        };\n        action(args);\n        coreArgs.cancel = args.cancel;\n      }\n    }\n  }, {\n    key: \"createTaskMovingAction\",\n    value: function createTaskMovingAction() {\n      this._taskMovingAction = this._createActionByOption(Actions.onTaskMoving);\n    }\n  }, {\n    key: \"taskMovingAction\",\n    value: function taskMovingAction(args) {\n      var action = this.getTaskMovingAction();\n      action(args);\n    }\n  }, {\n    key: \"getTaskMovingAction\",\n    value: function getTaskMovingAction() {\n      if (!this._taskMovingAction) {\n        this.createTaskMovingAction();\n      }\n      return this._taskMovingAction;\n    }\n  }, {\n    key: \"getScaleCellPreparedAction\",\n    value: function getScaleCellPreparedAction() {\n      if (!this._scaleCellPreparedAction) {\n        this.createScaleCellPreparedAction();\n      }\n      return this._scaleCellPreparedAction;\n    }\n  }, {\n    key: \"createScaleCellPreparedAction\",\n    value: function createScaleCellPreparedAction() {\n      this._scaleCellPreparedAction = this._createActionByOption(Actions.onScaleCellPrepared);\n    }\n  }, {\n    key: \"raiseScaleCellPreparedAction\",\n    value: function raiseScaleCellPreparedAction(data) {\n      var action = this.getScaleCellPreparedAction();\n      if (action) {\n        var args = {\n          scaleIndex: data.scaleIndex,\n          scaleType: this._getScaleType(data.scaleType),\n          scaleElement: getPublicElement($(data.scaleElement)),\n          separatorElement: getPublicElement($(data.separatorElement)),\n          startDate: new Date(data.start),\n          endDate: new Date(data.end)\n        };\n        action(args);\n      }\n    }\n  }, {\n    key: \"_getScaleType\",\n    value: function _getScaleType(viewType) {\n      switch (viewType) {\n        case 0:\n          return \"minutes\";\n        case 1:\n          return \"hours\";\n        case 2:\n          return \"sixHours\";\n        case 3:\n          return \"days\";\n        case 4:\n          return \"weeks\";\n        case 5:\n          return \"months\";\n        case 6:\n          return \"quarters\";\n        case 7:\n          return \"years\";\n        case 8:\n          return \"fiveYears\";\n        default:\n          return;\n      }\n    }\n  }]);\n  return GanttActionsManager;\n}();","map":null,"metadata":{},"sourceType":"module"}