{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/week.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../../../../../core/utils/date\";\nimport dateLocalization from \"../../../../../../../localization/date\";\nimport { getCalculatedFirstDayOfWeek, getStartViewDateTimeOffset, getViewStartByOptions, setOptionHour } from \"./base\";\nimport timeZoneUtils from \"../../../../../../../ui/scheduler/utils.timeZone\";\nexport var getIntervalDuration = function getIntervalDuration(intervalCount) {\n  return 7 * dateUtils.dateToMilliseconds(\"day\") * intervalCount;\n};\nexport var getValidStartDate = function getValidStartDate(startDate, firstDayOfWeek) {\n  return startDate ? dateUtils.getFirstWeekDate(startDate, firstDayOfWeek) : void 0;\n};\nexport var calculateStartViewDate = function calculateStartViewDate(currentDate, startDayHour, startDate, intervalDuration, firstDayOfWeekOption) {\n  var firstDayOfWeek = getCalculatedFirstDayOfWeek(firstDayOfWeekOption);\n  var viewStart = getViewStartByOptions(startDate, currentDate, intervalDuration, getValidStartDate(startDate, firstDayOfWeek));\n  var firstViewDate = dateUtils.getFirstWeekDate(viewStart, firstDayOfWeek);\n  return setOptionHour(firstViewDate, startDayHour);\n};\nexport var calculateViewStartDate = function calculateViewStartDate(startDateOption, firstDayOfWeek) {\n  var validFirstDayOfWeek = null !== firstDayOfWeek && void 0 !== firstDayOfWeek ? firstDayOfWeek : dateLocalization.firstDayOfWeekIndex();\n  return dateUtils.getFirstWeekDate(startDateOption, validFirstDayOfWeek);\n};\nvar getTimeCellDate = function getTimeCellDate(rowIndex, date, startViewDate, cellDuration, startDayHour) {\n  if (!timeZoneUtils.isTimezoneChangeInDate(date)) {\n    return date;\n  }\n  var startViewDateWithoutDST = timeZoneUtils.getDateWithoutTimezoneChange(startViewDate);\n  var result = new Date(startViewDateWithoutDST);\n  var timeCellDuration = Math.round(cellDuration);\n  var startViewDateOffset = getStartViewDateTimeOffset(startViewDate, startDayHour);\n  result.setMilliseconds(result.getMilliseconds() + timeCellDuration * rowIndex - startViewDateOffset);\n  return result;\n};\nexport var getTimePanelCellText = function getTimePanelCellText(rowIndex, date, startViewDate, cellDuration, startDayHour) {\n  if (rowIndex % 2 === 0) {\n    var validDate = getTimeCellDate(rowIndex, date, startViewDate, cellDuration, startDayHour);\n    return dateLocalization.format(validDate, \"shorttime\");\n  }\n  return \"\";\n};","map":null,"metadata":{},"sourceType":"module"}