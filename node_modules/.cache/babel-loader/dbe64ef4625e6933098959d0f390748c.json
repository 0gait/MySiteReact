{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n/**\r\n * DevExtreme (esm/ui/scheduler/header/calendar.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport devices from \"../../../core/devices\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport Widget from \"../../widget/ui.widget\";\nimport Popover from \"../../popover/ui.popover\";\nimport Popup from \"../../popup/ui.popup\";\nimport Calendar from \"../../calendar\";\nimport Scrollable from \"../../scroll_view/ui.scrollable\";\nvar CALENDAR_CLASS = \"dx-scheduler-navigator-calendar\";\nvar CALENDAR_POPOVER_CLASS = \"dx-scheduler-navigator-calendar-popover\";\nvar SchedulerCalendar = /*#__PURE__*/function (_Widget) {\n  _inherits(SchedulerCalendar, _Widget);\n  function SchedulerCalendar() {\n    _classCallCheck(this, SchedulerCalendar);\n    return _possibleConstructorReturn(this, _getPrototypeOf(SchedulerCalendar).apply(this, arguments));\n  }\n  _createClass(SchedulerCalendar, [{\n    key: \"show\",\n    value: function show(target) {\n      if (!this._isMobileLayout()) {\n        this._overlay.option(\"target\", target);\n      }\n      this._overlay.show();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this._overlay.hide();\n    }\n  }, {\n    key: \"_keyboardHandler\",\n    value: function _keyboardHandler(opts) {\n      var _this$_calendar;\n      null === (_this$_calendar = this._calendar) || void 0 === _this$_calendar ? void 0 : _this$_calendar._keyboardHandler(opts);\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(SchedulerCalendar.prototype), \"_init\", this).call(this);\n      this.$element();\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(SchedulerCalendar.prototype), \"_render\", this).call(this);\n      this._renderOverlay();\n    }\n  }, {\n    key: \"_renderOverlay\",\n    value: function _renderOverlay() {\n      var _this = this;\n      this.$element().addClass(CALENDAR_POPOVER_CLASS);\n      var isMobileLayout = this._isMobileLayout();\n      var overlayType = isMobileLayout ? Popup : Popover;\n      this._overlay = this._createComponent(this.$element(), overlayType, {\n        contentTemplate: function contentTemplate() {\n          return _this._createOverlayContent();\n        },\n        onShown: function onShown() {\n          return _this._calendar.focus();\n        },\n        defaultOptionsRules: [{\n          device: function device() {\n            return isMobileLayout;\n          },\n          options: {\n            fullScreen: true,\n            showCloseButton: false,\n            toolbarItems: [{\n              shortcut: \"cancel\"\n            }]\n          }\n        }]\n      });\n    }\n  }, {\n    key: \"_createOverlayContent\",\n    value: function _createOverlayContent() {\n      var result = $(\"<div>\").addClass(CALENDAR_CLASS);\n      this._calendar = this._createComponent(result, Calendar, this._getCalendarOptions());\n      if (this._isMobileLayout()) {\n        var scrollable = this._createScrollable(result);\n        return scrollable.$element();\n      }\n      return result;\n    }\n  }, {\n    key: \"_createScrollable\",\n    value: function _createScrollable(content) {\n      var result = this._createComponent(\"<div>\", Scrollable, {\n        direction: \"vertical\"\n      });\n      result.$content().append(content);\n      return result;\n    }\n  }, {\n    key: \"_getCalendarOptions\",\n    value: function _getCalendarOptions() {\n      return {\n        value: this.option(\"date\"),\n        min: this.option(\"min\"),\n        max: this.option(\"max\"),\n        firstDayOfWeek: this.option(\"firstDayOfWeek\"),\n        focusStateEnabled: this.option(\"focusStateEnabled\"),\n        onValueChanged: this.option(\"onValueChanged\"),\n        skipFocusCheck: true,\n        tabIndex: this.option(\"tabIndex\"),\n        width: \"100%\"\n      };\n    }\n  }, {\n    key: \"_isMobileLayout\",\n    value: function _isMobileLayout() {\n      return !devices.current().generic;\n    }\n  }]);\n  return SchedulerCalendar;\n}(Widget);\nexport { SchedulerCalendar as default };\nregisterComponent(\"dxSchedulerCalendarPopup\", SchedulerCalendar);","map":null,"metadata":{},"sourceType":"module"}