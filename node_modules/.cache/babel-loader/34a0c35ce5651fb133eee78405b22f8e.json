{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scroll_view/utils/get_element_style.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { titleize } from \"../../../../core/utils/inflector\";\nimport { getWindow, hasWindow } from \"../../../../core/utils/window\";\nimport { toNumber } from \"../../../utils/type_conversion\";\nexport function getElementStyle(el) {\n  var _getWindow$getCompute, _getWindow;\n  return el && hasWindow() ? null === (_getWindow$getCompute = (_getWindow = getWindow()).getComputedStyle) || void 0 === _getWindow$getCompute ? void 0 : _getWindow$getCompute.call(_getWindow, el) : null;\n}\nexport function getElementMargin(element, side) {\n  var style = getElementStyle(element);\n  return style ? toNumber(style[\"margin\".concat(titleize(side))]) : 0;\n}\nexport function getElementPadding(element, side) {\n  var style = getElementStyle(element);\n  return style ? toNumber(style[\"padding\".concat(titleize(side))]) : 0;\n}\nexport function getElementOverflowX(element) {\n  var style = getElementStyle(element);\n  return style ? style.overflowX : \"visible\";\n}\nexport function getElementOverflowY(element) {\n  var style = getElementStyle(element);\n  return style ? style.overflowY : \"visible\";\n}\nexport function getElementTransform(element) {\n  var style = getElementStyle(element);\n  return style ? style.transform : \"\";\n}","map":null,"metadata":{},"sourceType":"module"}