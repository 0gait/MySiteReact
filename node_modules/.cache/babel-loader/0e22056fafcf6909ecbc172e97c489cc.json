{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LegendTitle = exports.Legend = exports.Label = exports.Image = exports.HoverStyle = exports.HorizontalLineLabel = exports.HorizontalLine = exports.Height = exports.Hatching = exports.Grid = exports.Format = exports.Font = exports.Export = exports.DragBoxStyle = exports.DataPrepareSettings = exports.Crosshair = exports.ConstantLineStyle = exports.ConstantLineLabel = exports.ConstantLine = exports.Connector = exports.CommonSeriesSettingsSelectionStyle = exports.CommonSeriesSettingsLabel = exports.CommonSeriesSettingsHoverStyle = exports.CommonSeriesSettings = exports.CommonPaneSettings = exports.CommonAxisSettingsTitle = exports.CommonAxisSettingsLabel = exports.CommonAxisSettingsConstantLineStyleLabel = exports.CommonAxisSettingsConstantLineStyle = exports.CommonAxisSettings = exports.CommonAnnotationSettings = exports.ChartTitleSubtitle = exports.ChartTitle = exports.BreakStyle = exports.Break = exports.Border = exports.AxisTitle = exports.AxisLabel = exports.AxisConstantLineStyleLabel = exports.AxisConstantLineStyle = exports.ArgumentFormat = exports.ArgumentAxis = exports.AnnotationImage = exports.AnnotationBorder = exports.Annotation = exports.Animation = exports.AggregationInterval = exports.Aggregation = exports.AdaptiveLayout = exports.Chart = void 0;\nexports.ZoomAndPan = exports.Width = exports.WholeRange = exports.VisualRange = exports.VerticalLine = exports.ValueErrorBar = exports.ValueAxis = exports.Url = exports.TooltipBorder = exports.Tooltip = exports.Title = exports.TickInterval = exports.Tick = exports.Subtitle = exports.StripStyleLabel = exports.StripStyle = exports.StripLabel = exports.Strip = exports.Size = exports.Shadow = exports.SeriesTemplate = exports.SeriesBorder = exports.Series = exports.SelectionStyle = exports.ScrollBar = exports.Reduction = exports.PointSelectionStyle = exports.PointImage = exports.PointHoverStyle = exports.PointBorder = exports.Point = exports.PaneBorder = exports.Pane = exports.MinVisualRangeLength = exports.MinorTickInterval = exports.MinorTick = exports.MinorGrid = exports.Margin = exports.LoadingIndicator = exports.Length = exports.LegendTitleSubtitle = void 0;\nvar chart_1 = require(\"devextreme/viz/chart\");\nvar PropTypes = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar Chart = /** @class */function (_super) {\n  __extends(Chart, _super);\n  function Chart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this._WidgetClass = chart_1.default;\n    _this.useRequestAnimationFrameFlag = true;\n    _this.subscribableOptions = [\"argumentAxis\", \"argumentAxis.visualRange\", \"loadingIndicator\", \"loadingIndicator.show\", \"valueAxis\", \"valueAxis.visualRange\"];\n    _this.independentEvents = [\"onArgumentAxisClick\", \"onDisposing\", \"onDone\", \"onDrawn\", \"onExported\", \"onExporting\", \"onFileSaving\", \"onIncidentOccurred\", \"onInitialized\", \"onLegendClick\", \"onPointClick\", \"onSeriesClick\", \"onTooltipHidden\", \"onTooltipShown\", \"onZoomEnd\", \"onZoomStart\"];\n    _this._defaults = {\n      defaultArgumentAxis: \"argumentAxis\",\n      defaultLoadingIndicator: \"loadingIndicator\",\n      defaultValueAxis: \"valueAxis\"\n    };\n    _this._expectedChildren = {\n      adaptiveLayout: {\n        optionName: \"adaptiveLayout\",\n        isCollectionItem: false\n      },\n      animation: {\n        optionName: \"animation\",\n        isCollectionItem: false\n      },\n      annotation: {\n        optionName: \"annotations\",\n        isCollectionItem: true\n      },\n      argumentAxis: {\n        optionName: \"argumentAxis\",\n        isCollectionItem: false\n      },\n      chartTitle: {\n        optionName: \"title\",\n        isCollectionItem: false\n      },\n      commonAnnotationSettings: {\n        optionName: \"commonAnnotationSettings\",\n        isCollectionItem: false\n      },\n      commonAxisSettings: {\n        optionName: \"commonAxisSettings\",\n        isCollectionItem: false\n      },\n      commonPaneSettings: {\n        optionName: \"commonPaneSettings\",\n        isCollectionItem: false\n      },\n      commonSeriesSettings: {\n        optionName: \"commonSeriesSettings\",\n        isCollectionItem: false\n      },\n      crosshair: {\n        optionName: \"crosshair\",\n        isCollectionItem: false\n      },\n      dataPrepareSettings: {\n        optionName: \"dataPrepareSettings\",\n        isCollectionItem: false\n      },\n      export: {\n        optionName: \"export\",\n        isCollectionItem: false\n      },\n      legend: {\n        optionName: \"legend\",\n        isCollectionItem: false\n      },\n      loadingIndicator: {\n        optionName: \"loadingIndicator\",\n        isCollectionItem: false\n      },\n      margin: {\n        optionName: \"margin\",\n        isCollectionItem: false\n      },\n      pane: {\n        optionName: \"panes\",\n        isCollectionItem: true\n      },\n      scrollBar: {\n        optionName: \"scrollBar\",\n        isCollectionItem: false\n      },\n      series: {\n        optionName: \"series\",\n        isCollectionItem: true\n      },\n      seriesTemplate: {\n        optionName: \"seriesTemplate\",\n        isCollectionItem: false\n      },\n      size: {\n        optionName: \"size\",\n        isCollectionItem: false\n      },\n      title: {\n        optionName: \"title\",\n        isCollectionItem: false\n      },\n      tooltip: {\n        optionName: \"tooltip\",\n        isCollectionItem: false\n      },\n      valueAxis: {\n        optionName: \"valueAxis\",\n        isCollectionItem: true\n      },\n      zoomAndPan: {\n        optionName: \"zoomAndPan\",\n        isCollectionItem: false\n      }\n    };\n    return _this;\n  }\n  Object.defineProperty(Chart.prototype, \"instance\", {\n    get: function get() {\n      return this._instance;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Chart;\n}(component_1.Component);\nexports.Chart = Chart;\nChart.propTypes = {\n  adaptiveLayout: PropTypes.object,\n  adjustOnZoom: PropTypes.bool,\n  animation: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  annotations: PropTypes.array,\n  argumentAxis: PropTypes.object,\n  autoHidePointMarkers: PropTypes.bool,\n  barGroupPadding: PropTypes.number,\n  barGroupWidth: PropTypes.number,\n  commonAnnotationSettings: PropTypes.object,\n  commonAxisSettings: PropTypes.object,\n  commonPaneSettings: PropTypes.object,\n  commonSeriesSettings: PropTypes.object,\n  containerBackgroundColor: PropTypes.string,\n  crosshair: PropTypes.object,\n  customizeAnnotation: PropTypes.func,\n  customizeLabel: PropTypes.func,\n  customizePoint: PropTypes.func,\n  dataPrepareSettings: PropTypes.object,\n  defaultPane: PropTypes.string,\n  disabled: PropTypes.bool,\n  elementAttr: PropTypes.object,\n  export: PropTypes.object,\n  legend: PropTypes.object,\n  loadingIndicator: PropTypes.object,\n  margin: PropTypes.object,\n  maxBubbleSize: PropTypes.number,\n  minBubbleSize: PropTypes.number,\n  negativesAsZeroes: PropTypes.bool,\n  onArgumentAxisClick: PropTypes.func,\n  onDisposing: PropTypes.func,\n  onDone: PropTypes.func,\n  onDrawn: PropTypes.func,\n  onExported: PropTypes.func,\n  onExporting: PropTypes.func,\n  onFileSaving: PropTypes.func,\n  onIncidentOccurred: PropTypes.func,\n  onInitialized: PropTypes.func,\n  onLegendClick: PropTypes.func,\n  onOptionChanged: PropTypes.func,\n  onPointClick: PropTypes.func,\n  onPointHoverChanged: PropTypes.func,\n  onPointSelectionChanged: PropTypes.func,\n  onSeriesClick: PropTypes.func,\n  onSeriesHoverChanged: PropTypes.func,\n  onSeriesSelectionChanged: PropTypes.func,\n  onTooltipHidden: PropTypes.func,\n  onTooltipShown: PropTypes.func,\n  onZoomEnd: PropTypes.func,\n  onZoomStart: PropTypes.func,\n  palette: PropTypes.oneOfType([PropTypes.array, PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"Bright\", \"Harmony Light\", \"Ocean\", \"Pastel\", \"Soft\", \"Soft Pastel\", \"Vintage\", \"Violet\", \"Carmine\", \"Dark Moon\", \"Dark Violet\", \"Green Mist\", \"Soft Blue\", \"Material\", \"Office\"])])]),\n  paletteExtensionMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"alternate\", \"blend\", \"extrapolate\"])]),\n  panes: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  pathModified: PropTypes.bool,\n  pointSelectionMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"single\", \"multiple\"])]),\n  redrawOnResize: PropTypes.bool,\n  resizePanesOnZoom: PropTypes.bool,\n  resolveLabelOverlapping: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"hide\", \"none\", \"stack\"])]),\n  rotated: PropTypes.bool,\n  rtlEnabled: PropTypes.bool,\n  scrollBar: PropTypes.object,\n  series: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  seriesSelectionMode: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"single\", \"multiple\"])]),\n  seriesTemplate: PropTypes.object,\n  size: PropTypes.object,\n  stickyHovering: PropTypes.bool,\n  synchronizeMultiAxes: PropTypes.bool,\n  theme: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([\"generic.dark\", \"generic.light\", \"generic.contrast\", \"generic.carmine\", \"generic.darkmoon\", \"generic.darkviolet\", \"generic.greenmist\", \"generic.softblue\", \"material.blue.light\", \"material.lime.light\", \"material.orange.light\", \"material.purple.light\", \"material.teal.light\"])]),\n  title: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  tooltip: PropTypes.object,\n  valueAxis: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  zoomAndPan: PropTypes.object\n};\nvar AdaptiveLayout = /** @class */function (_super) {\n  __extends(AdaptiveLayout, _super);\n  function AdaptiveLayout() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AdaptiveLayout.OptionName = \"adaptiveLayout\";\n  return AdaptiveLayout;\n}(nested_option_1.default);\nexports.AdaptiveLayout = AdaptiveLayout;\nvar Aggregation = /** @class */function (_super) {\n  __extends(Aggregation, _super);\n  function Aggregation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Aggregation.OptionName = \"aggregation\";\n  return Aggregation;\n}(nested_option_1.default);\nexports.Aggregation = Aggregation;\nvar AggregationInterval = /** @class */function (_super) {\n  __extends(AggregationInterval, _super);\n  function AggregationInterval() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AggregationInterval.OptionName = \"aggregationInterval\";\n  return AggregationInterval;\n}(nested_option_1.default);\nexports.AggregationInterval = AggregationInterval;\nvar Animation = /** @class */function (_super) {\n  __extends(Animation, _super);\n  function Animation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Animation.OptionName = \"animation\";\n  return Animation;\n}(nested_option_1.default);\nexports.Animation = Animation;\nvar Annotation = /** @class */function (_super) {\n  __extends(Annotation, _super);\n  function Annotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Annotation.OptionName = \"annotations\";\n  Annotation.IsCollectionItem = true;\n  Annotation.ExpectedChildren = {\n    annotationBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    annotationImage: {\n      optionName: \"image\",\n      isCollectionItem: false\n    },\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    image: {\n      optionName: \"image\",\n      isCollectionItem: false\n    },\n    shadow: {\n      optionName: \"shadow\",\n      isCollectionItem: false\n    }\n  };\n  Annotation.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }, {\n    tmplOption: \"tooltipTemplate\",\n    render: \"tooltipRender\",\n    component: \"tooltipComponent\",\n    keyFn: \"tooltipKeyFn\"\n  }];\n  return Annotation;\n}(nested_option_1.default);\nexports.Annotation = Annotation;\nvar AnnotationBorder = /** @class */function (_super) {\n  __extends(AnnotationBorder, _super);\n  function AnnotationBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AnnotationBorder.OptionName = \"border\";\n  return AnnotationBorder;\n}(nested_option_1.default);\nexports.AnnotationBorder = AnnotationBorder;\nvar AnnotationImage = /** @class */function (_super) {\n  __extends(AnnotationImage, _super);\n  function AnnotationImage() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AnnotationImage.OptionName = \"image\";\n  return AnnotationImage;\n}(nested_option_1.default);\nexports.AnnotationImage = AnnotationImage;\nvar ArgumentAxis = /** @class */function (_super) {\n  __extends(ArgumentAxis, _super);\n  function ArgumentAxis() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ArgumentAxis.OptionName = \"argumentAxis\";\n  ArgumentAxis.DefaultsProps = {\n    defaultVisualRange: \"visualRange\"\n  };\n  ArgumentAxis.ExpectedChildren = {\n    aggregationInterval: {\n      optionName: \"aggregationInterval\",\n      isCollectionItem: false\n    },\n    axisConstantLineStyle: {\n      optionName: \"constantLineStyle\",\n      isCollectionItem: false\n    },\n    axisLabel: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    axisTitle: {\n      optionName: \"title\",\n      isCollectionItem: false\n    },\n    break: {\n      optionName: \"breaks\",\n      isCollectionItem: true\n    },\n    breakStyle: {\n      optionName: \"breakStyle\",\n      isCollectionItem: false\n    },\n    constantLine: {\n      optionName: \"constantLines\",\n      isCollectionItem: true\n    },\n    constantLineStyle: {\n      optionName: \"constantLineStyle\",\n      isCollectionItem: false\n    },\n    grid: {\n      optionName: \"grid\",\n      isCollectionItem: false\n    },\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    minorGrid: {\n      optionName: \"minorGrid\",\n      isCollectionItem: false\n    },\n    minorTick: {\n      optionName: \"minorTick\",\n      isCollectionItem: false\n    },\n    minorTickInterval: {\n      optionName: \"minorTickInterval\",\n      isCollectionItem: false\n    },\n    minVisualRangeLength: {\n      optionName: \"minVisualRangeLength\",\n      isCollectionItem: false\n    },\n    strip: {\n      optionName: \"strips\",\n      isCollectionItem: true\n    },\n    stripStyle: {\n      optionName: \"stripStyle\",\n      isCollectionItem: false\n    },\n    tick: {\n      optionName: \"tick\",\n      isCollectionItem: false\n    },\n    tickInterval: {\n      optionName: \"tickInterval\",\n      isCollectionItem: false\n    },\n    title: {\n      optionName: \"title\",\n      isCollectionItem: false\n    },\n    visualRange: {\n      optionName: \"visualRange\",\n      isCollectionItem: false\n    },\n    wholeRange: {\n      optionName: \"wholeRange\",\n      isCollectionItem: false\n    }\n  };\n  return ArgumentAxis;\n}(nested_option_1.default);\nexports.ArgumentAxis = ArgumentAxis;\nvar ArgumentFormat = /** @class */function (_super) {\n  __extends(ArgumentFormat, _super);\n  function ArgumentFormat() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ArgumentFormat.OptionName = \"argumentFormat\";\n  return ArgumentFormat;\n}(nested_option_1.default);\nexports.ArgumentFormat = ArgumentFormat;\nvar AxisConstantLineStyle = /** @class */function (_super) {\n  __extends(AxisConstantLineStyle, _super);\n  function AxisConstantLineStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AxisConstantLineStyle.OptionName = \"constantLineStyle\";\n  return AxisConstantLineStyle;\n}(nested_option_1.default);\nexports.AxisConstantLineStyle = AxisConstantLineStyle;\nvar AxisConstantLineStyleLabel = /** @class */function (_super) {\n  __extends(AxisConstantLineStyleLabel, _super);\n  function AxisConstantLineStyleLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AxisConstantLineStyleLabel.OptionName = \"label\";\n  return AxisConstantLineStyleLabel;\n}(nested_option_1.default);\nexports.AxisConstantLineStyleLabel = AxisConstantLineStyleLabel;\nvar AxisLabel = /** @class */function (_super) {\n  __extends(AxisLabel, _super);\n  function AxisLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AxisLabel.OptionName = \"label\";\n  AxisLabel.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }];\n  return AxisLabel;\n}(nested_option_1.default);\nexports.AxisLabel = AxisLabel;\nvar AxisTitle = /** @class */function (_super) {\n  __extends(AxisTitle, _super);\n  function AxisTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AxisTitle.OptionName = \"title\";\n  return AxisTitle;\n}(nested_option_1.default);\nexports.AxisTitle = AxisTitle;\nvar Border = /** @class */function (_super) {\n  __extends(Border, _super);\n  function Border() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Border.OptionName = \"border\";\n  return Border;\n}(nested_option_1.default);\nexports.Border = Border;\nvar Break = /** @class */function (_super) {\n  __extends(Break, _super);\n  function Break() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Break.OptionName = \"breaks\";\n  Break.IsCollectionItem = true;\n  return Break;\n}(nested_option_1.default);\nexports.Break = Break;\nvar BreakStyle = /** @class */function (_super) {\n  __extends(BreakStyle, _super);\n  function BreakStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  BreakStyle.OptionName = \"breakStyle\";\n  return BreakStyle;\n}(nested_option_1.default);\nexports.BreakStyle = BreakStyle;\nvar ChartTitle = /** @class */function (_super) {\n  __extends(ChartTitle, _super);\n  function ChartTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ChartTitle.OptionName = \"title\";\n  ChartTitle.ExpectedChildren = {\n    chartTitleSubtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    subtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    }\n  };\n  return ChartTitle;\n}(nested_option_1.default);\nexports.ChartTitle = ChartTitle;\nvar ChartTitleSubtitle = /** @class */function (_super) {\n  __extends(ChartTitleSubtitle, _super);\n  function ChartTitleSubtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ChartTitleSubtitle.OptionName = \"subtitle\";\n  ChartTitleSubtitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return ChartTitleSubtitle;\n}(nested_option_1.default);\nexports.ChartTitleSubtitle = ChartTitleSubtitle;\nvar CommonAnnotationSettings = /** @class */function (_super) {\n  __extends(CommonAnnotationSettings, _super);\n  function CommonAnnotationSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonAnnotationSettings.OptionName = \"commonAnnotationSettings\";\n  CommonAnnotationSettings.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }, {\n    tmplOption: \"tooltipTemplate\",\n    render: \"tooltipRender\",\n    component: \"tooltipComponent\",\n    keyFn: \"tooltipKeyFn\"\n  }];\n  return CommonAnnotationSettings;\n}(nested_option_1.default);\nexports.CommonAnnotationSettings = CommonAnnotationSettings;\nvar CommonAxisSettings = /** @class */function (_super) {\n  __extends(CommonAxisSettings, _super);\n  function CommonAxisSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonAxisSettings.OptionName = \"commonAxisSettings\";\n  CommonAxisSettings.ExpectedChildren = {\n    commonAxisSettingsConstantLineStyle: {\n      optionName: \"constantLineStyle\",\n      isCollectionItem: false\n    },\n    commonAxisSettingsLabel: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    commonAxisSettingsTitle: {\n      optionName: \"title\",\n      isCollectionItem: false\n    },\n    constantLineStyle: {\n      optionName: \"constantLineStyle\",\n      isCollectionItem: false\n    },\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    title: {\n      optionName: \"title\",\n      isCollectionItem: false\n    }\n  };\n  return CommonAxisSettings;\n}(nested_option_1.default);\nexports.CommonAxisSettings = CommonAxisSettings;\nvar CommonAxisSettingsConstantLineStyle = /** @class */function (_super) {\n  __extends(CommonAxisSettingsConstantLineStyle, _super);\n  function CommonAxisSettingsConstantLineStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonAxisSettingsConstantLineStyle.OptionName = \"constantLineStyle\";\n  CommonAxisSettingsConstantLineStyle.ExpectedChildren = {\n    commonAxisSettingsConstantLineStyleLabel: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    }\n  };\n  return CommonAxisSettingsConstantLineStyle;\n}(nested_option_1.default);\nexports.CommonAxisSettingsConstantLineStyle = CommonAxisSettingsConstantLineStyle;\nvar CommonAxisSettingsConstantLineStyleLabel = /** @class */function (_super) {\n  __extends(CommonAxisSettingsConstantLineStyleLabel, _super);\n  function CommonAxisSettingsConstantLineStyleLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonAxisSettingsConstantLineStyleLabel.OptionName = \"label\";\n  return CommonAxisSettingsConstantLineStyleLabel;\n}(nested_option_1.default);\nexports.CommonAxisSettingsConstantLineStyleLabel = CommonAxisSettingsConstantLineStyleLabel;\nvar CommonAxisSettingsLabel = /** @class */function (_super) {\n  __extends(CommonAxisSettingsLabel, _super);\n  function CommonAxisSettingsLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonAxisSettingsLabel.OptionName = \"label\";\n  CommonAxisSettingsLabel.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }];\n  return CommonAxisSettingsLabel;\n}(nested_option_1.default);\nexports.CommonAxisSettingsLabel = CommonAxisSettingsLabel;\nvar CommonAxisSettingsTitle = /** @class */function (_super) {\n  __extends(CommonAxisSettingsTitle, _super);\n  function CommonAxisSettingsTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonAxisSettingsTitle.OptionName = \"title\";\n  return CommonAxisSettingsTitle;\n}(nested_option_1.default);\nexports.CommonAxisSettingsTitle = CommonAxisSettingsTitle;\nvar CommonPaneSettings = /** @class */function (_super) {\n  __extends(CommonPaneSettings, _super);\n  function CommonPaneSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonPaneSettings.OptionName = \"commonPaneSettings\";\n  CommonPaneSettings.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    paneBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  return CommonPaneSettings;\n}(nested_option_1.default);\nexports.CommonPaneSettings = CommonPaneSettings;\nvar CommonSeriesSettings = /** @class */function (_super) {\n  __extends(CommonSeriesSettings, _super);\n  function CommonSeriesSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonSeriesSettings.OptionName = \"commonSeriesSettings\";\n  CommonSeriesSettings.ExpectedChildren = {\n    aggregation: {\n      optionName: \"aggregation\",\n      isCollectionItem: false\n    },\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    commonSeriesSettingsHoverStyle: {\n      optionName: \"hoverStyle\",\n      isCollectionItem: false\n    },\n    commonSeriesSettingsLabel: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    commonSeriesSettingsSelectionStyle: {\n      optionName: \"selectionStyle\",\n      isCollectionItem: false\n    },\n    hoverStyle: {\n      optionName: \"hoverStyle\",\n      isCollectionItem: false\n    },\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    point: {\n      optionName: \"point\",\n      isCollectionItem: false\n    },\n    reduction: {\n      optionName: \"reduction\",\n      isCollectionItem: false\n    },\n    selectionStyle: {\n      optionName: \"selectionStyle\",\n      isCollectionItem: false\n    },\n    seriesBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    valueErrorBar: {\n      optionName: \"valueErrorBar\",\n      isCollectionItem: false\n    }\n  };\n  return CommonSeriesSettings;\n}(nested_option_1.default);\nexports.CommonSeriesSettings = CommonSeriesSettings;\nvar CommonSeriesSettingsHoverStyle = /** @class */function (_super) {\n  __extends(CommonSeriesSettingsHoverStyle, _super);\n  function CommonSeriesSettingsHoverStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonSeriesSettingsHoverStyle.OptionName = \"hoverStyle\";\n  CommonSeriesSettingsHoverStyle.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    hatching: {\n      optionName: \"hatching\",\n      isCollectionItem: false\n    },\n    seriesBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  return CommonSeriesSettingsHoverStyle;\n}(nested_option_1.default);\nexports.CommonSeriesSettingsHoverStyle = CommonSeriesSettingsHoverStyle;\nvar CommonSeriesSettingsLabel = /** @class */function (_super) {\n  __extends(CommonSeriesSettingsLabel, _super);\n  function CommonSeriesSettingsLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonSeriesSettingsLabel.OptionName = \"label\";\n  CommonSeriesSettingsLabel.ExpectedChildren = {\n    argumentFormat: {\n      optionName: \"argumentFormat\",\n      isCollectionItem: false\n    },\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    connector: {\n      optionName: \"connector\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    format: {\n      optionName: \"format\",\n      isCollectionItem: false\n    },\n    seriesBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  return CommonSeriesSettingsLabel;\n}(nested_option_1.default);\nexports.CommonSeriesSettingsLabel = CommonSeriesSettingsLabel;\nvar CommonSeriesSettingsSelectionStyle = /** @class */function (_super) {\n  __extends(CommonSeriesSettingsSelectionStyle, _super);\n  function CommonSeriesSettingsSelectionStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  CommonSeriesSettingsSelectionStyle.OptionName = \"selectionStyle\";\n  CommonSeriesSettingsSelectionStyle.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    hatching: {\n      optionName: \"hatching\",\n      isCollectionItem: false\n    },\n    seriesBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  return CommonSeriesSettingsSelectionStyle;\n}(nested_option_1.default);\nexports.CommonSeriesSettingsSelectionStyle = CommonSeriesSettingsSelectionStyle;\nvar Connector = /** @class */function (_super) {\n  __extends(Connector, _super);\n  function Connector() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Connector.OptionName = \"connector\";\n  return Connector;\n}(nested_option_1.default);\nexports.Connector = Connector;\nvar ConstantLine = /** @class */function (_super) {\n  __extends(ConstantLine, _super);\n  function ConstantLine() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ConstantLine.OptionName = \"constantLines\";\n  ConstantLine.IsCollectionItem = true;\n  return ConstantLine;\n}(nested_option_1.default);\nexports.ConstantLine = ConstantLine;\nvar ConstantLineLabel = /** @class */function (_super) {\n  __extends(ConstantLineLabel, _super);\n  function ConstantLineLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ConstantLineLabel.OptionName = \"label\";\n  return ConstantLineLabel;\n}(nested_option_1.default);\nexports.ConstantLineLabel = ConstantLineLabel;\nvar ConstantLineStyle = /** @class */function (_super) {\n  __extends(ConstantLineStyle, _super);\n  function ConstantLineStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ConstantLineStyle.OptionName = \"constantLineStyle\";\n  return ConstantLineStyle;\n}(nested_option_1.default);\nexports.ConstantLineStyle = ConstantLineStyle;\nvar Crosshair = /** @class */function (_super) {\n  __extends(Crosshair, _super);\n  function Crosshair() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Crosshair.OptionName = \"crosshair\";\n  Crosshair.ExpectedChildren = {\n    horizontalLine: {\n      optionName: \"horizontalLine\",\n      isCollectionItem: false\n    },\n    horizontalLineLabel: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    verticalLine: {\n      optionName: \"verticalLine\",\n      isCollectionItem: false\n    }\n  };\n  return Crosshair;\n}(nested_option_1.default);\nexports.Crosshair = Crosshair;\nvar DataPrepareSettings = /** @class */function (_super) {\n  __extends(DataPrepareSettings, _super);\n  function DataPrepareSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  DataPrepareSettings.OptionName = \"dataPrepareSettings\";\n  return DataPrepareSettings;\n}(nested_option_1.default);\nexports.DataPrepareSettings = DataPrepareSettings;\nvar DragBoxStyle = /** @class */function (_super) {\n  __extends(DragBoxStyle, _super);\n  function DragBoxStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  DragBoxStyle.OptionName = \"dragBoxStyle\";\n  return DragBoxStyle;\n}(nested_option_1.default);\nexports.DragBoxStyle = DragBoxStyle;\nvar Export = /** @class */function (_super) {\n  __extends(Export, _super);\n  function Export() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Export.OptionName = \"export\";\n  return Export;\n}(nested_option_1.default);\nexports.Export = Export;\nvar Font = /** @class */function (_super) {\n  __extends(Font, _super);\n  function Font() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Font.OptionName = \"font\";\n  return Font;\n}(nested_option_1.default);\nexports.Font = Font;\nvar Format = /** @class */function (_super) {\n  __extends(Format, _super);\n  function Format() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Format.OptionName = \"format\";\n  return Format;\n}(nested_option_1.default);\nexports.Format = Format;\nvar Grid = /** @class */function (_super) {\n  __extends(Grid, _super);\n  function Grid() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Grid.OptionName = \"grid\";\n  return Grid;\n}(nested_option_1.default);\nexports.Grid = Grid;\nvar Hatching = /** @class */function (_super) {\n  __extends(Hatching, _super);\n  function Hatching() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Hatching.OptionName = \"hatching\";\n  return Hatching;\n}(nested_option_1.default);\nexports.Hatching = Hatching;\nvar Height = /** @class */function (_super) {\n  __extends(Height, _super);\n  function Height() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Height.OptionName = \"height\";\n  return Height;\n}(nested_option_1.default);\nexports.Height = Height;\nvar HorizontalLine = /** @class */function (_super) {\n  __extends(HorizontalLine, _super);\n  function HorizontalLine() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HorizontalLine.OptionName = \"horizontalLine\";\n  HorizontalLine.ExpectedChildren = {\n    horizontalLineLabel: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    }\n  };\n  return HorizontalLine;\n}(nested_option_1.default);\nexports.HorizontalLine = HorizontalLine;\nvar HorizontalLineLabel = /** @class */function (_super) {\n  __extends(HorizontalLineLabel, _super);\n  function HorizontalLineLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HorizontalLineLabel.OptionName = \"label\";\n  return HorizontalLineLabel;\n}(nested_option_1.default);\nexports.HorizontalLineLabel = HorizontalLineLabel;\nvar HoverStyle = /** @class */function (_super) {\n  __extends(HoverStyle, _super);\n  function HoverStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HoverStyle.OptionName = \"hoverStyle\";\n  return HoverStyle;\n}(nested_option_1.default);\nexports.HoverStyle = HoverStyle;\nvar Image = /** @class */function (_super) {\n  __extends(Image, _super);\n  function Image() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Image.OptionName = \"image\";\n  return Image;\n}(nested_option_1.default);\nexports.Image = Image;\nvar Label = /** @class */function (_super) {\n  __extends(Label, _super);\n  function Label() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Label.OptionName = \"label\";\n  Label.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }];\n  return Label;\n}(nested_option_1.default);\nexports.Label = Label;\nvar Legend = /** @class */function (_super) {\n  __extends(Legend, _super);\n  function Legend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Legend.OptionName = \"legend\";\n  Legend.ExpectedChildren = {\n    annotationBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    legendTitle: {\n      optionName: \"title\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    title: {\n      optionName: \"title\",\n      isCollectionItem: false\n    }\n  };\n  Legend.TemplateProps = [{\n    tmplOption: \"markerTemplate\",\n    render: \"markerRender\",\n    component: \"markerComponent\",\n    keyFn: \"markerKeyFn\"\n  }];\n  return Legend;\n}(nested_option_1.default);\nexports.Legend = Legend;\nvar LegendTitle = /** @class */function (_super) {\n  __extends(LegendTitle, _super);\n  function LegendTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LegendTitle.OptionName = \"title\";\n  LegendTitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    legendTitleSubtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    subtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    }\n  };\n  return LegendTitle;\n}(nested_option_1.default);\nexports.LegendTitle = LegendTitle;\nvar LegendTitleSubtitle = /** @class */function (_super) {\n  __extends(LegendTitleSubtitle, _super);\n  function LegendTitleSubtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LegendTitleSubtitle.OptionName = \"subtitle\";\n  LegendTitleSubtitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return LegendTitleSubtitle;\n}(nested_option_1.default);\nexports.LegendTitleSubtitle = LegendTitleSubtitle;\nvar Length = /** @class */function (_super) {\n  __extends(Length, _super);\n  function Length() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Length.OptionName = \"length\";\n  return Length;\n}(nested_option_1.default);\nexports.Length = Length;\nvar LoadingIndicator = /** @class */function (_super) {\n  __extends(LoadingIndicator, _super);\n  function LoadingIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LoadingIndicator.OptionName = \"loadingIndicator\";\n  LoadingIndicator.DefaultsProps = {\n    defaultShow: \"show\"\n  };\n  LoadingIndicator.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return LoadingIndicator;\n}(nested_option_1.default);\nexports.LoadingIndicator = LoadingIndicator;\nvar Margin = /** @class */function (_super) {\n  __extends(Margin, _super);\n  function Margin() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Margin.OptionName = \"margin\";\n  return Margin;\n}(nested_option_1.default);\nexports.Margin = Margin;\nvar MinorGrid = /** @class */function (_super) {\n  __extends(MinorGrid, _super);\n  function MinorGrid() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  MinorGrid.OptionName = \"minorGrid\";\n  return MinorGrid;\n}(nested_option_1.default);\nexports.MinorGrid = MinorGrid;\nvar MinorTick = /** @class */function (_super) {\n  __extends(MinorTick, _super);\n  function MinorTick() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  MinorTick.OptionName = \"minorTick\";\n  return MinorTick;\n}(nested_option_1.default);\nexports.MinorTick = MinorTick;\nvar MinorTickInterval = /** @class */function (_super) {\n  __extends(MinorTickInterval, _super);\n  function MinorTickInterval() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  MinorTickInterval.OptionName = \"minorTickInterval\";\n  return MinorTickInterval;\n}(nested_option_1.default);\nexports.MinorTickInterval = MinorTickInterval;\nvar MinVisualRangeLength = /** @class */function (_super) {\n  __extends(MinVisualRangeLength, _super);\n  function MinVisualRangeLength() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  MinVisualRangeLength.OptionName = \"minVisualRangeLength\";\n  return MinVisualRangeLength;\n}(nested_option_1.default);\nexports.MinVisualRangeLength = MinVisualRangeLength;\nvar Pane = /** @class */function (_super) {\n  __extends(Pane, _super);\n  function Pane() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Pane.OptionName = \"panes\";\n  Pane.IsCollectionItem = true;\n  return Pane;\n}(nested_option_1.default);\nexports.Pane = Pane;\nvar PaneBorder = /** @class */function (_super) {\n  __extends(PaneBorder, _super);\n  function PaneBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PaneBorder.OptionName = \"border\";\n  return PaneBorder;\n}(nested_option_1.default);\nexports.PaneBorder = PaneBorder;\nvar Point = /** @class */function (_super) {\n  __extends(Point, _super);\n  function Point() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Point.OptionName = \"point\";\n  Point.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    hoverStyle: {\n      optionName: \"hoverStyle\",\n      isCollectionItem: false\n    },\n    image: {\n      optionName: \"image\",\n      isCollectionItem: false\n    },\n    pointBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    pointHoverStyle: {\n      optionName: \"hoverStyle\",\n      isCollectionItem: false\n    },\n    pointImage: {\n      optionName: \"image\",\n      isCollectionItem: false\n    },\n    pointSelectionStyle: {\n      optionName: \"selectionStyle\",\n      isCollectionItem: false\n    },\n    selectionStyle: {\n      optionName: \"selectionStyle\",\n      isCollectionItem: false\n    }\n  };\n  return Point;\n}(nested_option_1.default);\nexports.Point = Point;\nvar PointBorder = /** @class */function (_super) {\n  __extends(PointBorder, _super);\n  function PointBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PointBorder.OptionName = \"border\";\n  return PointBorder;\n}(nested_option_1.default);\nexports.PointBorder = PointBorder;\nvar PointHoverStyle = /** @class */function (_super) {\n  __extends(PointHoverStyle, _super);\n  function PointHoverStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PointHoverStyle.OptionName = \"hoverStyle\";\n  PointHoverStyle.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    pointBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  return PointHoverStyle;\n}(nested_option_1.default);\nexports.PointHoverStyle = PointHoverStyle;\nvar PointImage = /** @class */function (_super) {\n  __extends(PointImage, _super);\n  function PointImage() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PointImage.OptionName = \"image\";\n  PointImage.ExpectedChildren = {\n    height: {\n      optionName: \"height\",\n      isCollectionItem: false\n    },\n    url: {\n      optionName: \"url\",\n      isCollectionItem: false\n    },\n    width: {\n      optionName: \"width\",\n      isCollectionItem: false\n    }\n  };\n  return PointImage;\n}(nested_option_1.default);\nexports.PointImage = PointImage;\nvar PointSelectionStyle = /** @class */function (_super) {\n  __extends(PointSelectionStyle, _super);\n  function PointSelectionStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PointSelectionStyle.OptionName = \"selectionStyle\";\n  PointSelectionStyle.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    pointBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  return PointSelectionStyle;\n}(nested_option_1.default);\nexports.PointSelectionStyle = PointSelectionStyle;\nvar Reduction = /** @class */function (_super) {\n  __extends(Reduction, _super);\n  function Reduction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Reduction.OptionName = \"reduction\";\n  return Reduction;\n}(nested_option_1.default);\nexports.Reduction = Reduction;\nvar ScrollBar = /** @class */function (_super) {\n  __extends(ScrollBar, _super);\n  function ScrollBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ScrollBar.OptionName = \"scrollBar\";\n  return ScrollBar;\n}(nested_option_1.default);\nexports.ScrollBar = ScrollBar;\nvar SelectionStyle = /** @class */function (_super) {\n  __extends(SelectionStyle, _super);\n  function SelectionStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SelectionStyle.OptionName = \"selectionStyle\";\n  return SelectionStyle;\n}(nested_option_1.default);\nexports.SelectionStyle = SelectionStyle;\nvar Series = /** @class */function (_super) {\n  __extends(Series, _super);\n  function Series() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Series.OptionName = \"series\";\n  Series.IsCollectionItem = true;\n  return Series;\n}(nested_option_1.default);\nexports.Series = Series;\nvar SeriesBorder = /** @class */function (_super) {\n  __extends(SeriesBorder, _super);\n  function SeriesBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SeriesBorder.OptionName = \"border\";\n  return SeriesBorder;\n}(nested_option_1.default);\nexports.SeriesBorder = SeriesBorder;\nvar SeriesTemplate = /** @class */function (_super) {\n  __extends(SeriesTemplate, _super);\n  function SeriesTemplate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SeriesTemplate.OptionName = \"seriesTemplate\";\n  return SeriesTemplate;\n}(nested_option_1.default);\nexports.SeriesTemplate = SeriesTemplate;\nvar Shadow = /** @class */function (_super) {\n  __extends(Shadow, _super);\n  function Shadow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Shadow.OptionName = \"shadow\";\n  return Shadow;\n}(nested_option_1.default);\nexports.Shadow = Shadow;\nvar Size = /** @class */function (_super) {\n  __extends(Size, _super);\n  function Size() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Size.OptionName = \"size\";\n  return Size;\n}(nested_option_1.default);\nexports.Size = Size;\nvar Strip = /** @class */function (_super) {\n  __extends(Strip, _super);\n  function Strip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Strip.OptionName = \"strips\";\n  Strip.IsCollectionItem = true;\n  return Strip;\n}(nested_option_1.default);\nexports.Strip = Strip;\nvar StripLabel = /** @class */function (_super) {\n  __extends(StripLabel, _super);\n  function StripLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  StripLabel.OptionName = \"label\";\n  return StripLabel;\n}(nested_option_1.default);\nexports.StripLabel = StripLabel;\nvar StripStyle = /** @class */function (_super) {\n  __extends(StripStyle, _super);\n  function StripStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  StripStyle.OptionName = \"stripStyle\";\n  StripStyle.ExpectedChildren = {\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    stripStyleLabel: {\n      optionName: \"label\",\n      isCollectionItem: false\n    }\n  };\n  return StripStyle;\n}(nested_option_1.default);\nexports.StripStyle = StripStyle;\nvar StripStyleLabel = /** @class */function (_super) {\n  __extends(StripStyleLabel, _super);\n  function StripStyleLabel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  StripStyleLabel.OptionName = \"label\";\n  return StripStyleLabel;\n}(nested_option_1.default);\nexports.StripStyleLabel = StripStyleLabel;\nvar Subtitle = /** @class */function (_super) {\n  __extends(Subtitle, _super);\n  function Subtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Subtitle.OptionName = \"subtitle\";\n  return Subtitle;\n}(nested_option_1.default);\nexports.Subtitle = Subtitle;\nvar Tick = /** @class */function (_super) {\n  __extends(Tick, _super);\n  function Tick() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Tick.OptionName = \"tick\";\n  return Tick;\n}(nested_option_1.default);\nexports.Tick = Tick;\nvar TickInterval = /** @class */function (_super) {\n  __extends(TickInterval, _super);\n  function TickInterval() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TickInterval.OptionName = \"tickInterval\";\n  return TickInterval;\n}(nested_option_1.default);\nexports.TickInterval = TickInterval;\nvar Title = /** @class */function (_super) {\n  __extends(Title, _super);\n  function Title() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Title.OptionName = \"title\";\n  return Title;\n}(nested_option_1.default);\nexports.Title = Title;\nvar Tooltip = /** @class */function (_super) {\n  __extends(Tooltip, _super);\n  function Tooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Tooltip.OptionName = \"tooltip\";\n  Tooltip.ExpectedChildren = {\n    argumentFormat: {\n      optionName: \"argumentFormat\",\n      isCollectionItem: false\n    },\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    format: {\n      optionName: \"format\",\n      isCollectionItem: false\n    },\n    shadow: {\n      optionName: \"shadow\",\n      isCollectionItem: false\n    },\n    tooltipBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  Tooltip.TemplateProps = [{\n    tmplOption: \"contentTemplate\",\n    render: \"contentRender\",\n    component: \"contentComponent\",\n    keyFn: \"contentKeyFn\"\n  }];\n  return Tooltip;\n}(nested_option_1.default);\nexports.Tooltip = Tooltip;\nvar TooltipBorder = /** @class */function (_super) {\n  __extends(TooltipBorder, _super);\n  function TooltipBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TooltipBorder.OptionName = \"border\";\n  return TooltipBorder;\n}(nested_option_1.default);\nexports.TooltipBorder = TooltipBorder;\nvar Url = /** @class */function (_super) {\n  __extends(Url, _super);\n  function Url() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Url.OptionName = \"url\";\n  return Url;\n}(nested_option_1.default);\nexports.Url = Url;\nvar ValueAxis = /** @class */function (_super) {\n  __extends(ValueAxis, _super);\n  function ValueAxis() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ValueAxis.OptionName = \"valueAxis\";\n  ValueAxis.IsCollectionItem = true;\n  ValueAxis.DefaultsProps = {\n    defaultVisualRange: \"visualRange\"\n  };\n  ValueAxis.ExpectedChildren = {\n    axisConstantLineStyle: {\n      optionName: \"constantLineStyle\",\n      isCollectionItem: false\n    },\n    axisLabel: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    axisTitle: {\n      optionName: \"title\",\n      isCollectionItem: false\n    },\n    break: {\n      optionName: \"breaks\",\n      isCollectionItem: true\n    },\n    constantLine: {\n      optionName: \"constantLines\",\n      isCollectionItem: true\n    },\n    constantLineStyle: {\n      optionName: \"constantLineStyle\",\n      isCollectionItem: false\n    },\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    minorTickInterval: {\n      optionName: \"minorTickInterval\",\n      isCollectionItem: false\n    },\n    minVisualRangeLength: {\n      optionName: \"minVisualRangeLength\",\n      isCollectionItem: false\n    },\n    strip: {\n      optionName: \"strips\",\n      isCollectionItem: true\n    },\n    tickInterval: {\n      optionName: \"tickInterval\",\n      isCollectionItem: false\n    },\n    title: {\n      optionName: \"title\",\n      isCollectionItem: false\n    },\n    visualRange: {\n      optionName: \"visualRange\",\n      isCollectionItem: false\n    },\n    wholeRange: {\n      optionName: \"wholeRange\",\n      isCollectionItem: false\n    }\n  };\n  return ValueAxis;\n}(nested_option_1.default);\nexports.ValueAxis = ValueAxis;\nvar ValueErrorBar = /** @class */function (_super) {\n  __extends(ValueErrorBar, _super);\n  function ValueErrorBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ValueErrorBar.OptionName = \"valueErrorBar\";\n  return ValueErrorBar;\n}(nested_option_1.default);\nexports.ValueErrorBar = ValueErrorBar;\nvar VerticalLine = /** @class */function (_super) {\n  __extends(VerticalLine, _super);\n  function VerticalLine() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  VerticalLine.OptionName = \"verticalLine\";\n  VerticalLine.ExpectedChildren = {\n    horizontalLineLabel: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    }\n  };\n  return VerticalLine;\n}(nested_option_1.default);\nexports.VerticalLine = VerticalLine;\nvar VisualRange = /** @class */function (_super) {\n  __extends(VisualRange, _super);\n  function VisualRange() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  VisualRange.OptionName = \"visualRange\";\n  VisualRange.DefaultsProps = {\n    defaultEndValue: \"endValue\",\n    defaultStartValue: \"startValue\"\n  };\n  return VisualRange;\n}(nested_option_1.default);\nexports.VisualRange = VisualRange;\nvar WholeRange = /** @class */function (_super) {\n  __extends(WholeRange, _super);\n  function WholeRange() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  WholeRange.OptionName = \"wholeRange\";\n  WholeRange.DefaultsProps = {\n    defaultEndValue: \"endValue\",\n    defaultStartValue: \"startValue\"\n  };\n  return WholeRange;\n}(nested_option_1.default);\nexports.WholeRange = WholeRange;\nvar Width = /** @class */function (_super) {\n  __extends(Width, _super);\n  function Width() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Width.OptionName = \"width\";\n  return Width;\n}(nested_option_1.default);\nexports.Width = Width;\nvar ZoomAndPan = /** @class */function (_super) {\n  __extends(ZoomAndPan, _super);\n  function ZoomAndPan() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ZoomAndPan.OptionName = \"zoomAndPan\";\n  ZoomAndPan.ExpectedChildren = {\n    dragBoxStyle: {\n      optionName: \"dragBoxStyle\",\n      isCollectionItem: false\n    }\n  };\n  return ZoomAndPan;\n}(nested_option_1.default);\nexports.ZoomAndPan = ZoomAndPan;\nexports.default = Chart;","map":null,"metadata":{},"sourceType":"script"}