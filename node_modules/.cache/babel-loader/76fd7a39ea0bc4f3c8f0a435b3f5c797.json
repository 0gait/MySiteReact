{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DX_REMOVE_EVENT = exports.ComponentBase = void 0;\nvar events = require(\"devextreme/events\");\nvar React = require(\"react\");\nvar react_dom_1 = require(\"react-dom\");\nvar templates_manager_1 = require(\"./templates-manager\");\nvar templates_renderer_1 = require(\"./templates-renderer\");\nvar templates_store_1 = require(\"./templates-store\");\nvar options_manager_1 = require(\"./options-manager\");\nvar widget_config_1 = require(\"./widget-config\");\nvar tree_1 = require(\"./configuration/react/tree\");\nvar utils_1 = require(\"./configuration/utils\");\nvar DX_REMOVE_EVENT = 'dxremove';\nexports.DX_REMOVE_EVENT = DX_REMOVE_EVENT;\nvar ComponentBase = /** @class */function (_super) {\n  __extends(ComponentBase, _super);\n  function ComponentBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.isPortalComponent = false;\n    _this._templateProps = [];\n    _this._childNodes = [];\n    _this.useRequestAnimationFrameFlag = false;\n    _this.useDeferUpdateForTemplates = false;\n    _this._setTemplatesRendererRef = _this._setTemplatesRendererRef.bind(_this);\n    _this._createWidget = _this._createWidget.bind(_this);\n    _this._templatesStore = new templates_store_1.TemplatesStore(function () {\n      if (_this._templatesRendererRef) {\n        _this._templatesRendererRef.scheduleUpdate(_this.useDeferUpdateForTemplates);\n      }\n    });\n    _this._templatesManager = new templates_manager_1.default(_this._templatesStore);\n    _this._optionsManager = new options_manager_1.OptionsManager(_this._templatesManager);\n    return _this;\n  }\n  ComponentBase.displayContentsStyle = function () {\n    return utils_1.isIE() ? {\n      width: '100%',\n      height: '100%',\n      padding: 0,\n      margin: 0\n    } : {\n      display: 'contents'\n    };\n  };\n  ComponentBase.prototype.componentDidMount = function () {\n    var _a;\n    var _b;\n    if ((_b = this._childNodes) === null || _b === void 0 ? void 0 : _b.length) {\n      (_a = this._element).append.apply(_a, this._childNodes);\n    } else if (this._element.childNodes.length) {\n      this._childNodes = Array.from(this._element.childNodes);\n    }\n    this._updateCssClasses(null, this.props);\n  };\n  ComponentBase.prototype.componentDidUpdate = function (prevProps) {\n    this._updateCssClasses(prevProps, this.props);\n    var config = this._getConfig();\n    this._optionsManager.update(config);\n    if (this._templatesRendererRef) {\n      this._templatesRendererRef.scheduleUpdate(this.useDeferUpdateForTemplates, options_manager_1.scheduleGuards);\n    }\n    options_manager_1.unscheduleGuards();\n  };\n  ComponentBase.prototype.componentWillUnmount = function () {\n    var _a;\n    if (this._instance) {\n      (_a = this._childNodes) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n        var _a;\n        return (_a = child.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(child);\n      });\n      events.triggerHandler(this._element, DX_REMOVE_EVENT);\n      this._instance.dispose();\n    }\n    this._optionsManager.dispose();\n  };\n  ComponentBase.prototype._createWidget = function (element) {\n    element = element || this._element;\n    var config = this._getConfig();\n    this._instance = new this._WidgetClass(element, __assign({\n      templatesRenderAsynchronously: true\n    }, this._optionsManager.getInitialOptions(config)));\n    if (!this.useRequestAnimationFrameFlag) {\n      this.useDeferUpdateForTemplates = this._instance.option('integrationOptions.useDeferUpdateForTemplates');\n    }\n    this._optionsManager.setInstance(this._instance, config, this.subscribableOptions, this.independentEvents);\n    this._instance.on('optionChanged', this._optionsManager.onOptionChanged);\n  };\n  ComponentBase.prototype._getConfig = function () {\n    return tree_1.buildConfigTree({\n      templates: this._templateProps,\n      initialValuesProps: this._defaults,\n      predefinedValuesProps: {},\n      expectedChildren: this._expectedChildren\n    }, this.props);\n  };\n  ComponentBase.prototype._setTemplatesRendererRef = function (instance) {\n    this._templatesRendererRef = instance;\n  };\n  ComponentBase.prototype._getElementProps = function () {\n    var _this = this;\n    var elementProps = {\n      ref: function ref(element) {\n        _this._element = element;\n      }\n    };\n    widget_config_1.elementPropNames.forEach(function (name) {\n      var props = _this.props;\n      if (name in props) {\n        elementProps[name] = props[name];\n      }\n    });\n    return elementProps;\n  };\n  ComponentBase.prototype._updateCssClasses = function (prevProps, newProps) {\n    var _a, _b;\n    var prevClassName = prevProps ? widget_config_1.getClassName(prevProps) : undefined;\n    var newClassName = widget_config_1.getClassName(newProps);\n    if (prevClassName === newClassName) {\n      return;\n    }\n    if (prevClassName) {\n      var classNames = prevClassName.split(' ').filter(function (c) {\n        return c;\n      });\n      if (classNames.length) {\n        (_a = this._element.classList).remove.apply(_a, classNames);\n      }\n    }\n    if (newClassName) {\n      var classNames = newClassName.split(' ').filter(function (c) {\n        return c;\n      });\n      if (classNames.length) {\n        (_b = this._element.classList).add.apply(_b, classNames);\n      }\n    }\n  };\n  ComponentBase.prototype.renderChildren = function () {\n    var children = this.props.children;\n    return children;\n  };\n  ComponentBase.prototype.renderContent = function () {\n    var _this = this;\n    var children = this.props.children;\n    return this.isPortalComponent && children ? React.createElement('div', {\n      ref: function ref(node) {\n        if (node && _this.portalContainer !== node) {\n          _this.portalContainer = node;\n          _this.forceUpdate();\n        }\n      },\n      style: ComponentBase.displayContentsStyle()\n    }) : this.renderChildren();\n  };\n  ComponentBase.prototype.renderPortal = function () {\n    return this.portalContainer && react_dom_1.createPortal(this.renderChildren(), this.portalContainer);\n  };\n  ComponentBase.prototype.render = function () {\n    return React.createElement(React.Fragment, {}, React.createElement('div', this._getElementProps(), this.renderContent(), React.createElement(templates_renderer_1.TemplatesRenderer, {\n      templatesStore: this._templatesStore,\n      ref: this._setTemplatesRendererRef\n    })), this.isPortalComponent && this.renderPortal());\n  };\n  return ComponentBase;\n}(React.PureComponent);\nexports.ComponentBase = ComponentBase;","map":null,"metadata":{},"sourceType":"script"}