{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment_edit_form/popup_config.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport messageLocalization from \"../../../../localization/message\";\nimport devices from \"../../../../core/devices\";\nimport { getWidth } from \"../../../../core/utils/size\";\nimport { getWindow } from \"../../../../core/utils/window\";\nexport var POPUP_WIDTH = {\n  DEFAULT: 485,\n  RECURRENCE: 970,\n  FULLSCREEN: 1e3,\n  MOBILE: {\n    DEFAULT: 350,\n    FULLSCREEN: 500\n  }\n};\nexport var defaultAnimation = {\n  show: {\n    type: \"pop\",\n    duration: 300,\n    from: {\n      scale: .55\n    }\n  },\n  hide: {\n    type: \"pop\",\n    duration: 300,\n    to: {\n      opacity: 0,\n      scale: .55\n    },\n    from: {\n      opacity: 1,\n      scale: 1\n    }\n  }\n};\nvar isMobile = function isMobile() {\n  return \"desktop\" !== devices.current().deviceType;\n};\nvar isIOSPlatform = function isIOSPlatform() {\n  return \"ios\" === devices.current().platform;\n};\nvar TOOLBAR_LOCATION = {\n  AFTER: \"after\",\n  BEFORE: \"before\"\n};\nvar getButtonsConfig = function getButtonsConfig() {\n  return {\n    doneButton: {\n      shortcut: \"done\",\n      options: {\n        text: messageLocalization.format(\"Done\")\n      },\n      location: TOOLBAR_LOCATION.AFTER\n    },\n    cancelButton: {\n      shortcut: \"cancel\",\n      location: isIOSPlatform() ? TOOLBAR_LOCATION.BEFORE : TOOLBAR_LOCATION.AFTER\n    }\n  };\n};\nexport var getPopupToolbarItems = function getPopupToolbarItems(allowUpdating, doneClick) {\n  var result = [];\n  var buttonsConfig = getButtonsConfig();\n  if (allowUpdating) {\n    result.push(_extends({}, buttonsConfig.doneButton, {\n      onClick: doneClick\n    }));\n  }\n  result.push(buttonsConfig.cancelButton);\n  return result;\n};\nexport var isPopupFullScreenNeeded = function isPopupFullScreenNeeded() {\n  var window = getWindow();\n  var width = window && getWidth(window);\n  if (width) {\n    return isMobile() ? width < POPUP_WIDTH.MOBILE.FULLSCREEN : width < POPUP_WIDTH.FULLSCREEN;\n  }\n  return false;\n};\nexport var getMaxWidth = function getMaxWidth(isRecurrence) {\n  if (isMobile()) {\n    return POPUP_WIDTH.MOBILE.DEFAULT;\n  }\n  return isRecurrence ? POPUP_WIDTH.RECURRENCE : POPUP_WIDTH.DEFAULT;\n};\nexport var getPopupSize = function getPopupSize(isRecurrence) {\n  return {\n    fullScreen: isPopupFullScreenNeeded(),\n    maxWidth: getMaxWidth(isRecurrence)\n  };\n};","map":null,"metadata":{},"sourceType":"module"}