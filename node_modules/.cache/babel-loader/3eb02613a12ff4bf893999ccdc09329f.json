{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.export.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nfunction prepareItems(items, emptyCell) {\n  var defaultSetter = function defaultSetter(value) {\n    return !value ? 1 : value;\n  };\n  var resultItems = [];\n  var cols = (items[0] || []).reduce(function (sum, item) {\n    return sum + defaultSetter(item.colspan);\n  }, 0);\n  var getItem = function (items) {\n    var rowIndex = 0;\n    var cellIndex = 0;\n    return function () {\n      var row = items[rowIndex] || [];\n      var item = row[cellIndex++];\n      if (cellIndex >= row.length) {\n        rowIndex++;\n        cellIndex = 0;\n      }\n      if (item) {\n        item.colspan = defaultSetter(item.colspan);\n        item.rowspan = defaultSetter(item.rowspan);\n      }\n      return item;\n    };\n  }(items);\n  var addItem = function addItem(rowIndex, cellIndex, item) {\n    var row = resultItems[rowIndex] = resultItems[rowIndex] || [];\n    row[cellIndex] = item;\n    if (item.colspan > 1 || item.rowspan > 1) {\n      var clone = function (item) {\n        return extend({}, item, emptyCell);\n      }(item);\n      for (var c = 1; c < item.colspan; c++) {\n        addItem(rowIndex, cellIndex + c, clone);\n      }\n      for (var r = 1; r < item.rowspan; r++) {\n        for (var _c = 0; _c < item.colspan; _c++) {\n          addItem(rowIndex + r, cellIndex + _c, clone);\n        }\n      }\n    }\n  };\n  var item = getItem();\n  var rowIndex = 0;\n  while (item) {\n    for (var cellIndex = 0; cellIndex < cols; cellIndex++) {\n      if (!item) {\n        break;\n      }\n      if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\n        continue;\n      }\n      addItem(rowIndex, cellIndex, item);\n      cellIndex += item.colspan - 1;\n      item = getItem();\n    }\n    rowIndex++;\n  }\n  return resultItems;\n}\nexport { prepareItems };","map":null,"metadata":{},"sourceType":"module"}