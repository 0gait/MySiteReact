{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/filtering/remote.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { equalByValue } from \"../../../../../core/utils/common\";\nimport { extend } from \"../../../../../core/utils/extend\";\nimport dateSerialization from \"../../../../../core/utils/date_serialization\";\nimport { isDefined, isString } from \"../../../../../core/utils/type\";\nimport getDatesWithoutTime from \"./getDatesWithoutTime\";\nvar FilterPosition = {\n  dateFilter: 0,\n  userFilter: 1\n};\nvar RemoteFilterCombiner = /*#__PURE__*/function () {\n  function RemoteFilterCombiner(options) {\n    _classCallCheck(this, RemoteFilterCombiner);\n    this.options = options;\n  }\n  _createClass(RemoteFilterCombiner, [{\n    key: \"makeDateFilter\",\n    value: function makeDateFilter(min, max) {\n      var _this$dataAccessors$e = this.dataAccessors.expr,\n        endDateExpr = _this$dataAccessors$e.endDateExpr,\n        recurrenceRuleExpr = _this$dataAccessors$e.recurrenceRuleExpr,\n        startDateExpr = _this$dataAccessors$e.startDateExpr;\n      var dateFilter = [[[endDateExpr, \">=\", min], [startDateExpr, \"<\", max]], \"or\", [recurrenceRuleExpr, \"startswith\", \"freq\"], \"or\", [[endDateExpr, min], [startDateExpr, min]]];\n      if (!recurrenceRuleExpr) {\n        dateFilter.splice(1, 2);\n      }\n      return dateFilter;\n    }\n  }, {\n    key: \"combineFilters\",\n    value: function combineFilters(dateFilter, userFilter) {\n      var combinedFilter = [];\n      dateFilter && combinedFilter.push(dateFilter);\n      userFilter && combinedFilter.push(userFilter);\n      return this.serializeRemoteFilter(combinedFilter);\n    }\n  }, {\n    key: \"serializeRemoteFilter\",\n    value: function serializeRemoteFilter(combinedFilter) {\n      if (!Array.isArray(combinedFilter)) {\n        return combinedFilter;\n      }\n      var _this$dataAccessors$e2 = this.dataAccessors.expr,\n        endDateExpr = _this$dataAccessors$e2.endDateExpr,\n        startDateExpr = _this$dataAccessors$e2.startDateExpr;\n      var filter = extend([], combinedFilter);\n      if (isString(filter[0])) {\n        if (this.forceIsoDateParsing && filter.length > 1) {\n          if (filter[0] === startDateExpr || filter[0] === endDateExpr) {\n            var lastFilterValue = filter[filter.length - 1];\n            filter[filter.length - 1] = dateSerialization.serializeDate(new Date(lastFilterValue), this.dateSerializationFormat);\n          }\n        }\n      }\n      for (var i = 0; i < filter.length; i += 1) {\n        filter[i] = this.serializeRemoteFilter(filter[i]);\n      }\n      return filter;\n    }\n  }, {\n    key: \"getUserFilter\",\n    value: function getUserFilter(dateFilter) {\n      if (!this.dataSourceFilter || equalByValue(this.dataSourceFilter, dateFilter)) {\n        return;\n      }\n      var containsDateFilter = this.dataSourceFilter.length > 0 && equalByValue(this.dataSourceFilter[FilterPosition.dateFilter], dateFilter);\n      var userFilter = containsDateFilter ? this.dataSourceFilter[FilterPosition.userFilter] : this.dataSourceFilter;\n      return userFilter;\n    }\n  }, {\n    key: \"combine\",\n    value: function combine(min, max) {\n      var _getDatesWithoutTime = getDatesWithoutTime(min, max),\n        _getDatesWithoutTime2 = _slicedToArray(_getDatesWithoutTime, 2),\n        trimMin = _getDatesWithoutTime2[0],\n        trimMax = _getDatesWithoutTime2[1];\n      var dateFilter = this.makeDateFilter(trimMin, trimMax);\n      var userFilter = this.getUserFilter(dateFilter);\n      var combinedFilter = this.combineFilters(dateFilter, userFilter);\n      return combinedFilter;\n    }\n  }, {\n    key: \"dataAccessors\",\n    get: function get() {\n      return this.options.dataAccessors;\n    }\n  }, {\n    key: \"dataSourceFilter\",\n    get: function get() {\n      return this.options.dataSourceFilter;\n    }\n  }, {\n    key: \"dateSerializationFormat\",\n    get: function get() {\n      return this.options.dateSerializationFormat;\n    }\n  }, {\n    key: \"forceIsoDateParsing\",\n    get: function get() {\n      return isDefined(this.options.forceIsoDateParsing) ? this.options.forceIsoDateParsing : true;\n    }\n  }]);\n  return RemoteFilterCombiner;\n}();\nvar combineRemoteFilter = function combineRemoteFilter(options) {\n  return new RemoteFilterCombiner(options).combine(options.min, options.max);\n};\nexport default combineRemoteFilter;","map":null,"metadata":{},"sourceType":"module"}