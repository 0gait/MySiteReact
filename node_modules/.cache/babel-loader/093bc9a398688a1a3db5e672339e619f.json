{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.2.4\n * Build date: Thu Jan 19 2023\n *\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDxTemplate = void 0;\nvar React = require(\"react\");\nvar helpers_1 = require(\"./helpers\");\nvar template_wrapper_1 = require(\"./template-wrapper\");\nvar component_base_1 = require(\"./component-base\");\nvar events = require(\"devextreme/events\");\nfunction unwrapElement(element) {\n  return element.get ? element.get(0) : element;\n}\nfunction createDxTemplate(createContentProvider, templatesStore, keyFn) {\n  var renderedTemplates = new helpers_1.DoubleKeyMap();\n  return {\n    render: function render(data) {\n      var container = unwrapElement(data.container);\n      var key = {\n        key1: data.model,\n        key2: container\n      };\n      var prevTemplateId = renderedTemplates.get(key);\n      var templateId;\n      var onRemoved = function onRemoved() {\n        templatesStore.setDeferredRemove(templateId, true);\n        renderedTemplates.delete(key);\n      };\n      var _subscribeOnContainerRemoval = function _subscribeOnContainerRemoval() {\n        if (container.nodeType === Node.ELEMENT_NODE) {\n          events.one(container, component_base_1.DX_REMOVE_EVENT, onRemoved);\n        }\n      };\n      var _unsubscribeOnContainerRemoval = function _unsubscribeOnContainerRemoval() {\n        if (container.nodeType === Node.ELEMENT_NODE) {\n          events.off(container, component_base_1.DX_REMOVE_EVENT, onRemoved);\n        }\n      };\n      if (prevTemplateId) {\n        templateId = prevTemplateId;\n      } else {\n        templateId = keyFn ? keyFn(data.model) : \"__template_\" + helpers_1.generateID();\n        if (data.model !== undefined) {\n          renderedTemplates.set(key, templateId);\n        }\n      }\n      _subscribeOnContainerRemoval();\n      templatesStore.add(templateId, function () {\n        var props = {\n          data: data.model,\n          index: data.index\n        };\n        var contentProvider = createContentProvider();\n        return React.createElement(template_wrapper_1.TemplateWrapper, {\n          content: contentProvider(props),\n          container: container,\n          onRemoved: onRemoved,\n          onDidMount: function onDidMount() {\n            var _a;\n            _unsubscribeOnContainerRemoval();\n            templatesStore.setDeferredRemove(templateId, false);\n            (_a = data.onRendered) === null || _a === void 0 ? void 0 : _a.call(data);\n          },\n          key: templateId\n        });\n      });\n      return container;\n    }\n  };\n}\nexports.createDxTemplate = createDxTemplate;","map":null,"metadata":{},"sourceType":"script"}