{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table_body.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"dataCellTemplate\", \"isVerticalGroupOrientation\", \"leftVirtualCellCount\", \"leftVirtualCellWidth\", \"rightVirtualCellCount\", \"rightVirtualCellWidth\", \"viewData\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { Row } from \"../../row\";\nimport { AllDayPanelCell as Cell } from \"./cell\";\nimport { combineClasses } from \"../../../../../../utils/combine_classes\";\nexport var viewFunction = function viewFunction(viewModel) {\n  return createComponentVNode(2, Row, {\n    leftVirtualCellWidth: viewModel.props.leftVirtualCellWidth,\n    rightVirtualCellWidth: viewModel.props.rightVirtualCellWidth,\n    leftVirtualCellCount: viewModel.props.leftVirtualCellCount,\n    rightVirtualCellCount: viewModel.props.rightVirtualCellCount,\n    className: viewModel.classes,\n    children: viewModel.props.viewData.map(function (_ref) {\n      var endDate = _ref.endDate,\n        cellGroupIndex = _ref.groupIndex,\n        groups = _ref.groups,\n        cellIndex = _ref.index,\n        isFirstGroupCell = _ref.isFirstGroupCell,\n        isFocused = _ref.isFocused,\n        isLastGroupCell = _ref.isLastGroupCell,\n        isSelected = _ref.isSelected,\n        key = _ref.key,\n        startDate = _ref.startDate;\n      return createComponentVNode(2, Cell, {\n        isFirstGroupCell: !viewModel.props.isVerticalGroupOrientation && isFirstGroupCell,\n        isLastGroupCell: !viewModel.props.isVerticalGroupOrientation && isLastGroupCell,\n        startDate: startDate,\n        endDate: endDate,\n        groups: groups,\n        groupIndex: cellGroupIndex,\n        index: cellIndex,\n        dataCellTemplate: viewModel.props.dataCellTemplate,\n        isSelected: isSelected,\n        isFocused: isFocused\n      }, key);\n    })\n  });\n};\nexport var AllDayPanelTableBodyProps = {\n  viewData: Object.freeze([]),\n  isVerticalGroupOrientation: false,\n  className: \"\",\n  leftVirtualCellWidth: 0,\n  rightVirtualCellWidth: 0\n};\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\nexport var AllDayPanelTableBody = /*#__PURE__*/function (_BaseInfernoComponent) {\n  _inherits(AllDayPanelTableBody, _BaseInfernoComponent);\n  function AllDayPanelTableBody(props) {\n    var _this;\n    _classCallCheck(this, AllDayPanelTableBody);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllDayPanelTableBody).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n  _createClass(AllDayPanelTableBody, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          dataCellTemplate: getTemplate(props.dataCellTemplate)\n        }),\n        classes: this.classes,\n        restAttributes: this.restAttributes\n      });\n    }\n  }, {\n    key: \"classes\",\n    get: function get() {\n      var className = this.props.className;\n      return combineClasses(_defineProperty({\n        \"dx-scheduler-all-day-table-row\": true\n      }, className, !!className));\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n      return restProps;\n    }\n  }]);\n  return AllDayPanelTableBody;\n}(BaseInfernoComponent);\nAllDayPanelTableBody.defaultProps = AllDayPanelTableBodyProps;","map":null,"metadata":{},"sourceType":"module"}