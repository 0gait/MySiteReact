{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/plain_data_source.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport TreeMapBase from \"./tree_map.base\";\nvar proto = TreeMapBase.prototype;\nproto._optionChangesMap.idField = proto._optionChangesMap.parentField = \"NODES_CREATE\";\nproto._processDataSourceItems = function (items) {\n  var i;\n  var struct = {};\n  var currentItem;\n  var idField = this._getOption(\"idField\", true);\n  var parentField = this._getOption(\"parentField\", true);\n  var parentId;\n  var rootNodes = [];\n  var tmpItems;\n  var item;\n  if (!idField || !parentField || 0 === items.length) {\n    return {\n      items: items,\n      isPlain: false\n    };\n  }\n  for (i = 0; i < items.length; i++) {\n    currentItem = items[i];\n    parentId = currentItem[parentField];\n    if (parentId) {\n      struct[parentId] = struct[parentId] || {\n        items: []\n      };\n      tmpItems = struct[parentId].items;\n    } else {\n      tmpItems = rootNodes;\n    }\n    tmpItems.push(currentItem);\n  }\n  treeFiller({\n    struct: struct,\n    idField: idField\n  }, rootNodes);\n  for (item in struct) {\n    struct[item] && rootNodes.push(struct[item]);\n  }\n  return {\n    items: rootNodes,\n    isPlain: true\n  };\n};\nfunction treeFiller(context, items) {\n  var currentItem;\n  var i;\n  var struct = context.struct;\n  var id;\n  for (i = 0; i < items.length; i++) {\n    currentItem = items[i];\n    id = currentItem[context.idField];\n    if (struct[id]) {\n      currentItem.items = struct[id].items;\n      struct[id] = null;\n      treeFiller(context, currentItem.items);\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}