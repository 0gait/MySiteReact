{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/cells_selection_state.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getSelectedCells } from \"../../../renovation/ui/scheduler/workspaces/base/utils\";\nvar CellsSelectionState = /*#__PURE__*/function () {\n  function CellsSelectionState(viewDataProvider) {\n    _classCallCheck(this, CellsSelectionState);\n    this._viewDataProvider = viewDataProvider;\n    this._focusedCell = null;\n    this._selectedCells = null;\n    this._firstSelectedCell = null;\n    this._prevFocusedCell = null;\n    this._prevSelectedCells = null;\n  }\n  _createClass(CellsSelectionState, [{\n    key: \"setFocusedCell\",\n    value: function setFocusedCell(rowIndex, columnIndex, isAllDay) {\n      if (rowIndex >= 0) {\n        var cell = this._viewDataProvider.getCellData(rowIndex, columnIndex, isAllDay);\n        this._focusedCell = cell;\n      }\n    }\n  }, {\n    key: \"setSelectedCells\",\n    value: function setSelectedCells(lastCellCoordinates) {\n      var firstCellCoordinates = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\n      var viewDataProvider = this._viewDataProvider;\n      var lastRowIndex = lastCellCoordinates.rowIndex,\n        lastColumnIndex = lastCellCoordinates.columnIndex,\n        isLastCellAllDay = lastCellCoordinates.allDay;\n      if (lastRowIndex < 0) {\n        return;\n      }\n      var firstCell = firstCellCoordinates ? viewDataProvider.getCellData(firstCellCoordinates.rowIndex, firstCellCoordinates.columnIndex, firstCellCoordinates.allDay) : this._firstSelectedCell;\n      var lastCell = viewDataProvider.getCellData(lastRowIndex, lastColumnIndex, isLastCellAllDay);\n      this._firstSelectedCell = firstCell;\n      this._selectedCells = getSelectedCells(this._viewDataProvider, firstCell, lastCell, isLastCellAllDay);\n    }\n  }, {\n    key: \"setSelectedCellsByData\",\n    value: function setSelectedCellsByData(selectedCellsData) {\n      this._selectedCells = selectedCellsData;\n    }\n  }, {\n    key: \"getSelectedCells\",\n    value: function getSelectedCells() {\n      return this._selectedCells;\n    }\n  }, {\n    key: \"releaseSelectedAndFocusedCells\",\n    value: function releaseSelectedAndFocusedCells() {\n      this.releaseSelectedCells();\n      this.releaseFocusedCell();\n    }\n  }, {\n    key: \"releaseSelectedCells\",\n    value: function releaseSelectedCells() {\n      this._prevSelectedCells = this._selectedCells;\n      this._prevFirstSelectedCell = this._firstSelectedCell;\n      this._selectedCells = null;\n      this._firstSelectedCell = null;\n    }\n  }, {\n    key: \"releaseFocusedCell\",\n    value: function releaseFocusedCell() {\n      this._prevFocusedCell = this._focusedCell;\n      this._focusedCell = null;\n    }\n  }, {\n    key: \"restoreSelectedAndFocusedCells\",\n    value: function restoreSelectedAndFocusedCells() {\n      this._selectedCells = this._selectedCells || this._prevSelectedCells;\n      this._focusedCell = this._focusedCell || this._prevFocusedCell;\n      this._firstSelectedCell = this._firstSelectedCell || this._prevFirstSelectedCell;\n      this._prevSelectedCells = null;\n      this._prevFirstSelectedCell = null;\n      this._prevFocusedCell = null;\n    }\n  }, {\n    key: \"clearSelectedAndFocusedCells\",\n    value: function clearSelectedAndFocusedCells() {\n      this._prevSelectedCells = null;\n      this._selectedCells = null;\n      this._prevFocusedCell = null;\n      this._focusedCell = null;\n    }\n  }, {\n    key: \"viewDataProvider\",\n    get: function get() {\n      return this._viewDataProvider;\n    }\n  }, {\n    key: \"focusedCell\",\n    get: function get() {\n      var focusedCell = this._focusedCell;\n      if (!focusedCell) {\n        return;\n      }\n      var groupIndex = focusedCell.groupIndex,\n        startDate = focusedCell.startDate,\n        allDay = focusedCell.allDay;\n      var cellInfo = {\n        groupIndex: groupIndex,\n        startDate: startDate,\n        isAllDay: allDay,\n        index: focusedCell.index\n      };\n      var cellPosition = this.viewDataProvider.findCellPositionInMap(cellInfo);\n      return {\n        coordinates: cellPosition,\n        cellData: focusedCell\n      };\n    }\n  }]);\n  return CellsSelectionState;\n}();\nexport { CellsSelectionState as default };","map":null,"metadata":{},"sourceType":"module"}