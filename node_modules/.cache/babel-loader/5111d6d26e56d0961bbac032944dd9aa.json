{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\MySiteReact\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n/**\r\n * DevExtreme (esm/ui/html_editor/modules/imageUpload.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Quill from \"devextreme-quill\";\nimport BaseModule from \"./base\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport $ from \"../../../core/renderer\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { urlUpload, getFileUploaderBaseOptions, correctSlashesInUrl } from \"../utils/image_uploader_helper\";\nimport { addNamespace } from \"../../../events/utils/index\";\nimport FileUploader from \"../../file_uploader\";\nvar MODULE_NAMESPACE = \"dxHtmlEditorImageUpload\";\nvar HIDDEN_FILE_UPLOADER_CLASS = \"dx-htmleditor-hidden-content\";\nvar ImageUploadModule = BaseModule;\nif (Quill) {\n  ImageUploadModule = /*#__PURE__*/function (_BaseModule) {\n    _inherits(ImageUploadModule, _BaseModule);\n    function ImageUploadModule(quill, options) {\n      var _this;\n      _classCallCheck(this, ImageUploadModule);\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageUploadModule).call(this, quill, options));\n      _this.options = options;\n      _this._quillContainer = _this.editorInstance._getQuillContainer();\n      _this.addCleanCallback(_this.prepareCleanCallback());\n      _this._handleServerUpload();\n      return _this;\n    }\n    _createClass(ImageUploadModule, [{\n      key: \"_handleServerUpload\",\n      value: function _handleServerUpload() {\n        var useServerUpload = isDefined(this.options.fileUploadMode) && \"base64\" !== this.options.fileUploadMode;\n        useServerUpload ? this._enableDragAndDropUploading() : this._disableDragAndDropUploading();\n      }\n    }, {\n      key: \"_getUploaderModule\",\n      value: function _getUploaderModule() {\n        if (!this._uploaderModule) {\n          this._uploaderModule = this.quill.getModule(\"uploader\");\n        }\n        return this._uploaderModule;\n      }\n    }, {\n      key: \"_disableDragAndDropUploading\",\n      value: function _disableDragAndDropUploading() {\n        var _this$_fileUploader;\n        this._getUploaderModule().preventImageUploading(false);\n        this._detachEvents();\n        null === (_this$_fileUploader = this._fileUploader) || void 0 === _this$_fileUploader ? void 0 : _this$_fileUploader.dispose();\n      }\n    }, {\n      key: \"_enableDragAndDropUploading\",\n      value: function _enableDragAndDropUploading() {\n        this._initFileUploader();\n        this._getUploaderModule().preventImageUploading(true);\n        this._attachEvents();\n      }\n    }, {\n      key: \"_initFileUploader\",\n      value: function _initFileUploader() {\n        var $container = $(\"<div>\").addClass(HIDDEN_FILE_UPLOADER_CLASS).appendTo(this._quillContainer);\n        var fileUploaderOptions = extend({}, getFileUploaderBaseOptions(), {\n          uploadUrl: this.options.uploadUrl,\n          onUploaded: this._onUploaded.bind(this)\n        }, this.options.fileUploaderOptions);\n        this._fileUploader = this.editorInstance._createComponent($container, FileUploader, fileUploaderOptions);\n        return $container;\n      }\n    }, {\n      key: \"_onUploaded\",\n      value: function _onUploaded(data) {\n        var _this$quill$getSelect;\n        var _ref = null !== (_this$quill$getSelect = this.quill.getSelection()) && void 0 !== _this$quill$getSelect ? _this$quill$getSelect : {\n            index: this.quill.getLength()\n          },\n          pasteIndex = _ref.index;\n        var imageUrl = correctSlashesInUrl(this.options.uploadDirectory) + data.file.name;\n        urlUpload(this.quill, pasteIndex, {\n          src: imageUrl\n        });\n        this.quill.setSelection(pasteIndex + 1, 0);\n      }\n    }, {\n      key: \"_attachEvents\",\n      value: function _attachEvents() {\n        eventsEngine.on(this.quill.root, addNamespace(\"drop\", MODULE_NAMESPACE), this._dropHandler.bind(this));\n        eventsEngine.on(this.quill.root, addNamespace(\"paste\", MODULE_NAMESPACE), this._pasteHandler.bind(this));\n      }\n    }, {\n      key: \"_detachEvents\",\n      value: function _detachEvents() {\n        eventsEngine.off(this.quill.root, MODULE_NAMESPACE);\n      }\n    }, {\n      key: \"_dropHandler\",\n      value: function _dropHandler(e) {\n        this._handleInsertImages(e, \"dataTransfer\");\n      }\n    }, {\n      key: \"_pasteHandler\",\n      value: function _pasteHandler(e) {\n        this._handleInsertImages(e, \"clipboardData\");\n      }\n    }, {\n      key: \"_handleInsertImages\",\n      value: function _handleInsertImages(e, filesField) {\n        this.saveValueChangeEvent(e);\n        var files = Array.from(e.originalEvent[filesField].files || []);\n        var uploads = files;\n        if (uploads.length) {\n          e.preventDefault();\n          e.stopPropagation();\n          this._fileUploader.option(\"value\", uploads);\n          this._fileUploader.upload();\n        }\n      }\n    }, {\n      key: \"clean\",\n      value: function clean() {\n        this._disableDragAndDropUploading();\n      }\n    }, {\n      key: \"prepareCleanCallback\",\n      value: function prepareCleanCallback() {\n        var _this2 = this;\n        return function () {\n          _this2.clean();\n        };\n      }\n    }, {\n      key: \"option\",\n      value: function option(_option, value) {\n        switch (_option) {\n          case \"imageUpload\":\n            this.handleOptionChangeValue(value);\n            break;\n          case \"fileUploadMode\":\n            this.options.fileUploadMode = value;\n            this._handleServerUpload();\n            break;\n          case \"fileUploaderOptions\":\n            this._fileUploader.option(value);\n        }\n      }\n    }]);\n    return ImageUploadModule;\n  }(BaseModule);\n}\nexport default ImageUploadModule;","map":null,"metadata":{},"sourceType":"module"}