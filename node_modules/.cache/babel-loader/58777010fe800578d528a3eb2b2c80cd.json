{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\tiriq\\\\Documents\\\\Tiago\\\\MyThings\\\\MyProjects\\\\site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\n/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/large.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\"];\nimport { createFragment, createComponentVNode } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { combineClasses } from \"../../../utils/combine_classes\";\nimport { LightButton } from \"../common/light_button\";\nimport { InternalPagerProps } from \"../common/pager_props\";\nimport { PAGER_SELECTED_PAGE_SIZE_CLASS, PAGER_PAGE_SIZE_CLASS, FIRST_CHILD_CLASS } from \"../common/consts\";\nimport messageLocalization from \"../../../../localization/message\";\nimport { format } from \"../../../../core/utils/string\";\nexport var viewFunction = function viewFunction(_ref) {\n  var pageSizesText = _ref.pageSizesText;\n  return createFragment(pageSizesText.map(function (_ref2) {\n    var className = _ref2.className,\n      click = _ref2.click,\n      label = _ref2.label,\n      text = _ref2.text;\n    return createComponentVNode(2, LightButton, {\n      className: className,\n      label: label,\n      onClick: click,\n      children: text\n    }, text);\n  }), 0);\n};\nexport var PageSizeLargeProps = {};\nvar PageSizeLargePropsType = {\n  get pageSize() {\n    return InternalPagerProps.pageSize;\n  }\n};\nexport var PageSizeLarge = /*#__PURE__*/function (_BaseInfernoComponent) {\n  _inherits(PageSizeLarge, _BaseInfernoComponent);\n  function PageSizeLarge(props) {\n    var _this;\n    _classCallCheck(this, PageSizeLarge);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PageSizeLarge).call(this, props));\n    _this.state = {};\n    _this.__getterCache = {};\n    _this.onPageSizeChange = _this.onPageSizeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(PageSizeLarge, [{\n    key: \"onPageSizeChange\",\n    value: function onPageSizeChange(processedPageSize) {\n      var _this2 = this;\n      return function () {\n        _this2.props.pageSizeChange(processedPageSize);\n        return _this2.props.pageSize;\n      };\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState, context) {\n      if (this.props.pageSize !== nextProps.pageSize || this.props.pageSizes !== nextProps.pageSizes || this.props.pageSizeChange !== nextProps.pageSizeChange) {\n        this.__getterCache.pageSizesText = void 0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        pageSizesText: this.pageSizesText,\n        restAttributes: this.restAttributes\n      });\n    }\n  }, {\n    key: \"pageSizesText\",\n    get: function get() {\n      var _this3 = this;\n      if (void 0 !== this.__getterCache.pageSizesText) {\n        return this.__getterCache.pageSizesText;\n      }\n      return this.__getterCache.pageSizesText = function () {\n        var _this3$props = _this3.props,\n          pageSize = _this3$props.pageSize,\n          pageSizes = _this3$props.pageSizes;\n        return pageSizes.map(function (_ref3, index) {\n          var _combineClasses;\n          var text = _ref3.text,\n            processedPageSize = _ref3.value;\n          var selected = processedPageSize === pageSize;\n          var className = combineClasses((_combineClasses = {}, _defineProperty(_combineClasses, selected ? PAGER_SELECTED_PAGE_SIZE_CLASS : PAGER_PAGE_SIZE_CLASS, true), _defineProperty(_combineClasses, FIRST_CHILD_CLASS, 0 === index), _combineClasses));\n          return {\n            className: className,\n            click: _this3.onPageSizeChange(processedPageSize),\n            label: format(messageLocalization.getFormatter(\"dxPager-pageSize\"), processedPageSize || messageLocalization.getFormatter(\"dxPager-pageSizesAllText\")),\n            text: text\n          };\n        });\n      }();\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n      return restProps;\n    }\n  }]);\n  return PageSizeLarge;\n}(BaseInfernoComponent);\nPageSizeLarge.defaultProps = PageSizeLargePropsType;","map":null,"metadata":{},"sourceType":"module"}